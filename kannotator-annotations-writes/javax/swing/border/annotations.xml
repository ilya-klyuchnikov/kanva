<root>
    <item name='javax.swing.border.AbstractBorder java.awt.Component.BaselineResizeBehavior getBaselineResizeBehavior(java.awt.Component) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.border.AbstractBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.border.AbstractBorder boolean isLeftToRight(java.awt.Component) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.border.BevelBorder BevelBorder(int, java.awt.Color, java.awt.Color) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.border.BevelBorder BevelBorder(int, java.awt.Color, java.awt.Color) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.border.BevelBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.border.BevelBorder void paintLoweredBevel(java.awt.Component, java.awt.Graphics, int, int, int, int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.border.BevelBorder void paintRaisedBevel(java.awt.Component, java.awt.Graphics, int, int, int, int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.border.CompoundBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.border.EmptyBorder EmptyBorder(java.awt.Insets) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.border.EmptyBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.border.EtchedBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.border.EtchedBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.border.LineBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.border.MatteBorder MatteBorder(java.awt.Insets, java.awt.Color) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.border.MatteBorder MatteBorder(java.awt.Insets, javax.swing.Icon) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.border.MatteBorder java.awt.Insets computeInsets(java.awt.Insets) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.border.MatteBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.border.MatteBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.border.SoftBevelBorder SoftBevelBorder(int, java.awt.Color, java.awt.Color) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.border.SoftBevelBorder SoftBevelBorder(int, java.awt.Color, java.awt.Color) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.border.SoftBevelBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.border.SoftBevelBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.border.StrokeBorder StrokeBorder(java.awt.BasicStroke) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.border.StrokeBorder StrokeBorder(java.awt.BasicStroke, java.awt.Paint) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.border.StrokeBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.border.TitledBorder int getBaseline(java.awt.Component, int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.border.TitledBorder java.awt.Component.BaselineResizeBehavior getBaselineResizeBehavior(java.awt.Component) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.border.TitledBorder java.awt.Insets getBorderInsets(javax.swing.border.Border, java.awt.Component, java.awt.Insets) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.border.TitledBorder javax.swing.JLabel getLabel(java.awt.Component) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
