<root>
    <item name='javax.management.monitor.CounterMonitor void onErrorNotification(javax.management.monitor.MonitorNotification) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.monitor.CounterMonitor void setDerivedGaugeWithDifference(java.lang.Number, java.lang.Number, javax.management.monitor.CounterMonitor.CounterMonitorObservedObject) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.monitor.CounterMonitor void setDerivedGaugeWithDifference(java.lang.Number, java.lang.Number, javax.management.monitor.CounterMonitor.CounterMonitorObservedObject) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.monitor.CounterMonitor void setInitThreshold(java.lang.Number) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.monitor.CounterMonitor void setModulus(java.lang.Number) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.monitor.CounterMonitor void setOffset(java.lang.Number) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.monitor.CounterMonitor void setThreshold(java.lang.Number) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.monitor.CounterMonitor boolean updateDerivedGauge(java.lang.Object, javax.management.monitor.CounterMonitor.CounterMonitorObservedObject) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.monitor.CounterMonitor javax.management.monitor.MonitorNotification updateNotifications(javax.management.monitor.CounterMonitor.CounterMonitorObservedObject) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.monitor.CounterMonitor void updateThreshold(javax.management.monitor.CounterMonitor.CounterMonitorObservedObject) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.monitor.GaugeMonitor boolean isFirstGreaterThanLast(java.lang.Number, java.lang.Number, javax.management.monitor.Monitor.NumericalType) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.monitor.GaugeMonitor boolean isFirstStrictlyGreaterThanLast(java.lang.Number, java.lang.Number, java.lang.String) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.monitor.GaugeMonitor void onErrorNotification(javax.management.monitor.MonitorNotification) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.monitor.GaugeMonitor void setDerivedGaugeWithDifference(java.lang.Number, javax.management.monitor.GaugeMonitor.GaugeMonitorObservedObject) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.monitor.GaugeMonitor void setThresholds(java.lang.Number, java.lang.Number) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.monitor.GaugeMonitor void setThresholds(java.lang.Number, java.lang.Number) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.monitor.GaugeMonitor boolean updateDerivedGauge(java.lang.Object, javax.management.monitor.GaugeMonitor.GaugeMonitorObservedObject) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.monitor.GaugeMonitor javax.management.monitor.MonitorNotification updateNotifications(javax.management.monitor.GaugeMonitor.GaugeMonitorObservedObject) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.monitor.Monitor java.util.concurrent.Future access$002(javax.management.monitor.Monitor, java.util.concurrent.Future) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.monitor.Monitor java.util.concurrent.ScheduledFuture access$400(javax.management.monitor.Monitor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.monitor.Monitor java.util.concurrent.ScheduledFuture access$402(javax.management.monitor.Monitor, java.util.concurrent.ScheduledFuture) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.monitor.Monitor java.security.AccessControlContext access$500(javax.management.monitor.Monitor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.monitor.Monitor void access$600(javax.management.monitor.Monitor, javax.management.monitor.Monitor.ObservedObject, int, int[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.monitor.Monitor javax.management.monitor.Monitor.SchedulerTask access$700(javax.management.monitor.Monitor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.monitor.Monitor void addObservedObject(javax.management.ObjectName) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.monitor.Monitor java.lang.Class&lt;? extends java.lang.Number&gt; classForType(javax.management.monitor.Monitor.NumericalType) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.monitor.Monitor java.lang.Object getAttribute(javax.management.MBeanServerConnection, javax.management.ObjectName, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.monitor.Monitor java.lang.Object getAttribute(javax.management.MBeanServerConnection, javax.management.ObjectName, java.lang.String) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.monitor.Monitor boolean isAlreadyNotified(javax.management.monitor.Monitor.ObservedObject, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.monitor.Monitor void resetAlreadyNotified(javax.management.monitor.Monitor.ObservedObject, int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.monitor.Monitor void setObservedAttribute(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.monitor.Monitor void setObservedObject(javax.management.ObjectName) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.monitor.Monitor void updateAlreadyNotified(javax.management.monitor.Monitor.ObservedObject, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.monitor.MonitorNotification MonitorNotification(java.lang.String, java.lang.Object, long, long, java.lang.String, javax.management.ObjectName, java.lang.String, java.lang.Object, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.monitor.StringMonitor void onErrorNotification(javax.management.monitor.MonitorNotification) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.monitor.StringMonitor void setStringToCompare(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
