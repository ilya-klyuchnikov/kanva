<root>
    <item name='javax.management.openmbean.ArrayType ArrayType(int, javax.management.openmbean.OpenType&lt;?&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.ArrayType ArrayType(javax.management.openmbean.SimpleType&lt;?&gt;, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.ArrayType java.lang.String buildArrayClassName(int, javax.management.openmbean.OpenType&lt;?&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.ArrayType java.lang.String buildArrayClassName(int, javax.management.openmbean.OpenType&lt;?&gt;, boolean) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.ArrayType java.lang.String buildArrayDescription(int, javax.management.openmbean.OpenType&lt;?&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.ArrayType java.lang.String buildArrayDescription(int, javax.management.openmbean.OpenType&lt;?&gt;, boolean) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.ArrayType boolean checkElementsType(java.lang.Object[], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.ArrayType javax.management.openmbean.ArrayType&lt;E[]&gt; getArrayType(javax.management.openmbean.OpenType&lt;E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.ArrayType javax.management.openmbean.ArrayType&lt;T&gt; getPrimitiveArrayType(java.lang.Class&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.CompositeDataInvocationHandler CompositeDataInvocationHandler(javax.management.openmbean.CompositeData) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.CompositeDataInvocationHandler CompositeDataInvocationHandler(javax.management.openmbean.CompositeData, com.sun.jmx.mbeanserver.MXBeanLookup) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.CompositeDataInvocationHandler java.lang.Object invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.CompositeDataSupport CompositeDataSupport(java.util.SortedMap&lt;java.lang.String,java.lang.Object&gt;, javax.management.openmbean.CompositeType) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.CompositeDataSupport CompositeDataSupport(java.util.SortedMap&lt;java.lang.String,java.lang.Object&gt;, javax.management.openmbean.CompositeType) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.CompositeDataSupport CompositeDataSupport(javax.management.openmbean.CompositeType, java.util.Map&lt;java.lang.String,?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.CompositeDataSupport CompositeDataSupport(javax.management.openmbean.CompositeType, java.util.Map&lt;java.lang.String,?&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.CompositeDataSupport CompositeDataSupport(javax.management.openmbean.CompositeType, java.lang.String[], java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.CompositeDataSupport CompositeDataSupport(javax.management.openmbean.CompositeType, java.lang.String[], java.lang.Object[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.CompositeDataSupport CompositeDataSupport(javax.management.openmbean.CompositeType, java.lang.String[], java.lang.Object[]) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.CompositeDataSupport java.lang.Object get(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.CompositeDataSupport java.util.SortedMap&lt;java.lang.String,java.lang.Object&gt; makeMap(java.util.Map&lt;java.lang.String,?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.CompositeDataSupport java.util.SortedMap&lt;java.lang.String,java.lang.Object&gt; makeMap(java.lang.String[], java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.CompositeDataSupport java.util.SortedMap&lt;java.lang.String,java.lang.Object&gt; makeMap(java.lang.String[], java.lang.Object[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.CompositeType CompositeType(java.lang.String, java.lang.String, java.lang.String[], java.lang.String[], javax.management.openmbean.OpenType&lt;?&gt;[]) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.CompositeType CompositeType(java.lang.String, java.lang.String, java.lang.String[], java.lang.String[], javax.management.openmbean.OpenType&lt;?&gt;[]) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.CompositeType CompositeType(java.lang.String, java.lang.String, java.lang.String[], java.lang.String[], javax.management.openmbean.OpenType&lt;?&gt;[]) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.CompositeType void checkForEmptyString(java.lang.String[], java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.CompositeType void checkForNullElement(java.lang.Object[], java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.OpenMBeanAttributeInfoSupport void check(javax.management.openmbean.OpenMBeanParameterInfo) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.OpenMBeanAttributeInfoSupport java.lang.Comparable&lt;?&gt; comparableValueFrom(javax.management.Descriptor, java.lang.String, javax.management.openmbean.OpenType&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.OpenMBeanAttributeInfoSupport int compare(java.lang.Object, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.OpenMBeanAttributeInfoSupport T convertFrom(java.lang.Object, javax.management.openmbean.OpenType&lt;T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.OpenMBeanAttributeInfoSupport T convertFromString(java.lang.String, javax.management.openmbean.OpenType&lt;T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.OpenMBeanAttributeInfoSupport T convertFromStringArray(java.lang.Object, javax.management.openmbean.OpenType&lt;T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.OpenMBeanAttributeInfoSupport T convertFromStrings(java.lang.Object, javax.management.openmbean.OpenType&lt;T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.OpenMBeanAttributeInfoSupport int hashCode(javax.management.openmbean.OpenMBeanParameterInfo) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.OpenMBeanAttributeInfoSupport boolean isValue(javax.management.openmbean.OpenMBeanParameterInfo, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.OpenMBeanAttributeInfoSupport java.lang.String toString(javax.management.openmbean.OpenMBeanParameterInfo) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.OpenMBeanAttributeInfoSupport T valueFrom(javax.management.Descriptor, java.lang.String, javax.management.openmbean.OpenType&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.OpenMBeanAttributeInfoSupport java.util.Set&lt;T&gt; valuesFrom(javax.management.Descriptor, java.lang.String, javax.management.openmbean.OpenType&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.OpenMBeanConstructorInfoSupport OpenMBeanConstructorInfoSupport(java.lang.String, java.lang.String, javax.management.openmbean.OpenMBeanParameterInfo[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.OpenMBeanConstructorInfoSupport OpenMBeanConstructorInfoSupport(java.lang.String, java.lang.String, javax.management.openmbean.OpenMBeanParameterInfo[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.OpenMBeanConstructorInfoSupport OpenMBeanConstructorInfoSupport(java.lang.String, java.lang.String, javax.management.openmbean.OpenMBeanParameterInfo[], javax.management.Descriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.OpenMBeanConstructorInfoSupport OpenMBeanConstructorInfoSupport(java.lang.String, java.lang.String, javax.management.openmbean.OpenMBeanParameterInfo[], javax.management.Descriptor) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.OpenMBeanInfoSupport int arraySetHash(T[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.OpenMBeanInfoSupport boolean sameArrayContents(T[], T[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.OpenMBeanInfoSupport boolean sameArrayContents(T[], T[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.OpenMBeanOperationInfoSupport OpenMBeanOperationInfoSupport(java.lang.String, java.lang.String, javax.management.openmbean.OpenMBeanParameterInfo[], javax.management.openmbean.OpenType&lt;?&gt;, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.OpenMBeanOperationInfoSupport OpenMBeanOperationInfoSupport(java.lang.String, java.lang.String, javax.management.openmbean.OpenMBeanParameterInfo[], javax.management.openmbean.OpenType&lt;?&gt;, int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.OpenMBeanOperationInfoSupport OpenMBeanOperationInfoSupport(java.lang.String, java.lang.String, javax.management.openmbean.OpenMBeanParameterInfo[], javax.management.openmbean.OpenType&lt;?&gt;, int) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.OpenMBeanOperationInfoSupport OpenMBeanOperationInfoSupport(java.lang.String, java.lang.String, javax.management.openmbean.OpenMBeanParameterInfo[], javax.management.openmbean.OpenType&lt;?&gt;, int, javax.management.Descriptor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.OpenMBeanOperationInfoSupport OpenMBeanOperationInfoSupport(java.lang.String, java.lang.String, javax.management.openmbean.OpenMBeanParameterInfo[], javax.management.openmbean.OpenType&lt;?&gt;, int, javax.management.Descriptor) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.OpenMBeanOperationInfoSupport OpenMBeanOperationInfoSupport(java.lang.String, java.lang.String, javax.management.openmbean.OpenMBeanParameterInfo[], javax.management.openmbean.OpenType&lt;?&gt;, int, javax.management.Descriptor) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.OpenType void readObject(java.io.ObjectInputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.SimpleType SimpleType(java.lang.Class&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.TabularDataSupport TabularDataSupport(javax.management.openmbean.TabularType) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.TabularDataSupport TabularDataSupport(javax.management.openmbean.TabularType, int, float) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.TabularDataSupport java.lang.Object[] calculateIndex(javax.management.openmbean.CompositeData) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.TabularDataSupport void checkKeyType(java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.TabularDataSupport java.util.List&lt;?&gt; checkValueAndIndex(javax.management.openmbean.CompositeData) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.TabularDataSupport void checkValueType(javax.management.openmbean.CompositeData) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.TabularDataSupport java.lang.Object get(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.TabularDataSupport javax.management.openmbean.CompositeData get(java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.TabularDataSupport java.util.List&lt;?&gt; internalCalculateIndex(javax.management.openmbean.CompositeData) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.TabularDataSupport javax.management.openmbean.CompositeData internalPut(javax.management.openmbean.CompositeData) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.TabularDataSupport java.lang.Object put(java.lang.Object, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.TabularDataSupport void put(javax.management.openmbean.CompositeData) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.TabularDataSupport void readObject(java.io.ObjectInputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.TabularDataSupport java.lang.Object remove(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.TabularDataSupport javax.management.openmbean.CompositeData remove(java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.TabularType TabularType(java.lang.String, java.lang.String, javax.management.openmbean.CompositeType, java.lang.String[]) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.TabularType TabularType(java.lang.String, java.lang.String, javax.management.openmbean.CompositeType, java.lang.String[]) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.TabularType void checkForEmptyString(java.lang.String[], java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.management.openmbean.TabularType void checkForNullElement(java.lang.Object[], java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
