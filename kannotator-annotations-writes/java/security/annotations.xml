<root>
    <item name='java.security.AccessControlContext AccessControlContext(java.security.AccessControlContext, java.security.DomainCombiner) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AccessControlContext AccessControlContext(java.security.ProtectionDomain[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AccessControlContext void checkPermission(java.security.Permission) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AccessControlContext java.security.AccessControlContext goCombiner(java.security.ProtectionDomain[], java.security.AccessControlContext) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AccessController void checkPermission(java.security.Permission) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AlgorithmParameterGenerator java.security.AlgorithmParameterGenerator getInstance(java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AlgorithmParameterGenerator java.security.AlgorithmParameterGenerator getInstance(java.lang.String, java.security.Provider) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AlgorithmParameters java.security.AlgorithmParameters getInstance(java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AlgorithmParameters java.security.AlgorithmParameters getInstance(java.lang.String, java.security.Provider) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AllPermissionCollection boolean access$000(java.security.AllPermissionCollection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AllPermissionCollection void add(java.security.Permission) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.BasicPermission BasicPermission(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.BasicPermission BasicPermission(java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.BasicPermission void init(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.BasicPermission void readObject(java.io.ObjectInputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.BasicPermissionCollection void add(java.security.Permission) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.BasicPermissionCollection void readObject(java.io.ObjectInputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.BasicPermissionCollection void writeObject(java.io.ObjectOutputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.CodeSigner CodeSigner(java.security.cert.CertPath, java.security.Timestamp) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.CodeSigner void readObject(java.io.ObjectInputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.CodeSource void readObject(java.io.ObjectInputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.CodeSource void writeObject(java.io.ObjectOutputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.DigestInputStream int read(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.DigestOutputStream void write(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.GuardedObject void writeObject(java.io.ObjectOutputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Identity void addCertificate(java.security.Certificate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Identity boolean identityEquals(java.security.Identity) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Identity boolean keyEquals(java.security.Key, java.security.Key) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Identity boolean keyEquals(java.security.Key, java.security.Key) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.IdentityScope java.security.Identity getIdentity(java.security.Principal) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyFactory java.security.KeyFactory getInstance(java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyFactory java.security.KeyFactory getInstance(java.lang.String, java.security.Provider) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyPairGenerator.Delegate Delegate(sun.security.jca.GetInstance.Instance, java.util.Iterator&lt;java.security.Provider.Service&gt;, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyPairGenerator java.security.KeyPairGenerator getInstance(java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyPairGenerator java.security.KeyPairGenerator getInstance(java.lang.String, java.security.Provider) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyPairGenerator java.security.KeyPairGenerator getInstance(sun.security.jca.GetInstance.Instance, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyRep KeyRep(java.security.KeyRep.Type, java.lang.String, java.lang.String, byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyRep KeyRep(java.security.KeyRep.Type, java.lang.String, java.lang.String, byte[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyRep KeyRep(java.security.KeyRep.Type, java.lang.String, java.lang.String, byte[]) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyRep KeyRep(java.security.KeyRep.Type, java.lang.String, java.lang.String, byte[]) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.Builder.1 java.security.KeyStore.ProtectionParameter getProtectionParameter(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.Builder.2 java.io.IOException access$602(java.security.KeyStore.Builder.2, java.io.IOException) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.Builder.2 boolean access$702(java.security.KeyStore.Builder.2, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.Builder.2 java.security.KeyStore.ProtectionParameter getProtectionParameter(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.Builder.FileBuilder java.security.KeyStore.ProtectionParameter access$100(java.security.KeyStore.Builder.FileBuilder) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.Builder.FileBuilder java.security.Provider access$200(java.security.KeyStore.Builder.FileBuilder) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.Builder.FileBuilder java.lang.String access$300(java.security.KeyStore.Builder.FileBuilder) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.Builder.FileBuilder java.io.File access$400(java.security.KeyStore.Builder.FileBuilder) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.Builder.FileBuilder java.security.KeyStore.ProtectionParameter access$502(java.security.KeyStore.Builder.FileBuilder, java.security.KeyStore.ProtectionParameter) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.Builder.FileBuilder java.security.KeyStore.ProtectionParameter getProtectionParameter(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.Builder java.security.KeyStore.Builder newInstance(java.lang.String, java.security.Provider, java.io.File, java.security.KeyStore.ProtectionParameter) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.Builder java.security.KeyStore.Builder newInstance(java.lang.String, java.security.Provider, java.io.File, java.security.KeyStore.ProtectionParameter) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.Builder java.security.KeyStore.Builder newInstance(java.lang.String, java.security.Provider, java.io.File, java.security.KeyStore.ProtectionParameter) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.Builder java.security.KeyStore.Builder newInstance(java.lang.String, java.security.Provider, java.security.KeyStore.ProtectionParameter) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.Builder java.security.KeyStore.Builder newInstance(java.lang.String, java.security.Provider, java.security.KeyStore.ProtectionParameter) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.Builder java.security.KeyStore.Builder newInstance(java.security.KeyStore, java.security.KeyStore.ProtectionParameter) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.Builder java.security.KeyStore.Builder newInstance(java.security.KeyStore, java.security.KeyStore.ProtectionParameter) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.CallbackHandlerProtection CallbackHandlerProtection(javax.security.auth.callback.CallbackHandler) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.PrivateKeyEntry PrivateKeyEntry(java.security.PrivateKey, java.security.cert.Certificate[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.PrivateKeyEntry PrivateKeyEntry(java.security.PrivateKey, java.security.cert.Certificate[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.SecretKeyEntry SecretKeyEntry(javax.crypto.SecretKey) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.TrustedCertificateEntry TrustedCertificateEntry(java.security.cert.Certificate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore boolean access$000(java.security.KeyStore) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore boolean entryInstanceOf(java.lang.String, java.lang.Class&lt;? extends java.security.KeyStore.Entry&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore boolean entryInstanceOf(java.lang.String, java.lang.Class&lt;? extends java.security.KeyStore.Entry&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore java.security.KeyStore.Entry getEntry(java.lang.String, java.security.KeyStore.ProtectionParameter) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore java.security.KeyStore getInstance(java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore java.security.KeyStore getInstance(java.lang.String, java.security.Provider) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore void setEntry(java.lang.String, java.security.KeyStore.Entry, java.security.KeyStore.ProtectionParameter) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore void setEntry(java.lang.String, java.security.KeyStore.Entry, java.security.KeyStore.ProtectionParameter) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStoreSpi void engineSetEntry(java.lang.String, java.security.KeyStore.Entry, java.security.KeyStore.ProtectionParameter) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.MessageDigest.Delegate int engineDigest(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.MessageDigest.Delegate void engineUpdate(java.nio.ByteBuffer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.MessageDigest java.lang.String access$000(java.security.MessageDigest) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.MessageDigest java.security.Provider access$100(java.security.MessageDigest) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.MessageDigest java.security.Provider access$102(java.security.MessageDigest, java.security.Provider) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.MessageDigest int access$200(java.security.MessageDigest) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.MessageDigest int access$202(java.security.MessageDigest, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.MessageDigest byte[] digest(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.MessageDigest int digest(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.MessageDigest java.security.MessageDigest getInstance(java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.MessageDigest java.security.MessageDigest getInstance(java.lang.String, java.security.Provider) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.MessageDigest boolean isEqual(byte[], byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.MessageDigest boolean isEqual(byte[], byte[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.MessageDigest void update(java.nio.ByteBuffer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.MessageDigest void update(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.MessageDigest void update(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.MessageDigestSpi int engineDigest(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.MessageDigestSpi void engineUpdate(java.nio.ByteBuffer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Permissions void add(java.security.Permission) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Permissions java.security.PermissionCollection getPermissionCollection(java.security.Permission, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Permissions void readObject(java.io.ObjectInputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Permissions void writeObject(java.io.ObjectOutputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.PermissionsHash void readObject(java.io.ObjectInputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.PermissionsHash void writeObject(java.io.ObjectOutputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Policy.UnsupportedEmptyCollection void add(java.security.Permission) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Policy java.security.Policy getInstance(java.lang.String, java.security.Policy.Parameters, java.lang.String) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Policy java.security.Policy getInstance(java.lang.String, java.security.Policy.Parameters, java.security.Provider) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Policy boolean implies(java.security.ProtectionDomain, java.security.Permission) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Policy void initPolicy(java.security.Policy) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.ProtectionDomain.1 T doIntersectionPrivilege(java.security.PrivilegedAction&lt;T&gt;, java.security.AccessControlContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.ProtectionDomain.1 T doIntersectionPrivilege(java.security.PrivilegedAction&lt;T&gt;, java.security.AccessControlContext, java.security.AccessControlContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.ProtectionDomain.1 T doIntersectionPrivilege(java.security.PrivilegedAction&lt;T&gt;, java.security.AccessControlContext, java.security.AccessControlContext) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider.Service Service(java.security.Provider, java.lang.String, java.lang.String, java.lang.String, java.util.List&lt;java.lang.String&gt;, java.util.Map&lt;java.lang.String,java.lang.String&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider.Service Service(java.security.Provider, java.lang.String, java.lang.String, java.lang.String, java.util.List&lt;java.lang.String&gt;, java.util.Map&lt;java.lang.String,java.lang.String&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider.Service Service(java.security.Provider, java.lang.String, java.lang.String, java.lang.String, java.util.List&lt;java.lang.String&gt;, java.util.Map&lt;java.lang.String,java.lang.String&gt;) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider.Service Service(java.security.Provider, java.lang.String, java.lang.String, java.lang.String, java.util.List&lt;java.lang.String&gt;, java.util.Map&lt;java.lang.String,java.lang.String&gt;) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider.Service boolean access$000(java.security.Provider.Service) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider.Service java.lang.String access$302(java.security.Provider.Service, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider.Service java.lang.String access$402(java.security.Provider.Service, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider.Service void access$500(java.security.Provider.Service, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider.Service java.lang.String access$602(java.security.Provider.Service, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider.Service java.util.List access$700(java.security.Provider.Service) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider.Service java.util.Map access$800(java.security.Provider.Service) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider.Service void addAttribute(java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider.Service java.lang.String getAttribute(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider.UString UString(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider void addEngine(java.lang.String, boolean, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider java.lang.String getProperty(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider java.lang.String[] getTypeAndAlgorithm(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider void implPutAll(java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider void parseLegacyPut(java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider void putAll(java.util.Map&lt;?,?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider void putPropertyStrings(java.security.Provider.Service) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider void putService(java.security.Provider.Service) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider void readObject(java.io.ObjectInputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider void removeInvalidServices(java.util.Map&lt;java.security.Provider.ServiceKey,java.security.Provider.Service&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider void removePropertyStrings(java.security.Provider.Service) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider void removeService(java.security.Provider.Service) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.SecureRandom java.security.SecureRandom getInstance(java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.SecureRandom java.security.SecureRandom getInstance(java.lang.String, java.security.Provider) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Security int addProvider(java.security.Provider) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Security java.util.LinkedHashSet&lt;java.security.Provider&gt; getAllQualifyingCandidates(java.lang.String, java.lang.String, java.security.Provider[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Security java.util.LinkedHashSet&lt;java.security.Provider&gt; getAllQualifyingCandidates(java.lang.String, java.lang.String, java.security.Provider[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Security java.util.LinkedHashSet&lt;java.security.Provider&gt; getAllQualifyingCandidates(java.lang.String, java.lang.String, java.security.Provider[]) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Security java.lang.String[] getFilterComponents(java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Security java.lang.String[] getFilterComponents(java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Security java.lang.Object[] getImpl(java.lang.String, java.lang.String, java.security.Provider) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Security java.lang.Object[] getImpl(java.lang.String, java.lang.String, java.security.Provider, java.lang.Object) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Security java.lang.String getProperty(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Security java.lang.String getProviderProperty(java.lang.String, java.security.Provider) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Security java.lang.String getProviderProperty(java.lang.String, java.security.Provider) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Security java.security.Provider[] getProviders(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Security java.security.Provider[] getProviders(java.util.Map&lt;java.lang.String,java.lang.String&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Security java.util.LinkedHashSet&lt;java.security.Provider&gt; getProvidersNotUsingCache(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.security.Provider[]) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Security int insertProviderAt(java.security.Provider, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Security void invalidateSMCache(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Security boolean isConstraintSatisfied(java.lang.String, java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Security boolean isCriterionSatisfied(java.security.Provider, java.lang.String, java.lang.String, java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Security boolean isStandardAttr(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Security void setProperty(java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.SecurityPermission SecurityPermission(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.SecurityPermission SecurityPermission(java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signature.Delegate int engineSign(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signature.Delegate void engineUpdate(java.nio.ByteBuffer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signature.Delegate void init(java.security.SignatureSpi, int, java.security.Key, java.security.SecureRandom) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signature.Delegate java.security.SignatureSpi newInstance(java.security.Provider.Service) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signature java.lang.String access$000(java.security.Signature) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signature boolean access$200(java.security.Provider.Service) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signature java.security.Signature getInstance(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signature java.security.Signature getInstance(java.lang.String, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signature java.security.Signature getInstance(java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signature java.security.Signature getInstance(java.lang.String, java.security.Provider) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signature java.security.Signature getInstance(java.lang.String, java.security.Provider) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signature java.security.Signature getInstance(sun.security.jca.GetInstance.Instance, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signature java.security.Signature getInstanceRSA(java.security.Provider) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signature void initVerify(java.security.cert.Certificate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signature boolean isSpi(java.security.Provider.Service) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signature int sign(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signature void update(java.nio.ByteBuffer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signature void update(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signature boolean verify(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.SignatureSpi int engineSign(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.SignatureSpi void engineUpdate(java.nio.ByteBuffer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.SignedObject SignedObject(java.io.Serializable, java.security.PrivateKey, java.security.Signature) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.SignedObject void readObject(java.io.ObjectInputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.SignedObject void sign(java.security.PrivateKey, java.security.Signature) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.SignedObject boolean verify(java.security.PublicKey, java.security.Signature) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signer void setKeyPair(java.security.KeyPair) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Timestamp Timestamp(java.util.Date, java.security.cert.CertPath) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Timestamp Timestamp(java.util.Date, java.security.cert.CertPath) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Timestamp void readObject(java.io.ObjectInputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.URIParameter URIParameter(java.net.URI) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.UnresolvedPermission UnresolvedPermission(java.lang.String, java.lang.String, java.lang.String, java.security.cert.Certificate[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.UnresolvedPermission void readObject(java.io.ObjectInputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.UnresolvedPermission void writeObject(java.io.ObjectOutputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.UnresolvedPermissionCollection void add(java.security.Permission) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.UnresolvedPermissionCollection java.util.List&lt;java.security.UnresolvedPermission&gt; getUnresolvedPermissions(java.security.Permission) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.UnresolvedPermissionCollection void readObject(java.io.ObjectInputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.UnresolvedPermissionCollection void writeObject(java.io.ObjectOutputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
