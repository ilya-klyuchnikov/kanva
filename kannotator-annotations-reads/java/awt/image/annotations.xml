<root>
    <item name='java.awt.image.AffineTransformOp java.awt.image.BufferedImage createCompatibleDestImage(java.awt.image.BufferedImage, java.awt.image.ColorModel)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.AffineTransformOp java.awt.image.WritableRaster createCompatibleDestRaster(java.awt.image.Raster)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.AffineTransformOp java.awt.image.BufferedImage filter(java.awt.image.BufferedImage, java.awt.image.BufferedImage)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.AffineTransformOp java.awt.image.WritableRaster filter(java.awt.image.Raster, java.awt.image.WritableRaster)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.AffineTransformOp java.awt.geom.Rectangle2D getBounds2D(java.awt.image.BufferedImage)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.AffineTransformOp java.awt.geom.Rectangle2D getBounds2D(java.awt.image.Raster)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.AffineTransformOp java.awt.geom.Point2D getPoint2D(java.awt.geom.Point2D, java.awt.geom.Point2D)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.BandCombineOp java.awt.image.WritableRaster createCompatibleDestRaster(java.awt.image.Raster)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.BandCombineOp java.awt.image.WritableRaster filter(java.awt.image.Raster, java.awt.image.WritableRaster)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.BandCombineOp java.awt.geom.Rectangle2D getBounds2D(java.awt.image.Raster)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.BandCombineOp float[][] getMatrix()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.BandCombineOp java.awt.geom.Point2D getPoint2D(java.awt.geom.Point2D, java.awt.geom.Point2D)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.BandedSampleModel java.awt.image.SampleModel createCompatibleSampleModel(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.BandedSampleModel java.awt.image.DataBuffer createDataBuffer()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.BandedSampleModel int[] createIndicesArray(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.BandedSampleModel int[] createOffsetArray(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.BandedSampleModel java.awt.image.SampleModel createSubsetSampleModel(int[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.BandedSampleModel int[] getPixel(int, int, int[], java.awt.image.DataBuffer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.BandedSampleModel int[] getPixels(int, int, int, int, int[], java.awt.image.DataBuffer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.BandedSampleModel int[] getSamples(int, int, int, int, int, int[], java.awt.image.DataBuffer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.BufferedImage java.awt.image.WritableRaster copyData(java.awt.image.WritableRaster)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.BufferedImage java.awt.image.Raster getData()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.BufferedImage java.awt.image.Raster getData(java.awt.Rectangle)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.BufferedImage int[] getRGB(int, int, int, int, int[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.BufferedImage java.awt.image.BufferedImage getSubimage(int, int, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.BufferedImage java.awt.Point[] getWritableTileIndices()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.BufferedImage java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.BufferedImageFilter java.awt.image.WritableRaster createDCMraster()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ByteLookupTable byte[] lookupPixel(byte[], byte[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ByteLookupTable int[] lookupPixel(int[], int[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorConvertOp java.awt.image.BufferedImage ICCBIFilter(java.awt.image.BufferedImage, java.awt.color.ColorSpace, java.awt.image.BufferedImage, java.awt.color.ColorSpace)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorConvertOp java.awt.image.BufferedImage createCompatibleDestImage(java.awt.image.BufferedImage, java.awt.image.ColorModel)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorConvertOp java.awt.image.BufferedImage createCompatibleDestImage(java.awt.image.BufferedImage, java.awt.image.ColorModel, java.awt.color.ColorSpace)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorConvertOp java.awt.image.WritableRaster createCompatibleDestRaster(java.awt.image.Raster)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorConvertOp java.awt.image.BufferedImage filter(java.awt.image.BufferedImage, java.awt.image.BufferedImage)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorConvertOp java.awt.image.WritableRaster filter(java.awt.image.Raster, java.awt.image.WritableRaster)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorConvertOp java.awt.geom.Rectangle2D getBounds2D(java.awt.image.BufferedImage)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorConvertOp java.awt.geom.Rectangle2D getBounds2D(java.awt.image.Raster)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorConvertOp java.awt.geom.Point2D getPoint2D(java.awt.geom.Point2D, java.awt.geom.Point2D)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorConvertOp java.awt.image.BufferedImage nonICCBIFilter(java.awt.image.BufferedImage, java.awt.color.ColorSpace, java.awt.image.BufferedImage, java.awt.color.ColorSpace)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorConvertOp java.awt.image.WritableRaster nonICCRasterFilter(java.awt.image.Raster, java.awt.image.WritableRaster)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorModel byte[] getLinearGray16ToOtherGray8LUT(java.awt.color.ICC_ColorSpace)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorModel float[] getNormalizedComponents(java.lang.Object, float[], int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorModel float[] getNormalizedComponents(int[], int, float[], int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorModel int[] getUnnormalizedComponents(float[], int, int[], int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorModel java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ComponentColorModel int[] bitsArrayHelper(int[], int, java.awt.color.ColorSpace, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ComponentColorModel java.awt.image.ColorModel coerceData(java.awt.image.WritableRaster, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ComponentColorModel java.awt.image.SampleModel createCompatibleSampleModel(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ComponentColorModel java.awt.image.WritableRaster createCompatibleWritableRaster(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ComponentColorModel int[] getComponents(int, int[], int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ComponentColorModel int[] getComponents(java.lang.Object, int[], int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ComponentColorModel java.lang.Object getDataElements(int, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ComponentColorModel java.lang.Object getDataElements(float[], int, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ComponentColorModel java.lang.Object getDataElements(int[], int, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ComponentColorModel float[] getNormalizedComponents(java.lang.Object, float[], int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ComponentColorModel float[] getNormalizedComponents(int[], int, float[], int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ComponentColorModel int[] getUnnormalizedComponents(float[], int, int[], int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ComponentSampleModel java.awt.image.SampleModel createCompatibleSampleModel(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ComponentSampleModel java.awt.image.SampleModel createSubsetSampleModel(int[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ComponentSampleModel int[] getPixel(int, int, int[], java.awt.image.DataBuffer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ComponentSampleModel int[] getPixels(int, int, int, int, int[], java.awt.image.DataBuffer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ComponentSampleModel int[] getSampleSize()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ComponentSampleModel int[] getSamples(int, int, int, int, int, int[], java.awt.image.DataBuffer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ComponentSampleModel int[] orderBands(int[], int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ConvolveOp java.awt.image.BufferedImage createCompatibleDestImage(java.awt.image.BufferedImage, java.awt.image.ColorModel)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ConvolveOp java.awt.image.WritableRaster createCompatibleDestRaster(java.awt.image.Raster)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ConvolveOp java.awt.image.BufferedImage filter(java.awt.image.BufferedImage, java.awt.image.BufferedImage)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ConvolveOp java.awt.image.WritableRaster filter(java.awt.image.Raster, java.awt.image.WritableRaster)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ConvolveOp java.awt.geom.Rectangle2D getBounds2D(java.awt.image.BufferedImage)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ConvolveOp java.awt.geom.Rectangle2D getBounds2D(java.awt.image.Raster)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ConvolveOp java.awt.geom.Point2D getPoint2D(java.awt.geom.Point2D, java.awt.geom.Point2D)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.DataBuffer dataTypeSize'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.DirectColorModel java.awt.image.ColorModel coerceData(java.awt.image.WritableRaster, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.DirectColorModel java.awt.image.WritableRaster createCompatibleWritableRaster(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.DirectColorModel int[] getComponents(int, int[], int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.DirectColorModel int[] getComponents(java.lang.Object, int[], int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.DirectColorModel java.lang.Object getDataElements(int, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.DirectColorModel java.lang.Object getDataElements(int[], int, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.DirectColorModel java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ImageFilter java.awt.image.ImageFilter getFilterInstance(java.awt.image.ImageConsumer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.IndexColorModel java.awt.image.BufferedImage convertToIntDiscrete(java.awt.image.Raster, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.IndexColorModel java.awt.image.SampleModel createCompatibleSampleModel(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.IndexColorModel java.awt.image.WritableRaster createCompatibleWritableRaster(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.IndexColorModel java.math.BigInteger getAllValid()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.IndexColorModel int[] getComponents(int, int[], int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.IndexColorModel int[] getComponents(java.lang.Object, int[], int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.IndexColorModel java.lang.Object getDataElements(int, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.IndexColorModel java.lang.Object getDataElements(int[], int, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.IndexColorModel java.lang.Object installpixel(java.lang.Object, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.IndexColorModel java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Kernel float[] getKernelData(float[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.LookupOp java.awt.image.BufferedImage createCompatibleDestImage(java.awt.image.BufferedImage, java.awt.image.ColorModel)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.LookupOp java.awt.image.WritableRaster createCompatibleDestRaster(java.awt.image.Raster)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.LookupOp java.awt.image.BufferedImage filter(java.awt.image.BufferedImage, java.awt.image.BufferedImage)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.LookupOp java.awt.image.WritableRaster filter(java.awt.image.Raster, java.awt.image.WritableRaster)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.LookupOp java.awt.geom.Rectangle2D getBounds2D(java.awt.image.BufferedImage)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.LookupOp java.awt.geom.Rectangle2D getBounds2D(java.awt.image.Raster)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.LookupOp java.awt.geom.Point2D getPoint2D(java.awt.geom.Point2D, java.awt.geom.Point2D)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.MultiPixelPackedSampleModel java.awt.image.SampleModel createCompatibleSampleModel(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.MultiPixelPackedSampleModel java.awt.image.SampleModel createSubsetSampleModel(int[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.MultiPixelPackedSampleModel int[] getPixel(int, int, int[], java.awt.image.DataBuffer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.MultiPixelPackedSampleModel int[] getSampleSize()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.PackedColorModel int[] createBitsArray(int, int, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.PackedColorModel int[] createBitsArray(int[], int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.PackedColorModel java.awt.image.SampleModel createCompatibleSampleModel(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.PixelInterleavedSampleModel java.awt.image.SampleModel createCompatibleSampleModel(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.PixelInterleavedSampleModel java.awt.image.SampleModel createSubsetSampleModel(int[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.RGBImageFilter java.awt.image.IndexColorModel filterIndexColorModel(java.awt.image.IndexColorModel)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster java.awt.image.WritableRaster createBandedRaster(int, int, int, int, java.awt.Point)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster java.awt.image.WritableRaster createBandedRaster(int, int, int, int, int[], int[], java.awt.Point)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster java.awt.image.WritableRaster createBandedRaster(java.awt.image.DataBuffer, int, int, int, int[], int[], java.awt.Point)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster java.awt.image.Raster createChild(int, int, int, int, int, int, int[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster java.awt.image.WritableRaster createCompatibleWritableRaster()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster java.awt.image.WritableRaster createCompatibleWritableRaster(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster java.awt.image.WritableRaster createCompatibleWritableRaster(int, int, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster java.awt.image.WritableRaster createCompatibleWritableRaster(java.awt.Rectangle)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster java.awt.image.WritableRaster createInterleavedRaster(int, int, int, int, int, int[], java.awt.Point)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster java.awt.image.WritableRaster createInterleavedRaster(int, int, int, int, java.awt.Point)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster java.awt.image.WritableRaster createInterleavedRaster(java.awt.image.DataBuffer, int, int, int, int, int[], java.awt.Point)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster java.awt.image.WritableRaster createPackedRaster(int, int, int, int, int, java.awt.Point)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster java.awt.image.WritableRaster createPackedRaster(int, int, int, int[], java.awt.Point)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster java.awt.image.WritableRaster createPackedRaster(java.awt.image.DataBuffer, int, int, int, java.awt.Point)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster java.awt.image.WritableRaster createPackedRaster(java.awt.image.DataBuffer, int, int, int, int[], java.awt.Point)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster java.awt.image.Raster createRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Point)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster java.awt.image.Raster createTranslatedChild(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster java.awt.image.WritableRaster createWritableRaster(java.awt.image.SampleModel, java.awt.Point)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster java.awt.image.WritableRaster createWritableRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Point)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster java.awt.Rectangle getBounds()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster double[] getPixel(int, int, double[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster float[] getPixel(int, int, float[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster int[] getPixel(int, int, int[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster double[] getPixels(int, int, int, int, double[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster float[] getPixels(int, int, int, int, float[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster int[] getPixels(int, int, int, int, int[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster double[] getSamples(int, int, int, int, int, double[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster float[] getSamples(int, int, int, int, int, float[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster int[] getSamples(int, int, int, int, int, int[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.RescaleOp java.awt.image.ByteLookupTable createByteLut(float[], float[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.RescaleOp java.awt.image.BufferedImage createCompatibleDestImage(java.awt.image.BufferedImage, java.awt.image.ColorModel)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.RescaleOp java.awt.image.WritableRaster createCompatibleDestRaster(java.awt.image.Raster)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.RescaleOp java.awt.image.ShortLookupTable createShortLut(float[], float[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.RescaleOp java.awt.image.BufferedImage filter(java.awt.image.BufferedImage, java.awt.image.BufferedImage)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.RescaleOp java.awt.image.WritableRaster filter(java.awt.image.Raster, java.awt.image.WritableRaster)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.RescaleOp java.awt.geom.Rectangle2D getBounds2D(java.awt.image.BufferedImage)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.RescaleOp java.awt.geom.Rectangle2D getBounds2D(java.awt.image.Raster)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.RescaleOp java.awt.geom.Point2D getPoint2D(java.awt.geom.Point2D, java.awt.geom.Point2D)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.SampleModel double[] getPixel(int, int, double[], java.awt.image.DataBuffer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.SampleModel float[] getPixel(int, int, float[], java.awt.image.DataBuffer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.SampleModel int[] getPixel(int, int, int[], java.awt.image.DataBuffer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.SampleModel double[] getPixels(int, int, int, int, double[], java.awt.image.DataBuffer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.SampleModel float[] getPixels(int, int, int, int, float[], java.awt.image.DataBuffer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.SampleModel int[] getPixels(int, int, int, int, int[], java.awt.image.DataBuffer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.SampleModel double[] getSamples(int, int, int, int, int, double[], java.awt.image.DataBuffer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.SampleModel float[] getSamples(int, int, int, int, int, float[], java.awt.image.DataBuffer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.SampleModel int[] getSamples(int, int, int, int, int, int[], java.awt.image.DataBuffer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ShortLookupTable int[] lookupPixel(int[], int[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ShortLookupTable short[] lookupPixel(short[], short[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.SinglePixelPackedSampleModel java.awt.image.SampleModel createCompatibleSampleModel(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.SinglePixelPackedSampleModel java.awt.image.SampleModel createSubsetSampleModel(int[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.SinglePixelPackedSampleModel int[] getPixel(int, int, int[], java.awt.image.DataBuffer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.SinglePixelPackedSampleModel int[] getPixels(int, int, int, int, int[], java.awt.image.DataBuffer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.SinglePixelPackedSampleModel int[] getSamples(int, int, int, int, int, int[], java.awt.image.DataBuffer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.WritableRaster java.awt.image.WritableRaster createWritableChild(int, int, int, int, int, int, int[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.WritableRaster java.awt.image.WritableRaster createWritableTranslatedChild(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
