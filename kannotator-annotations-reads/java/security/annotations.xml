<root>
    <item name='java.security.AccessControlContext java.security.AccessControlContext goCombiner(java.security.ProtectionDomain[], java.security.AccessControlContext)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AccessController java.security.AccessControlContext preserveCombiner(java.security.DomainCombiner)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AlgorithmParameterGenerator java.security.AlgorithmParameterGenerator getInstance(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AlgorithmParameterGenerator java.security.AlgorithmParameterGenerator getInstance(java.lang.String, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AlgorithmParameterGenerator java.security.AlgorithmParameterGenerator getInstance(java.lang.String, java.security.Provider)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AlgorithmParameters java.security.AlgorithmParameters getInstance(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AlgorithmParameters java.security.AlgorithmParameters getInstance(java.lang.String, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AlgorithmParameters java.security.AlgorithmParameters getInstance(java.lang.String, java.security.Provider)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AllPermission java.lang.String getActions()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AllPermission java.security.PermissionCollection newPermissionCollection()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.AllPermissionCollection java.util.Enumeration&lt;java.security.Permission&gt; elements()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.BasicPermission java.lang.String getActions()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.BasicPermission java.security.PermissionCollection newPermissionCollection()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.BasicPermissionCollection java.util.Enumeration&lt;java.security.Permission&gt; elements()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.BasicPermissionCollection serialPersistentFields'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.CodeSigner java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.CodeSource java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.CryptoPrimitive $VALUES'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.CryptoPrimitive BLOCK_CIPHER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.CryptoPrimitive KEY_AGREEMENT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.CryptoPrimitive KEY_ENCAPSULATION'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.CryptoPrimitive KEY_WRAP'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.CryptoPrimitive MAC'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.CryptoPrimitive MESSAGE_DIGEST'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.CryptoPrimitive PUBLIC_KEY_ENCRYPTION'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.CryptoPrimitive SECURE_RANDOM'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.CryptoPrimitive SIGNATURE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.CryptoPrimitive STREAM_CIPHER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.CryptoPrimitive java.security.CryptoPrimitive valueOf(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.DigestInputStream java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.DigestOutputStream java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Identity java.security.Certificate[] certificates()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Identity java.lang.String printCertificates()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Identity java.lang.String printKeys()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.IdentityScope java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyFactory java.security.KeyFactory getInstance(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyFactory java.security.KeyFactory getInstance(java.lang.String, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyFactory java.security.KeyFactory getInstance(java.lang.String, java.security.Provider)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyFactory lock'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyPairGenerator.Delegate lock'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyPairGenerator java.security.KeyPairGenerator getInstance(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyPairGenerator java.security.KeyPairGenerator getInstance(java.lang.String, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyPairGenerator java.security.KeyPairGenerator getInstance(java.lang.String, java.security.Provider)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyPairGenerator java.security.KeyPairGenerator getInstance(sun.security.jca.GetInstance.Instance, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyRep.Type $VALUES'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyRep.Type PRIVATE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyRep.Type PUBLIC'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyRep.Type SECRET'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyRep.Type java.security.KeyRep.Type valueOf(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyRep PKCS8'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyRep RAW'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyRep X509'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.Builder.2.1 java.lang.Object run()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.Builder.2.1 java.security.KeyStore run()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.Builder.2 action'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.Builder.FileBuilder.1 java.lang.Object run()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.Builder.FileBuilder.1 java.security.KeyStore run()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.Builder.FileBuilder.1 java.security.KeyStore run0()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.Builder java.security.KeyStore.Builder newInstance(java.lang.String, java.security.Provider, java.io.File, java.security.KeyStore.ProtectionParameter)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.Builder java.security.KeyStore.Builder newInstance(java.lang.String, java.security.Provider, java.security.KeyStore.ProtectionParameter)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.Builder java.security.KeyStore.Builder newInstance(java.security.KeyStore, java.security.KeyStore.ProtectionParameter)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.CallbackHandlerProtection handler'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.PrivateKeyEntry chain'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.PrivateKeyEntry java.security.PrivateKey getPrivateKey()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.PrivateKeyEntry privKey'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.PrivateKeyEntry java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.SecretKeyEntry javax.crypto.SecretKey getSecretKey()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.SecretKeyEntry sKey'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.SecretKeyEntry java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.TrustedCertificateEntry cert'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.TrustedCertificateEntry java.security.cert.Certificate getTrustedCertificate()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore.TrustedCertificateEntry java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore KEYSTORE_TYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore java.lang.String getDefaultType()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore java.security.KeyStore getInstance(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore java.security.KeyStore getInstance(java.lang.String, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.KeyStore java.security.KeyStore getInstance(java.lang.String, java.security.Provider)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.MessageDigest.Delegate java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.MessageDigest java.security.MessageDigest getInstance(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.MessageDigest java.security.MessageDigest getInstance(java.lang.String, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.MessageDigest java.security.MessageDigest getInstance(java.lang.String, java.security.Provider)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.MessageDigest java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Permission java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.PermissionCollection java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Permissions java.util.Enumeration&lt;java.security.Permission&gt; elements()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Permissions serialPersistentFields'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.PermissionsHash java.util.Enumeration&lt;java.security.Permission&gt; elements()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.PermissionsHash serialPersistentFields'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Policy.UnsupportedEmptyCollection java.util.Enumeration&lt;java.security.Permission&gt; elements()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Policy UNSUPPORTED_EMPTY_COLLECTION'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Policy java.security.PermissionCollection getPermissions(java.security.ProtectionDomain)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.ProtectionDomain.2 java.lang.Object run()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.ProtectionDomain.2 java.security.PermissionCollection run()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.ProtectionDomain.3.1 map'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.ProtectionDomain.3 sun.misc.JavaSecurityProtectionDomainAccess.ProtectionDomainCache getProtectionDomainCache()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.ProtectionDomain key'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.ProtectionDomain java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider.Service CLASS0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider.Service java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider.UString lowerString'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider.UString string'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider.UString java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider ALIAS_PREFIX'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider ALIAS_PREFIX_LOWER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider java.util.Set&lt;java.lang.Object&gt; keySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider knownEngines'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Provider java.util.Collection&lt;java.lang.Object&gt; values()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.SecureClassLoader java.security.PermissionCollection getPermissions(java.security.CodeSource)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.SecureClassLoader pdcache'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.SecureRandom java.security.SecureRandom getInstance(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.SecureRandom java.security.SecureRandom getInstance(java.lang.String, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.SecureRandom java.security.SecureRandom getInstance(java.lang.String, java.security.Provider)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.SecureRandom byte[] longToByteArray(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Security java.util.LinkedHashSet&lt;java.security.Provider&gt; getAllQualifyingCandidates(java.lang.String, java.lang.String, java.security.Provider[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Security java.lang.String[] getFilterComponents(java.lang.String, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Security java.lang.Object[] getImpl(java.lang.String, java.lang.String, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Security java.lang.Object[] getImpl(java.lang.String, java.lang.String, java.lang.String, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Security java.lang.Object[] getImpl(java.lang.String, java.lang.String, java.security.Provider)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Security java.lang.Object[] getImpl(java.lang.String, java.lang.String, java.security.Provider, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Security java.util.LinkedHashSet&lt;java.security.Provider&gt; getProvidersNotUsingCache(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.security.Provider[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Security java.io.File securityPropFile(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Security spiMap'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signature.Delegate java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signature.Delegate java.security.SignatureSpi newInstance(java.security.Provider.Service)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signature RSA_CIPHER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signature RSA_SIGNATURE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signature java.security.Signature getInstance(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signature java.security.Signature getInstance(java.lang.String, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signature java.security.Signature getInstance(java.lang.String, java.security.Provider)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signature java.security.Signature getInstance(sun.security.jca.GetInstance.Instance, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signature java.security.Signature getInstanceRSA(java.security.Provider)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signature rsaIds'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signature signatureInfo'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signature java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signer java.lang.String printKeys()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Signer java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Timestamp java.util.Date getTimestamp()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.Timestamp java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.UnresolvedPermission PARAMS0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.UnresolvedPermission PARAMS1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.UnresolvedPermission PARAMS2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.UnresolvedPermission java.lang.String getActions()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.UnresolvedPermission java.security.PermissionCollection newPermissionCollection()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.UnresolvedPermission java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.UnresolvedPermissionCollection java.util.Enumeration&lt;java.security.Permission&gt; elements()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.UnresolvedPermissionCollection serialPersistentFields'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
