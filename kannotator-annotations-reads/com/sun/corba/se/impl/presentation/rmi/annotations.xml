<root>
    <item name='com.sun.corba.se.impl.presentation.rmi.DynamicMethodMarshallerImpl.1 java.lang.Object read(org.omg.CORBA_2_3.portable.InputStream)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.DynamicMethodMarshallerImpl.2 java.lang.Object read(org.omg.CORBA_2_3.portable.InputStream)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.DynamicMethodMarshallerImpl.3 java.lang.Object read(org.omg.CORBA_2_3.portable.InputStream)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.DynamicMethodMarshallerImpl.4 java.lang.Object read(org.omg.CORBA_2_3.portable.InputStream)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.DynamicMethodMarshallerImpl.5 java.lang.Object read(org.omg.CORBA_2_3.portable.InputStream)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.DynamicMethodMarshallerImpl.6 java.lang.Object read(org.omg.CORBA_2_3.portable.InputStream)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.DynamicMethodMarshallerImpl.7 java.lang.Object read(org.omg.CORBA_2_3.portable.InputStream)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.DynamicMethodMarshallerImpl.8 java.lang.Object read(org.omg.CORBA_2_3.portable.InputStream)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.DynamicMethodMarshallerImpl.ReaderWriterBase java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.DynamicStubImpl java.lang.Object readResolve()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.ExceptionHandlerImpl com.sun.corba.se.impl.presentation.rmi.ExceptionHandlerImpl.ExceptionRW getRMIExceptionRW(java.lang.Class)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.IDLNameTranslatorImpl ATTRIBUTE_METHOD_CLASH_MANGLE_CHARS'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.IDLNameTranslatorImpl BASE_IDL_ARRAY_ELEMENT_TYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.IDLNameTranslatorImpl BASE_IDL_ARRAY_MODULE_TYPE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.IDLNameTranslatorImpl GET_ATTRIBUTE_PREFIX'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.IDLNameTranslatorImpl ID_CONTAINER_CLASH_CHAR'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.IDLNameTranslatorImpl INNER_CLASS_SEPARATOR'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.IDLNameTranslatorImpl IS_ATTRIBUTE_PREFIX'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.IDLNameTranslatorImpl LEADING_UNDERSCORE_CHAR'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.IDLNameTranslatorImpl OVERLOADED_TYPE_SEPARATOR'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.IDLNameTranslatorImpl SET_ATTRIBUTE_PREFIX'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.IDLNameTranslatorImpl UNDERSCORE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.IDLNameTranslatorImpl java.lang.String charToUnicodeRepresentation(char)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.IDLNameTranslatorImpl com.sun.corba.se.spi.presentation.rmi.IDLNameTranslator get(java.lang.Class)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.IDLNameTranslatorImpl com.sun.corba.se.spi.presentation.rmi.IDLNameTranslator get(java.lang.Class[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.IDLNameTranslatorImpl java.lang.String getExceptionId(java.lang.Class)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.IDLNameTranslatorImpl java.lang.String getMappedContainerName(java.lang.Class)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.IDLNameTranslatorImpl java.lang.String mangleCaseSensitiveCollision(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.IDLNameTranslatorImpl java.lang.String mangleContainerClash(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.IDLNameTranslatorImpl java.lang.String mangleIDLKeywordClash(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.IDLNameTranslatorImpl java.lang.String mangleIdentifier(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.IDLNameTranslatorImpl java.lang.String mangleIdentifier(java.lang.String, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.IDLNameTranslatorImpl java.lang.String mangleLeadingUnderscore(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.IDLNameTranslatorImpl java.lang.String mangleOverloadedMethod(java.lang.String, java.lang.reflect.Method)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.IDLNameTranslatorImpl java.lang.String mangleUnicodeChars(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.IDLNameTranslatorImpl java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.IDLType java.lang.String getExceptionName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.IDLType java.lang.String getModuleName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.IDLType java.lang.String makeConcatenatedName(char, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.IDLTypesUtil.1 java.lang.Object run()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.IDLTypesUtil GET_PROPERTY_PREFIX'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.IDLTypesUtil IS_PROPERTY_PREFIX'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.IDLTypesUtil SET_PROPERTY_PREFIX'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.InvocationHandlerFactoryImpl classData'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.InvocationHandlerFactoryImpl java.lang.reflect.InvocationHandler getInvocationHandler()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.InvocationHandlerFactoryImpl java.lang.reflect.InvocationHandler getInvocationHandler(com.sun.corba.se.spi.presentation.rmi.DynamicStub)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.PresentationManagerImpl.ClassDataImpl this$0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.PresentationManagerImpl.NodeImpl java.util.Set getChildren()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.PresentationManagerImpl.NodeImpl java.lang.String getTypeId()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.PresentationManagerImpl.NodeImpl java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.PresentationManagerImpl java.lang.Class[] access$100(com.sun.corba.se.impl.presentation.rmi.PresentationManagerImpl, java.util.Set)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.PresentationManagerImpl com.sun.corba.se.spi.presentation.rmi.PresentationManager.ClassData getClassData(java.lang.Class)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.PresentationManagerImpl java.lang.Class[] getInterfaces(java.util.Set)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.StubFactoryFactoryBase java.lang.String getStubName(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.StubFactoryFactoryDynamicBase javax.rmi.CORBA.Tie getTie(java.lang.Class)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.StubFactoryFactoryProxyImpl com.sun.corba.se.spi.presentation.rmi.PresentationManager.StubFactory makeDynamicStubFactory(com.sun.corba.se.spi.presentation.rmi.PresentationManager, com.sun.corba.se.spi.presentation.rmi.PresentationManager.ClassData, java.lang.ClassLoader)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.sun.corba.se.impl.presentation.rmi.StubFactoryFactoryStaticImpl com.sun.corba.se.spi.presentation.rmi.PresentationManager.StubFactory createStubFactory(java.lang.String, boolean, java.lang.String, java.lang.Class, java.lang.ClassLoader)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
