<root>
    <item name='javax.swing.text.AbstractDocument.AbstractElement javax.swing.text.AttributeSet getAttributes()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.AbstractDocument.AbstractElement javax.swing.text.Document getDocument()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.AbstractDocument.AbstractElement this$0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.AbstractDocument.BidiElement java.lang.String getName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.AbstractDocument.BidiElement this$0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.AbstractDocument.BidiRootElement java.lang.String getName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.AbstractDocument.BidiRootElement this$0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.AbstractDocument.BranchElement java.lang.String getName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.AbstractDocument.BranchElement this$0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.AbstractDocument.BranchElement java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.AbstractDocument.DefaultDocumentEvent java.lang.String getRedoPresentationName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.AbstractDocument.DefaultDocumentEvent java.lang.String getUndoPresentationName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.AbstractDocument.LeafElement java.lang.String getName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.AbstractDocument.LeafElement this$0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.AbstractDocument.LeafElement java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.AbstractDocument AsyncLoadPriority'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.AbstractDocument BAD_LOCATION'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.AbstractDocument BAD_LOCK_STATE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.AbstractDocument BidiElementName'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.AbstractDocument ContentElementName'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.AbstractDocument ElementNameAttribute'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.AbstractDocument I18NProperty'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.AbstractDocument MultiByteProperty'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.AbstractDocument ParagraphElementName'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.AbstractDocument SectionElementName'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.AbstractDocument byte[] calculateBidiLevels(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.AbstractDocument javax.swing.text.Element createBranchElement(javax.swing.text.Element, javax.swing.text.AttributeSet)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.AbstractDocument javax.swing.text.Element createLeafElement(javax.swing.text.Element, javax.swing.text.AttributeSet, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.AbstractDocument javax.swing.text.Element[] getRootElements()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.AsyncBoxView javax.swing.text.AsyncBoxView.ChildState createChildState(javax.swing.text.View)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.AsyncBoxView javax.swing.text.LayoutQueue getLayoutQueue()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.BoxView javax.swing.SizeRequirements baselineRequirements(int, javax.swing.SizeRequirements)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.BoxView javax.swing.SizeRequirements calculateMajorAxisRequirements(int, javax.swing.SizeRequirements)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.BoxView javax.swing.SizeRequirements calculateMinorAxisRequirements(int, javax.swing.SizeRequirements)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.BoxView int[] updateLayoutArray(int[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.ComponentView java.awt.Shape modelToView(int, java.awt.Shape, javax.swing.text.Position.Bias)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultCaret java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit EndOfLineStringProperty'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit backwardAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit beepAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit beginAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit beginLineAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit beginParagraphAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit beginWordAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit copyAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit javax.swing.text.Document createDefaultDocument()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit cutAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit defaultActions'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit defaultKeyTypedAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit deleteNextCharAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit deleteNextWordAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit deletePrevCharAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit deletePrevWordAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit downAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit endAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit endLineAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit endParagraphAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit endWordAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit forwardAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit java.lang.String getContentType()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit insertBreakAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit insertContentAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit insertTabAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit nextWordAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit pageDownAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit pageUpAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit pasteAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit previousWordAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit readOnlyAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit selectAllAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit selectLineAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit selectParagraphAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit selectWordAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit selectionBackwardAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit selectionBeginAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit selectionBeginLineAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit selectionBeginParagraphAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit selectionBeginWordAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit selectionDownAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit selectionEndAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit selectionEndLineAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit selectionEndParagraphAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit selectionEndWordAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit selectionForwardAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit selectionNextWordAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit selectionPageDownAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit selectionPageLeftAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit selectionPageRightAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit selectionPageUpAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit selectionPreviousWordAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit selectionUpAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit toggleComponentOrientationAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit unselectAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit upAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultEditorKit writableAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultFormatter java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultFormatter java.lang.String getReplaceString(int, int, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultFormatter java.lang.String valueToString(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultHighlighter DefaultPainter'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultHighlighter java.lang.Object addHighlight(int, int, javax.swing.text.Highlighter.HighlightPainter)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultHighlighter noHighlights'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultStyledDocument.AbstractChangeHandler java.util.List&lt;javax.swing.event.ChangeListener&gt; getStaleListeners(javax.swing.event.ChangeListener)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultStyledDocument.AbstractChangeHandler queueMap'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultStyledDocument.ElementBuffer.ElemChanges java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultStyledDocument.ElementSpec java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultStyledDocument.SectionElement java.lang.String getName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultStyledDocument.SectionElement this$0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultStyledDocument javax.swing.text.Style addStyle(java.lang.String, javax.swing.text.Style)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultStyledDocument javax.swing.text.AbstractDocument.AbstractElement createDefaultRoot()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultStyledDocument javax.swing.event.ChangeListener createStyleChangeListener()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultStyledDocument javax.swing.event.ChangeListener createStyleContextChangeListener()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultStyledDocument javax.swing.text.Element getCharacterElement(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.DefaultStyledDocument java.awt.Font getFont(javax.swing.text.AttributeSet)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.Document StreamDescriptionProperty'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.Document TitleProperty'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.ElementIterator java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.FlowView.FlowStrategy javax.swing.text.View createView(javax.swing.text.FlowView, int, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.FlowView javax.swing.SizeRequirements calculateMinorAxisRequirements(int, javax.swing.SizeRequirements)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.GapContent.MarkVector java.lang.Object allocateArray(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.GapContent.RemoveUndo this$0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.GapContent.StickyPosition java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.GapContent java.lang.Object allocateArray(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.GapContent javax.swing.text.Position createPosition(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.GapContent empty'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.GapContent java.util.Vector getPositionsInRange(java.util.Vector, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.GapContent java.lang.String getString(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.GapContent javax.swing.undo.UndoableEdit insertString(int, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.GapContent javax.swing.undo.UndoableEdit remove(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.GlyphPainter1 java.awt.Shape modelToView(javax.swing.text.GlyphView, int, javax.swing.text.Position.Bias, java.awt.Shape)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.GlyphPainter2 java.awt.Shape modelToView(javax.swing.text.GlyphView, int, javax.swing.text.Position.Bias, java.awt.Shape)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.GlyphView.GlyphPainter javax.swing.text.GlyphView.GlyphPainter getPainter(javax.swing.text.GlyphView, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.GlyphView javax.swing.text.View breakView(int, int, float, float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.GlyphView javax.swing.text.View createFragment(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.IconView java.awt.Shape modelToView(int, java.awt.Shape, javax.swing.text.Position.Bias)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.InternationalFormatter EMPTY_FIELD_ARRAY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.InternationalFormatter java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.InternationalFormatter java.lang.String valueToString(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.JTextComponent.1 javax.swing.TransferHandler.DropLocation dropLocationForPoint(javax.swing.text.JTextComponent, java.awt.Point)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.JTextComponent.5 $SwitchMap$javax$swing$DropMode'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.JTextComponent.AccessibleJTextComponent javax.accessibility.AccessibleAction getAccessibleAction()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.JTextComponent.AccessibleJTextComponent javax.accessibility.AccessibleEditableText getAccessibleEditableText()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.JTextComponent.AccessibleJTextComponent javax.accessibility.AccessibleRole getAccessibleRole()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.JTextComponent.AccessibleJTextComponent javax.accessibility.AccessibleText getAccessibleText()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.JTextComponent.AccessibleJTextComponent this$0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.JTextComponent.DefaultKeymap javax.swing.Action[] getBoundActions()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.JTextComponent.DefaultKeymap javax.swing.KeyStroke[] getBoundKeyStrokes()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.JTextComponent.DefaultKeymap java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.JTextComponent.DropLocation java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.JTextComponent.InputMethodRequestsHandler java.text.AttributedCharacterIterator getCommittedText(int, int, java.text.AttributedCharacterIterator.Attribute[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.JTextComponent.InputMethodRequestsHandler java.awt.Rectangle getTextLocation(java.awt.font.TextHitInfo)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.JTextComponent.KeymapWrapper DefaultActionKey'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.JTextComponent.MutableCaretEvent java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.JTextComponent DEFAULT_KEYMAP'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.JTextComponent FOCUSED_COMPONENT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.JTextComponent FOCUS_ACCELERATOR_KEY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.JTextComponent KEYMAP_TABLE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.JTextComponent javax.swing.text.Keymap addKeymap(java.lang.String, javax.swing.text.Keymap)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.JTextComponent javax.swing.text.JTextComponent.DropLocation dropLocationForPoint(java.awt.Point)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.JTextComponent java.util.HashMap&lt;java.lang.String,javax.swing.text.Keymap&gt; getKeymapTable()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.JTextComponent java.awt.print.Printable getPrintable(java.text.MessageFormat, java.text.MessageFormat)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.JTextComponent java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.LayoutQueue DEFAULT_QUEUE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.LayoutQueue javax.swing.text.LayoutQueue getDefaultQueue()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.MaskFormatter EmptyMaskChars'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.MaskFormatter java.lang.String stripLiteralChars(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.MaskFormatter java.lang.String valueToString(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.ParagraphView.Row javax.swing.SizeRequirements calculateMajorAxisRequirements(int, javax.swing.SizeRequirements)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.ParagraphView javax.swing.text.View breakView(int, float, java.awt.Shape)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.ParagraphView javax.swing.SizeRequirements calculateMinorAxisRequirements(int, javax.swing.SizeRequirements)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.ParagraphView javax.swing.text.View createRow()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.PlainDocument javax.swing.text.AbstractDocument.AbstractElement createDefaultRoot()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.PlainDocument lineLimitAttribute'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.PlainDocument tabSizeAttribute'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.Position.Bias Backward'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.Position.Bias Forward'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.Segment java.lang.CharSequence subSequence(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.Segment java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.SimpleAttributeSet.EmptyAttributeSet javax.swing.text.AttributeSet copyAttributes()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.SimpleAttributeSet EMPTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.SimpleAttributeSet java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StringContent.RemoveUndo this$0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StringContent.StickyPosition this$0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StringContent.StickyPosition java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StringContent javax.swing.text.Position createPosition(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StringContent empty'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StringContent java.util.Vector getPositionsInRange(java.util.Vector, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StringContent java.lang.String getString(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StringContent javax.swing.undo.UndoableEdit insertString(int, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StringContent javax.swing.undo.UndoableEdit remove(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleConstants Alignment'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleConstants Background'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleConstants BidiLevel'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleConstants Bold'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleConstants ComponentAttribute'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleConstants ComponentElementName'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleConstants ComposedTextAttribute'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleConstants Family'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleConstants FirstLineIndent'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleConstants FontFamily'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleConstants FontSize'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleConstants Foreground'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleConstants IconAttribute'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleConstants IconElementName'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleConstants Italic'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleConstants LeftIndent'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleConstants LineSpacing'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleConstants ModelAttribute'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleConstants NameAttribute'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleConstants Orientation'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleConstants ResolveAttribute'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleConstants RightIndent'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleConstants Size'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleConstants SpaceAbove'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleConstants SpaceBelow'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleConstants StrikeThrough'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleConstants Subscript'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleConstants Superscript'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleConstants TabSet'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleConstants Underline'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleConstants java.lang.String getFontFamily(javax.swing.text.AttributeSet)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleContext.KeyBuilder java.lang.Object[] createTable()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleContext.NamedStyle javax.swing.text.AttributeSet copyAttributes()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleContext.NamedStyle this$0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleContext.NamedStyle java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleContext.SmallAttributeSet java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleContext.SmallAttributeSet javax.swing.text.AttributeSet copyAttributes()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleContext.SmallAttributeSet java.util.Enumeration&lt;?&gt; getAttributeNames()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleContext.SmallAttributeSet java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleContext DEFAULT_STYLE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleContext javax.swing.text.AttributeSet addAttribute(javax.swing.text.AttributeSet, java.lang.Object, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleContext javax.swing.text.AttributeSet addAttributes(javax.swing.text.AttributeSet, javax.swing.text.AttributeSet)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleContext javax.swing.text.Style addStyle(java.lang.String, javax.swing.text.Style)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleContext javax.swing.text.MutableAttributeSet createLargeAttributeSet(javax.swing.text.AttributeSet)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleContext javax.swing.text.StyleContext.SmallAttributeSet createSmallAttributeSet(javax.swing.text.AttributeSet)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleContext java.awt.Font getFont(java.lang.String, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleContext java.awt.Font getFont(javax.swing.text.AttributeSet)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleContext javax.swing.text.AttributeSet getImmutableUniqueSet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleContext javax.swing.text.MutableAttributeSet getMutableAttributeSet(javax.swing.text.AttributeSet)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleContext java.lang.Object getStaticAttributeKey(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleContext javax.swing.text.AttributeSet removeAttribute(javax.swing.text.AttributeSet, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleContext javax.swing.text.AttributeSet removeAttributes(javax.swing.text.AttributeSet, java.util.Enumeration&lt;?&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleContext javax.swing.text.AttributeSet removeAttributes(javax.swing.text.AttributeSet, javax.swing.text.AttributeSet)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyleContext java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyledEditorKit.1 java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyledEditorKit.StyledTextAction javax.swing.text.StyledDocument getStyledDocument(javax.swing.JEditorPane)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyledEditorKit.StyledTextAction javax.swing.text.StyledEditorKit getStyledEditorKit(javax.swing.JEditorPane)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyledEditorKit.StyledViewFactory javax.swing.text.View create(javax.swing.text.Element)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyledEditorKit java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyledEditorKit javax.swing.text.Document createDefaultDocument()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyledEditorKit defaultActions'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyledEditorKit defaultFactory'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.StyledEditorKit javax.swing.Action[] getActions()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.TabSet java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.TabStop java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.TableView EMPTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.TableView javax.swing.SizeRequirements calculateMinorAxisRequirements(int, javax.swing.SizeRequirements)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.TableView javax.swing.text.TableView.TableCell createTableCell(javax.swing.text.Element)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.TableView javax.swing.text.TableView.TableRow createTableRow(javax.swing.text.Element)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.TextAction javax.swing.Action[] augmentList(javax.swing.Action[], javax.swing.Action[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.TextLayoutStrategy.AttributedSegment java.util.Map&lt;java.text.AttributedCharacterIterator.Attribute,java.lang.Object&gt; getAttributes()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.View javax.swing.text.View breakView(int, int, float, float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.View javax.swing.text.View createFragment(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.View java.awt.Shape modelToView(int, javax.swing.text.Position.Bias, int, javax.swing.text.Position.Bias, java.awt.Shape)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.View sharedBiasReturn'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.WhitespaceBasedBreakIterator java.text.CharacterIterator getText()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.WrappedPlainView.WrappedLine java.awt.Shape modelToView(int, java.awt.Shape, javax.swing.text.Position.Bias)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.ZoneView.Zone this$0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.ZoneView javax.swing.text.View createZone(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
