<root>
    <item name='javax.swing.AbstractButton.AccessibleAbstractButton javax.accessibility.AccessibleAction getAccessibleAction()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.AbstractButton.AccessibleAbstractButton javax.accessibility.AccessibleExtendedComponent getAccessibleExtendedComponent()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.AbstractButton.AccessibleAbstractButton javax.accessibility.AccessibleRelationSet getAccessibleRelationSet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.AbstractButton.AccessibleAbstractButton javax.accessibility.AccessibleValue getAccessibleValue()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.AbstractButton BORDER_PAINTED_CHANGED_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.AbstractButton CONTENT_AREA_FILLED_CHANGED_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.AbstractButton DISABLED_ICON_CHANGED_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.AbstractButton DISABLED_SELECTED_ICON_CHANGED_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.AbstractButton FOCUS_PAINTED_CHANGED_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.AbstractButton HORIZONTAL_ALIGNMENT_CHANGED_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.AbstractButton HORIZONTAL_TEXT_POSITION_CHANGED_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.AbstractButton ICON_CHANGED_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.AbstractButton MARGIN_CHANGED_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.AbstractButton MNEMONIC_CHANGED_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.AbstractButton MODEL_CHANGED_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.AbstractButton PRESSED_ICON_CHANGED_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.AbstractButton ROLLOVER_ENABLED_CHANGED_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.AbstractButton ROLLOVER_ICON_CHANGED_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.AbstractButton ROLLOVER_SELECTED_ICON_CHANGED_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.AbstractButton SELECTED_ICON_CHANGED_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.AbstractButton TEXT_CHANGED_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.AbstractButton VERTICAL_ALIGNMENT_CHANGED_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.AbstractButton VERTICAL_TEXT_POSITION_CHANGED_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.AbstractButton java.beans.PropertyChangeListener createActionPropertyChangeListener(javax.swing.Action)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.AbstractButton java.beans.PropertyChangeListener createActionPropertyChangeListener0(javax.swing.Action)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.AbstractButton java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.Action ACCELERATOR_KEY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.Action ACTION_COMMAND_KEY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.Action DEFAULT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.Action DISPLAYED_MNEMONIC_INDEX_KEY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.Action LARGE_ICON_KEY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.Action LONG_DESCRIPTION'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.Action MNEMONIC_KEY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.Action NAME'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.Action SELECTED_KEY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.Action SHORT_DESCRIPTION'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.Action SMALL_ICON'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.ArrayTable java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.BorderFactory javax.swing.border.Border createBevelBorder(int, java.awt.Color, java.awt.Color)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.BorderFactory javax.swing.border.Border createBevelBorder(int, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.BorderFactory javax.swing.border.CompoundBorder createCompoundBorder()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.BorderFactory javax.swing.border.CompoundBorder createCompoundBorder(javax.swing.border.Border, javax.swing.border.Border)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.BorderFactory javax.swing.border.Border createEmptyBorder(int, int, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.BorderFactory javax.swing.border.Border createEtchedBorder(int, java.awt.Color, java.awt.Color)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.BorderFactory javax.swing.border.Border createEtchedBorder(java.awt.Color, java.awt.Color)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.BorderFactory javax.swing.border.Border createLineBorder(java.awt.Color)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.BorderFactory javax.swing.border.Border createLineBorder(java.awt.Color, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.BorderFactory javax.swing.border.Border createLineBorder(java.awt.Color, int, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.BorderFactory javax.swing.border.MatteBorder createMatteBorder(int, int, int, int, java.awt.Color)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.BorderFactory javax.swing.border.MatteBorder createMatteBorder(int, int, int, int, javax.swing.Icon)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.BorderFactory javax.swing.border.Border createSoftBevelBorder(int, java.awt.Color, java.awt.Color)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.BorderFactory javax.swing.border.Border createSoftBevelBorder(int, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.BorderFactory javax.swing.border.Border createStrokeBorder(java.awt.BasicStroke)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.BorderFactory javax.swing.border.Border createStrokeBorder(java.awt.BasicStroke, java.awt.Paint)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.BorderFactory javax.swing.border.TitledBorder createTitledBorder(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.BorderFactory javax.swing.border.TitledBorder createTitledBorder(javax.swing.border.Border)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.BorderFactory javax.swing.border.TitledBorder createTitledBorder(javax.swing.border.Border, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.BorderFactory javax.swing.border.TitledBorder createTitledBorder(javax.swing.border.Border, java.lang.String, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.BorderFactory javax.swing.border.TitledBorder createTitledBorder(javax.swing.border.Border, java.lang.String, int, int, java.awt.Font)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.BorderFactory javax.swing.border.TitledBorder createTitledBorder(javax.swing.border.Border, java.lang.String, int, int, java.awt.Font, java.awt.Color)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.BorderFactory emptyBorder'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.BorderFactory sharedEtchedBorder'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.BorderFactory sharedLoweredBevel'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.BorderFactory sharedRaisedBevel'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.Box.AccessibleBox javax.accessibility.AccessibleRole getAccessibleRole()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.Box.Filler.AccessibleBoxFiller javax.accessibility.AccessibleRole getAccessibleRole()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.Box java.awt.Component createGlue()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.Box javax.swing.Box createHorizontalBox()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.Box java.awt.Component createHorizontalGlue()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.Box java.awt.Component createHorizontalStrut(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.Box java.awt.Component createRigidArea(java.awt.Dimension)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.Box javax.swing.Box createVerticalBox()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.Box java.awt.Component createVerticalGlue()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.Box java.awt.Component createVerticalStrut(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.BoxLayout java.awt.Dimension maximumLayoutSize(java.awt.Container)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.BoxLayout java.awt.Dimension minimumLayoutSize(java.awt.Container)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.BoxLayout java.awt.Dimension preferredLayoutSize(java.awt.Container)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.BufferStrategyPaintManager LOGGER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.ButtonGroup java.util.Enumeration&lt;javax.swing.AbstractButton&gt; getElements()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.CellRendererPane.AccessibleCellRendererPane javax.accessibility.AccessibleRole getAccessibleRole()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.ClientPropertyKey $VALUES'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.ClientPropertyKey JComponent_ANCESTOR_NOTIFIER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.ClientPropertyKey JComponent_INPUT_VERIFIER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.ClientPropertyKey JComponent_TRANSFER_HANDLER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.ClientPropertyKey PopupFactory_FORCE_HEAVYWEIGHT_POPUP'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.ClientPropertyKey javax.swing.ClientPropertyKey valueOf(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.DebugGraphics java.awt.Graphics create()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.DebugGraphics java.awt.Graphics create(int, int, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.DebugGraphics java.awt.Graphics debugGraphics()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.DebugGraphics debugGraphicsInfoKey'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.DebugGraphics javax.swing.DebugGraphicsInfo info()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.DebugGraphics java.lang.String pointToString(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.DebugGraphics java.lang.String toShortString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.DefaultBoundedRangeModel java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.DefaultDesktopManager HAS_BEEN_ICONIFIED_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.DefaultDesktopManager java.awt.Rectangle[] findFloatingItems(javax.swing.JComponent)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.DefaultFocusManager comparator'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.DefaultFocusManager gluePolicy'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.DefaultFocusManager layoutPolicy'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.DefaultListCellRenderer DEFAULT_NO_FOCUS_BORDER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.DefaultListCellRenderer SAFE_NO_FOCUS_BORDER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.DefaultListCellRenderer java.awt.Component getListCellRendererComponent(javax.swing.JList&lt;?&gt;, java.lang.Object, int, boolean, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.DefaultListModel java.util.Enumeration&lt;E&gt; elements()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.DefaultListModel java.lang.Object[] toArray()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.DefaultListSelectionModel java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.DefaultListSelectionModel java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.DefaultRowSorter.FilterEntry java.lang.String getStringValue(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.DefaultRowSorter.ModelWrapper java.lang.String getStringValueAt(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.DefaultRowSorter int[] getViewToModelAsInts(javax.swing.DefaultRowSorter.Row[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.DefaultRowSorter javax.swing.RowSorter.SortKey toggle(javax.swing.RowSorter.SortKey)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.DropMode $VALUES'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.DropMode INSERT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.DropMode INSERT_COLS'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.DropMode INSERT_ROWS'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.DropMode ON'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.DropMode ON_OR_INSERT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.DropMode ON_OR_INSERT_COLS'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.DropMode ON_OR_INSERT_ROWS'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.DropMode USE_SELECTION'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.DropMode javax.swing.DropMode valueOf(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.FocusManager FOCUS_MANAGER_CLASS_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.FocusManager javax.swing.FocusManager getCurrentManager()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout.1 $SwitchMap$java$awt$Component$BaselineResizeBehavior'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout.1 $SwitchMap$javax$swing$GroupLayout$Alignment'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout.Alignment $VALUES'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout.Alignment BASELINE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout.Alignment CENTER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout.Alignment LEADING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout.Alignment TRAILING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout.Alignment javax.swing.GroupLayout.Alignment valueOf(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout.AutoPreferredGapMatch java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout.AutoPreferredGapSpring java.lang.String getMatchDescription()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout.AutoPreferredGapSpring java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout.ComponentSpring this$0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout.ContainerAutoPreferredGapSpring java.lang.String getMatchDescription()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout.Group javax.swing.GroupLayout.Group addComponent(java.awt.Component)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout.Group javax.swing.GroupLayout.Group addComponent(java.awt.Component, int, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout.Group javax.swing.GroupLayout.Group addGap(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout.Group javax.swing.GroupLayout.Group addGap(int, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout.Group javax.swing.GroupLayout.Group addGroup(javax.swing.GroupLayout.Group)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout.Group javax.swing.GroupLayout.Group addSpring(javax.swing.GroupLayout.Spring)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout.LinkInfo linked'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout.ParallelGroup javax.swing.GroupLayout.Group addComponent(java.awt.Component)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout.ParallelGroup javax.swing.GroupLayout.ParallelGroup addComponent(java.awt.Component)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout.ParallelGroup javax.swing.GroupLayout.Group addComponent(java.awt.Component, int, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout.ParallelGroup javax.swing.GroupLayout.ParallelGroup addComponent(java.awt.Component, int, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout.ParallelGroup javax.swing.GroupLayout.Group addGap(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout.ParallelGroup javax.swing.GroupLayout.ParallelGroup addGap(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout.ParallelGroup javax.swing.GroupLayout.Group addGap(int, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout.ParallelGroup javax.swing.GroupLayout.ParallelGroup addGap(int, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout.ParallelGroup javax.swing.GroupLayout.Group addGroup(javax.swing.GroupLayout.Group)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout.ParallelGroup javax.swing.GroupLayout.ParallelGroup addGroup(javax.swing.GroupLayout.Group)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout.SequentialGroup javax.swing.GroupLayout.Group addComponent(java.awt.Component)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout.SequentialGroup javax.swing.GroupLayout.SequentialGroup addComponent(java.awt.Component)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout.SequentialGroup javax.swing.GroupLayout.Group addComponent(java.awt.Component, int, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout.SequentialGroup javax.swing.GroupLayout.SequentialGroup addComponent(java.awt.Component, int, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout.SequentialGroup javax.swing.GroupLayout.SequentialGroup addComponent(boolean, java.awt.Component)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout.SequentialGroup javax.swing.GroupLayout.SequentialGroup addComponent(boolean, java.awt.Component, int, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout.SequentialGroup javax.swing.GroupLayout.Group addGap(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout.SequentialGroup javax.swing.GroupLayout.SequentialGroup addGap(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout.SequentialGroup javax.swing.GroupLayout.Group addGap(int, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout.SequentialGroup javax.swing.GroupLayout.SequentialGroup addGap(int, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout.SequentialGroup javax.swing.GroupLayout.Group addGroup(javax.swing.GroupLayout.Group)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout.SequentialGroup javax.swing.GroupLayout.SequentialGroup addGroup(javax.swing.GroupLayout.Group)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout.SequentialGroup javax.swing.GroupLayout.SequentialGroup addGroup(boolean, javax.swing.GroupLayout.Group)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout.SequentialGroup java.util.List&lt;javax.swing.GroupLayout.SpringDelta&gt; buildResizableList(int, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout.SpringDelta java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout javax.swing.GroupLayout.ComponentInfo access$600(javax.swing.GroupLayout, java.awt.Component)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout java.awt.Dimension adjustSize(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout javax.swing.GroupLayout.ParallelGroup createBaselineGroup(boolean, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout javax.swing.GroupLayout.ParallelGroup createParallelGroup()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout javax.swing.GroupLayout.ParallelGroup createParallelGroup(javax.swing.GroupLayout.Alignment)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout javax.swing.GroupLayout.ParallelGroup createParallelGroup(javax.swing.GroupLayout.Alignment, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout javax.swing.GroupLayout.SequentialGroup createSequentialGroup()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout javax.swing.GroupLayout.Group createTopLevelGroup(javax.swing.GroupLayout.Group)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout javax.swing.GroupLayout.ComponentInfo getComponentInfo(java.awt.Component)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout java.awt.Dimension maximumLayoutSize(java.awt.Container)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout java.awt.Dimension minimumLayoutSize(java.awt.Container)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout java.awt.Dimension preferredLayoutSize(java.awt.Container)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.GroupLayout java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.ImageIcon.2 java.awt.Component run()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.ImageIcon.2 java.lang.Object run()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.ImageIcon.AccessibleImageIcon javax.accessibility.AccessibleRole getAccessibleRole()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.ImageIcon TRACKER_KEY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.ImageIcon java.awt.MediaTracker getTracker()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.ImageIcon tracker'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JApplet javax.swing.JRootPane createRootPane()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JApplet java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JButton.AccessibleJButton javax.accessibility.AccessibleRole getAccessibleRole()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JButton java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JButton java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JButton uiClassID'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JCheckBox.AccessibleJCheckBox javax.accessibility.AccessibleRole getAccessibleRole()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JCheckBox.AccessibleJCheckBox this$0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JCheckBox BORDER_PAINTED_FLAT_CHANGED_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JCheckBox java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JCheckBox java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JCheckBox uiClassID'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JCheckBoxMenuItem.AccessibleJCheckBoxMenuItem javax.accessibility.AccessibleRole getAccessibleRole()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JCheckBoxMenuItem.AccessibleJCheckBoxMenuItem this$0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JCheckBoxMenuItem java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JCheckBoxMenuItem java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JCheckBoxMenuItem uiClassID'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JColorChooser.AccessibleJColorChooser javax.accessibility.AccessibleRole getAccessibleRole()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JColorChooser CHOOSER_PANELS_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JColorChooser PREVIEW_PANEL_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JColorChooser SELECTION_MODEL_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JColorChooser javax.swing.JDialog createDialog(java.awt.Component, java.lang.String, boolean, javax.swing.JColorChooser, java.awt.event.ActionListener, java.awt.event.ActionListener)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JColorChooser java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JColorChooser java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JColorChooser uiClassID'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JComboBox.AccessibleJComboBox javax.accessibility.AccessibleAction getAccessibleAction()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JComboBox.AccessibleJComboBox javax.accessibility.AccessibleRole getAccessibleRole()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JComboBox.AccessibleJComboBox javax.accessibility.AccessibleSelection getAccessibleSelection()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JComboBox.AccessibleJComboBox javax.accessibility.AccessibleStateSet getAccessibleStateSet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JComboBox.AccessibleJComboBox this$0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JComboBox java.beans.PropertyChangeListener createActionPropertyChangeListener(javax.swing.Action)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JComboBox javax.swing.JComboBox.KeySelectionManager createDefaultKeySelectionManager()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JComboBox java.lang.Object[] getSelectedObjects()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JComboBox java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JComboBox java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JComboBox uiClassID'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JComponent.AccessibleJComponent javax.accessibility.AccessibleExtendedComponent getAccessibleExtendedComponent()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JComponent.AccessibleJComponent javax.accessibility.AccessibleRole getAccessibleRole()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JComponent.KeyboardState javax.swing.JComponent.IntVector getKeyCodeArray()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JComponent.KeyboardState keyCodesKey'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JComponent.ReadObjectCallback inputStream'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JComponent.ReadObjectCallback roots'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JComponent INPUT_VERIFIER_SOURCE_KEY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JComponent KEYBOARD_BINDINGS_KEY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JComponent NEXT_FOCUS'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JComponent TOOL_TIP_TEXT_KEY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JComponent WHEN_IN_FOCUSED_WINDOW_BINDINGS'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JComponent javax.swing.JToolTip createToolTip()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JComponent defaultLocale'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JComponent focusController'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JComponent java.awt.Rectangle getBounds(java.awt.Rectangle)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JComponent java.awt.Graphics getComponentGraphics(java.awt.Graphics)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JComponent java.awt.FontMetrics getFontMetrics(java.awt.Font)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JComponent java.awt.Point getLocation(java.awt.Point)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JComponent javax.swing.KeyStroke[] getRegisteredKeyStrokes()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JComponent java.awt.Dimension getSize(java.awt.Dimension)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JComponent java.awt.Container getTopLevelAncestor()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JComponent java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JComponent java.awt.Rectangle getVisibleRect()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JComponent java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JComponent readObjectCallbacks'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JComponent uiClassID'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JDesktopPane.AccessibleJDesktopPane javax.accessibility.AccessibleRole getAccessibleRole()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JDesktopPane java.util.Collection&lt;javax.swing.JInternalFrame&gt; getAllFrames(java.awt.Container)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JDesktopPane java.util.List&lt;javax.swing.JInternalFrame&gt; getFrames()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JDesktopPane java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JDesktopPane java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JDesktopPane uiClassID'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JDialog javax.swing.JRootPane createRootPane()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JDialog defaultLookAndFeelDecoratedKey'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JDialog java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JEditorPane.AccessibleJEditorPane javax.accessibility.AccessibleStateSet getAccessibleStateSet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JEditorPane.AccessibleJEditorPane this$0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JEditorPane.AccessibleJEditorPaneHTML javax.accessibility.AccessibleText getAccessibleText()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JEditorPane.AccessibleJEditorPaneHTML this$0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JEditorPane.JEditorPaneAccessibleHypertextSupport this$0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JEditorPane.PlainEditorKit.PlainParagraph javax.swing.SizeRequirements calculateMinorAxisRequirements(int, javax.swing.SizeRequirements)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JEditorPane.PlainEditorKit javax.swing.text.ViewFactory getViewFactory()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JEditorPane HONOR_DISPLAY_PROPERTIES'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JEditorPane PostDataProperty'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JEditorPane W3C_LENGTH_UNITS'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JEditorPane javax.swing.text.Document access$100(javax.swing.JEditorPane, javax.swing.text.EditorKit, java.net.URL)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JEditorPane javax.swing.text.EditorKit createDefaultEditorKit()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JEditorPane defaultEditorKitMap'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JEditorPane javax.swing.text.EditorKit getEditorKitForContentType(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JEditorPane java.util.Hashtable&lt;java.lang.String,javax.swing.text.EditorKit&gt; getKitRegisty()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JEditorPane java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JEditorPane javax.swing.text.Document initializeModel(javax.swing.text.EditorKit, java.net.URL)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JEditorPane kitLoaderRegistryKey'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JEditorPane kitRegistryKey'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JEditorPane kitTypeRegistryKey'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JEditorPane java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JEditorPane uiClassID'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JFileChooser.AccessibleJFileChooser javax.accessibility.AccessibleRole getAccessibleRole()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JFileChooser ACCEPT_ALL_FILE_FILTER_USED_CHANGED_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JFileChooser ACCESSORY_CHANGED_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JFileChooser APPROVE_BUTTON_MNEMONIC_CHANGED_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JFileChooser APPROVE_BUTTON_TEXT_CHANGED_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JFileChooser APPROVE_BUTTON_TOOL_TIP_TEXT_CHANGED_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JFileChooser APPROVE_SELECTION'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JFileChooser CANCEL_SELECTION'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JFileChooser CHOOSABLE_FILE_FILTER_CHANGED_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JFileChooser CONTROL_BUTTONS_ARE_SHOWN_CHANGED_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JFileChooser DIALOG_TITLE_CHANGED_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JFileChooser DIALOG_TYPE_CHANGED_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JFileChooser DIRECTORY_CHANGED_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JFileChooser FILE_FILTER_CHANGED_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JFileChooser FILE_HIDING_CHANGED_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JFileChooser FILE_SELECTION_MODE_CHANGED_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JFileChooser FILE_SYSTEM_VIEW_CHANGED_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JFileChooser FILE_VIEW_CHANGED_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JFileChooser MULTI_SELECTION_ENABLED_CHANGED_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JFileChooser SELECTED_FILES_CHANGED_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JFileChooser SELECTED_FILE_CHANGED_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JFileChooser SHOW_HIDDEN_PROP'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JFileChooser javax.swing.JDialog createDialog(java.awt.Component)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JFileChooser javax.swing.filechooser.FileFilter[] getChoosableFileFilters()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JFileChooser java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JFileChooser java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JFileChooser uiClassID'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JFormattedTextField.AbstractFormatter java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JFormattedTextField defaultActions'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JFormattedTextField javax.swing.Action[] getActions()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JFormattedTextField javax.swing.JFormattedTextField.AbstractFormatterFactory getDefaultFormatterFactory(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JFormattedTextField java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JFormattedTextField uiClassID'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JFrame javax.swing.JRootPane createRootPane()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JFrame defaultLookAndFeelDecoratedKey'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JFrame java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JInternalFrame.AccessibleJInternalFrame javax.accessibility.AccessibleRole getAccessibleRole()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JInternalFrame.AccessibleJInternalFrame javax.accessibility.AccessibleValue getAccessibleValue()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JInternalFrame.JDesktopIcon.AccessibleJDesktopIcon javax.accessibility.AccessibleRole getAccessibleRole()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JInternalFrame.JDesktopIcon.AccessibleJDesktopIcon javax.accessibility.AccessibleValue getAccessibleValue()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JInternalFrame.JDesktopIcon java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JInternalFrame CONTENT_PANE_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JInternalFrame FRAME_ICON_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JInternalFrame GLASS_PANE_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JInternalFrame IS_CLOSED_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JInternalFrame IS_ICON_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JInternalFrame IS_MAXIMUM_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JInternalFrame IS_SELECTED_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JInternalFrame LAYERED_PANE_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JInternalFrame MENU_BAR_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JInternalFrame PROPERTY_CHANGE_LISTENER_KEY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JInternalFrame ROOT_PANE_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JInternalFrame TITLE_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JInternalFrame javax.swing.JRootPane createRootPane()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JInternalFrame java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JInternalFrame java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JInternalFrame uiClassID'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JLabel.AccessibleJLabel javax.accessibility.AccessibleExtendedComponent getAccessibleExtendedComponent()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JLabel.AccessibleJLabel javax.accessibility.AccessibleRelationSet getAccessibleRelationSet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JLabel.AccessibleJLabel javax.accessibility.AccessibleRole getAccessibleRole()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JLabel LABELED_BY_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JLabel java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JLabel java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JLabel uiClassID'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JLayer.1 javax.accessibility.AccessibleRole getAccessibleRole()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JLayer javax.swing.JPanel createGlassPane()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JLayer eventController'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JLayeredPane.AccessibleJLayeredPane javax.accessibility.AccessibleRole getAccessibleRole()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JLayeredPane DEFAULT_LAYER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JLayeredPane DRAG_LAYER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JLayeredPane FRAME_CONTENT_LAYER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JLayeredPane LAYER_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JLayeredPane MODAL_LAYER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JLayeredPane PALETTE_LAYER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JLayeredPane POPUP_LAYER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JLayeredPane java.awt.Component[] getComponentsInLayer(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JLayeredPane java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JList.6 $SwitchMap$javax$swing$DropMode'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JList.AccessibleJList.AccessibleJListChild javax.accessibility.AccessibleComponent getAccessibleComponent()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JList.AccessibleJList.AccessibleJListChild javax.accessibility.AccessibleContext getAccessibleContext()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JList.AccessibleJList.AccessibleJListChild javax.accessibility.AccessibleStateSet getAccessibleStateSet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JList.AccessibleJList javax.accessibility.AccessibleRole getAccessibleRole()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JList.AccessibleJList javax.accessibility.AccessibleSelection getAccessibleSelection()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JList.AccessibleJList this$0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JList.DropLocation java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JList javax.swing.ListSelectionModel createSelectionModel()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JList int[] getSelectedIndices()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JList java.lang.Object[] getSelectedValues()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JList java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JList java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JList uiClassID'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JMenu.AccessibleJMenu javax.accessibility.AccessibleRole getAccessibleRole()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JMenu.AccessibleJMenu javax.accessibility.AccessibleSelection getAccessibleSelection()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JMenu.AccessibleJMenu this$0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JMenu javax.swing.MenuElement[] access$000(javax.swing.JMenu, javax.swing.JMenu)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JMenu javax.swing.JMenuItem add(javax.swing.Action)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JMenu javax.swing.MenuElement[] buildMenuElementArray(javax.swing.JMenu)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JMenu javax.swing.JMenuItem createActionComponent(javax.swing.Action)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JMenu javax.swing.event.ChangeListener createMenuChangeListener()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JMenu javax.swing.JMenu.WinListener createWinListener(javax.swing.JPopupMenu)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JMenu java.awt.Component getComponent()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JMenu java.awt.Point getPopupMenuOrigin()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JMenu javax.swing.MenuElement[] getSubElements()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JMenu java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JMenu javax.swing.JMenuItem insert(javax.swing.Action, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JMenu java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JMenu java.awt.Point translateToPopupMenu(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JMenu java.awt.Point translateToPopupMenu(java.awt.Point)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JMenu uiClassID'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JMenuBar.AccessibleJMenuBar javax.accessibility.AccessibleRole getAccessibleRole()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JMenuBar.AccessibleJMenuBar javax.accessibility.AccessibleSelection getAccessibleSelection()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JMenuBar java.awt.Component getComponent()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JMenuBar javax.swing.MenuElement[] getSubElements()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JMenuBar java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JMenuBar java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JMenuBar uiClassID'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JMenuItem.AccessibleJMenuItem javax.accessibility.AccessibleRole getAccessibleRole()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JMenuItem.AccessibleJMenuItem this$0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JMenuItem java.awt.Component getComponent()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JMenuItem javax.swing.MenuElement[] getSubElements()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JMenuItem java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JMenuItem java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JMenuItem uiClassID'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JOptionPane.AccessibleJOptionPane javax.accessibility.AccessibleRole getAccessibleRole()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JOptionPane ICON_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JOptionPane INITIAL_SELECTION_VALUE_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JOptionPane INITIAL_VALUE_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JOptionPane INPUT_VALUE_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JOptionPane MESSAGE_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JOptionPane MESSAGE_TYPE_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JOptionPane OPTIONS_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JOptionPane OPTION_TYPE_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JOptionPane SELECTION_VALUES_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JOptionPane UNINITIALIZED_VALUE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JOptionPane VALUE_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JOptionPane WANTS_INPUT_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JOptionPane javax.swing.JDialog createDialog(java.awt.Component, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JOptionPane javax.swing.JDialog createDialog(java.awt.Component, java.lang.String, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JOptionPane javax.swing.JDialog createDialog(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JOptionPane javax.swing.JInternalFrame createInternalFrame(java.awt.Component, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JOptionPane java.awt.Frame getRootFrame()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JOptionPane java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JOptionPane java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JOptionPane sharedFrameKey'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JOptionPane uiClassID'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JPanel.AccessibleJPanel javax.accessibility.AccessibleRole getAccessibleRole()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JPanel java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JPanel java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JPanel uiClassID'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JPasswordField.AccessibleJPasswordField javax.accessibility.AccessibleRole getAccessibleRole()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JPasswordField.AccessibleJPasswordField javax.accessibility.AccessibleText getAccessibleText()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JPasswordField.AccessibleJPasswordField this$0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JPasswordField java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JPasswordField java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JPasswordField uiClassID'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JPopupMenu.AccessibleJPopupMenu javax.accessibility.AccessibleRole getAccessibleRole()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JPopupMenu.AccessibleJPopupMenu this$0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JPopupMenu.Separator java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JPopupMenu javax.swing.JMenuItem add(javax.swing.Action)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JPopupMenu java.awt.Point adjustPopupLocationToFitScreen(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JPopupMenu classLock'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JPopupMenu javax.swing.JMenuItem createActionComponent(javax.swing.Action)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JPopupMenu defaultLWPopupEnabledKey'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JPopupMenu java.awt.Component getComponent()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JPopupMenu javax.swing.Popup getPopup()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JPopupMenu javax.swing.JPopupMenu getRootPopupMenu()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JPopupMenu javax.swing.MenuElement[] getSubElements()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JPopupMenu java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JPopupMenu java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JPopupMenu uiClassID'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JProgressBar.AccessibleJProgressBar javax.accessibility.AccessibleRole getAccessibleRole()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JProgressBar.AccessibleJProgressBar javax.accessibility.AccessibleStateSet getAccessibleStateSet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JProgressBar.AccessibleJProgressBar javax.accessibility.AccessibleValue getAccessibleValue()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JProgressBar javax.swing.event.ChangeListener createChangeListener()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JProgressBar java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JProgressBar java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JProgressBar uiClassID'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JRadioButton.AccessibleJRadioButton javax.accessibility.AccessibleRole getAccessibleRole()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JRadioButton.AccessibleJRadioButton this$0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JRadioButton java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JRadioButton java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JRadioButton uiClassID'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JRadioButtonMenuItem.AccessibleJRadioButtonMenuItem javax.accessibility.AccessibleRole getAccessibleRole()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JRadioButtonMenuItem.AccessibleJRadioButtonMenuItem this$0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JRadioButtonMenuItem java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JRadioButtonMenuItem java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JRadioButtonMenuItem uiClassID'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JRootPane.AccessibleJRootPane javax.accessibility.AccessibleRole getAccessibleRole()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JRootPane.RootLayout java.awt.Dimension maximumLayoutSize(java.awt.Container)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JRootPane.RootLayout java.awt.Dimension minimumLayoutSize(java.awt.Container)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JRootPane.RootLayout java.awt.Dimension preferredLayoutSize(java.awt.Container)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JRootPane java.awt.Container createContentPane()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JRootPane java.awt.Component createGlassPane()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JRootPane javax.swing.JLayeredPane createLayeredPane()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JRootPane java.awt.LayoutManager createRootLayout()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JRootPane java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JRootPane java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JRootPane uiClassID'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JScrollBar.AccessibleJScrollBar javax.accessibility.AccessibleRole getAccessibleRole()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JScrollBar.AccessibleJScrollBar javax.accessibility.AccessibleStateSet getAccessibleStateSet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JScrollBar.AccessibleJScrollBar javax.accessibility.AccessibleValue getAccessibleValue()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JScrollBar.AccessibleJScrollBar java.lang.Number getMaximumAccessibleValue()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JScrollBar java.awt.Dimension getMaximumSize()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JScrollBar java.awt.Dimension getMinimumSize()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JScrollBar java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JScrollBar java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JScrollBar uiClassID'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JScrollPane.AccessibleJScrollPane javax.accessibility.AccessibleRole getAccessibleRole()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JScrollPane.AccessibleJScrollPane this$0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JScrollPane javax.swing.JScrollBar createHorizontalScrollBar()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JScrollPane javax.swing.JScrollBar createVerticalScrollBar()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JScrollPane javax.swing.JViewport createViewport()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JScrollPane java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JScrollPane java.awt.Rectangle getViewportBorderBounds()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JScrollPane java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JScrollPane uiClassID'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JSeparator.AccessibleJSeparator javax.accessibility.AccessibleRole getAccessibleRole()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JSeparator java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JSeparator java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JSeparator uiClassID'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JSlider.1SmartHashtable this$0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JSlider.AccessibleJSlider javax.accessibility.AccessibleRole getAccessibleRole()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JSlider.AccessibleJSlider javax.accessibility.AccessibleStateSet getAccessibleStateSet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JSlider.AccessibleJSlider javax.accessibility.AccessibleValue getAccessibleValue()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JSlider javax.swing.event.ChangeListener createChangeListener()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JSlider java.util.Hashtable createStandardLabels(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JSlider java.util.Hashtable createStandardLabels(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JSlider java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JSlider java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JSlider uiClassID'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JSpinner.AccessibleJSpinner javax.accessibility.AccessibleAction getAccessibleAction()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JSpinner.AccessibleJSpinner javax.accessibility.AccessibleRole getAccessibleRole()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JSpinner.AccessibleJSpinner javax.accessibility.AccessibleText getAccessibleText()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JSpinner.AccessibleJSpinner javax.accessibility.AccessibleValue getAccessibleValue()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JSpinner.AccessibleJSpinner this$0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JSpinner.DefaultEditor javax.swing.JSpinner getSpinner()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JSpinner.DefaultEditor java.awt.Dimension insetSize(java.awt.Container)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JSpinner.DefaultEditor java.awt.Dimension minimumLayoutSize(java.awt.Container)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JSpinner.DefaultEditor java.awt.Dimension preferredLayoutSize(java.awt.Container)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JSpinner.ListEditor.ListFormatter java.lang.String valueToString(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JSpinner.NumberEditorFormatter model'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JSpinner DISABLED_ACTION'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JSpinner javax.swing.JComponent createEditor(javax.swing.SpinnerModel)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JSpinner java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JSpinner uiClassID'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JSplitPane.AccessibleJSplitPane javax.accessibility.AccessibleRole getAccessibleRole()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JSplitPane.AccessibleJSplitPane javax.accessibility.AccessibleStateSet getAccessibleStateSet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JSplitPane.AccessibleJSplitPane javax.accessibility.AccessibleValue getAccessibleValue()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JSplitPane BOTTOM'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JSplitPane CONTINUOUS_LAYOUT_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JSplitPane DIVIDER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JSplitPane DIVIDER_LOCATION_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JSplitPane DIVIDER_SIZE_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JSplitPane LAST_DIVIDER_LOCATION_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JSplitPane LEFT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JSplitPane ONE_TOUCH_EXPANDABLE_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JSplitPane ORIENTATION_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JSplitPane RESIZE_WEIGHT_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JSplitPane RIGHT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JSplitPane TOP'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JSplitPane java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JSplitPane java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JSplitPane uiClassID'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTabbedPane.AccessibleJTabbedPane javax.accessibility.AccessibleRole getAccessibleRole()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTabbedPane.AccessibleJTabbedPane javax.accessibility.AccessibleSelection getAccessibleSelection()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTabbedPane.AccessibleJTabbedPane this$0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTabbedPane.Page javax.accessibility.AccessibleComponent getAccessibleComponent()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTabbedPane.Page javax.accessibility.AccessibleContext getAccessibleContext()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTabbedPane.Page javax.accessibility.AccessibleRole getAccessibleRole()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTabbedPane.Page javax.accessibility.AccessibleStateSet getAccessibleStateSet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTabbedPane.Page java.awt.Point getLocation()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTabbedPane.Page java.awt.Point getLocationOnScreen()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTabbedPane.Page java.awt.Dimension getSize()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTabbedPane java.util.List access$000(javax.swing.JTabbedPane)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTabbedPane java.awt.Component add(java.awt.Component)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTabbedPane java.awt.Component add(java.awt.Component, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTabbedPane javax.swing.event.ChangeListener createChangeListener()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTabbedPane java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTabbedPane pages'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTabbedPane java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTabbedPane uiClassID'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable.1 java.lang.String getColumnName(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable.7 $SwitchMap$javax$swing$DropMode'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable.AccessibleJTable.AccessibleJTableCell javax.accessibility.AccessibleComponent getAccessibleComponent()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable.AccessibleJTable.AccessibleJTableCell javax.accessibility.AccessibleContext getAccessibleContext()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable.AccessibleJTable.AccessibleJTableCell javax.accessibility.AccessibleStateSet getAccessibleStateSet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable.AccessibleJTable.AccessibleJTableHeaderCell javax.accessibility.AccessibleComponent getAccessibleComponent()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable.AccessibleJTable.AccessibleJTableHeaderCell javax.accessibility.AccessibleContext getAccessibleContext()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable.AccessibleJTable.AccessibleJTableHeaderCell javax.accessibility.AccessibleStateSet getAccessibleStateSet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable.AccessibleJTable.AccessibleTableHeader javax.accessibility.Accessible getAccessibleAt(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable.AccessibleJTable.AccessibleTableHeader int[] getSelectedAccessibleColumns()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable.AccessibleJTable.AccessibleTableHeader int[] getSelectedAccessibleRows()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable.AccessibleJTable javax.accessibility.AccessibleRole getAccessibleRole()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable.AccessibleJTable javax.accessibility.AccessibleSelection getAccessibleSelection()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable.AccessibleJTable javax.accessibility.AccessibleTable getAccessibleTable()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable.AccessibleJTable int[] getSelectedAccessibleRows()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable.AccessibleJTable this$0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable.BooleanRenderer java.awt.Component getTableCellRendererComponent(javax.swing.JTable, java.lang.Object, boolean, boolean, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable.BooleanRenderer noFocusBorder'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable.DropLocation java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable.ModelChange this$0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable.PrintMode $VALUES'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable.PrintMode FIT_WIDTH'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable.PrintMode NORMAL'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable.PrintMode javax.swing.JTable.PrintMode valueOf(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable int[] access$300(javax.swing.JTable, javax.swing.event.RowSorterEvent)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable int[] convertSelectionToModel(javax.swing.event.RowSorterEvent)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable javax.swing.table.TableColumnModel createDefaultColumnModel()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable javax.swing.table.TableModel createDefaultDataModel()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable javax.swing.ListSelectionModel createDefaultSelectionModel()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable javax.swing.table.JTableHeader createDefaultTableHeader()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable javax.swing.JScrollPane createScrollPaneForTable(javax.swing.JTable)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable java.awt.Rectangle getCellRect(int, int, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable java.awt.Dimension getIntercellSpacing()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable java.awt.print.Printable getPrintable(javax.swing.JTable.PrintMode, java.text.MessageFormat, java.text.MessageFormat)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable int[] getSelectedRows()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTable uiClassID'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTextArea.AccessibleJTextArea javax.accessibility.AccessibleStateSet getAccessibleStateSet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTextArea.AccessibleJTextArea this$0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTextArea javax.swing.text.Document createDefaultModel()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTextArea java.awt.Dimension getPreferredScrollableViewportSize()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTextArea java.awt.Dimension getPreferredSize()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTextArea java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTextArea java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTextArea uiClassID'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTextField.AccessibleJTextField javax.accessibility.AccessibleStateSet getAccessibleStateSet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTextField.AccessibleJTextField this$0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTextField java.beans.PropertyChangeListener createActionPropertyChangeListener(javax.swing.Action)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTextField javax.swing.text.Document createDefaultModel()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTextField defaultActions'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTextField javax.swing.Action[] getActions()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTextField java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTextField notifyAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTextField java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTextField uiClassID'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTextPane javax.swing.text.EditorKit createDefaultEditorKit()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTextPane java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTextPane java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTextPane uiClassID'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JToggleButton.AccessibleJToggleButton javax.accessibility.AccessibleRole getAccessibleRole()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JToggleButton.AccessibleJToggleButton this$0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JToggleButton java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JToggleButton java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JToggleButton uiClassID'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JToolBar.AccessibleJToolBar javax.accessibility.AccessibleRole getAccessibleRole()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JToolBar.DefaultToolBarLayout java.awt.Dimension maximumLayoutSize(java.awt.Container)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JToolBar.DefaultToolBarLayout java.awt.Dimension minimumLayoutSize(java.awt.Container)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JToolBar.DefaultToolBarLayout java.awt.Dimension preferredLayoutSize(java.awt.Container)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JToolBar.Separator java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JToolBar javax.swing.JButton add(javax.swing.Action)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JToolBar javax.swing.JButton createActionComponent(javax.swing.Action)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JToolBar java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JToolBar java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JToolBar uiClassID'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JToolTip.AccessibleJToolTip javax.accessibility.AccessibleRole getAccessibleRole()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JToolTip java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JToolTip java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JToolTip uiClassID'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTree.1 $SwitchMap$javax$swing$DropMode'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode javax.accessibility.AccessibleAction getAccessibleAction()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode javax.accessibility.AccessibleComponent getAccessibleComponent()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode javax.accessibility.AccessibleContext getAccessibleContext()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode javax.accessibility.AccessibleStateSet getAccessibleStateSet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTree.AccessibleJTree.AccessibleJTreeNode java.awt.Dimension getSize()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTree.AccessibleJTree javax.accessibility.AccessibleRole getAccessibleRole()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTree.AccessibleJTree javax.accessibility.AccessibleSelection getAccessibleSelection()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTree.AccessibleJTree this$0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTree.DropLocation java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTree.EmptySelectionModel sharedInstance'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTree ANCHOR_SELECTION_PATH_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTree CELL_EDITOR_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTree CELL_RENDERER_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTree EDITABLE_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTree EXPANDS_SELECTED_PATHS_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTree INVOKES_STOP_CELL_EDITING_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTree LARGE_MODEL_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTree LEAD_SELECTION_PATH_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTree ROOT_VISIBLE_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTree ROW_HEIGHT_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTree SCROLLS_ON_EXPAND_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTree SELECTION_MODEL_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTree SHOWS_ROOT_HANDLES_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTree TOGGLE_CLICK_COUNT_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTree TREE_MODEL_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTree VISIBLE_ROW_COUNT_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTree java.lang.String convertValueToText(java.lang.Object, boolean, boolean, boolean, int, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTree javax.swing.tree.TreeModel createTreeModel(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTree javax.swing.event.TreeModelListener createTreeModelListener()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTree javax.swing.tree.TreeModel getDefaultTreeModel()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTree javax.swing.tree.TreePath[] getPathBetweenRows(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTree java.awt.Dimension getPreferredScrollableViewportSize()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTree java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTree java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JTree uiClassID'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JViewport.AccessibleJViewport javax.accessibility.AccessibleRole getAccessibleRole()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JViewport EnableWindowBlit'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JViewport javax.swing.Timer createRepaintTimer()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JViewport javax.swing.JViewport.ViewListener createViewListener()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JViewport java.awt.Graphics getBackingStoreGraphics(java.awt.Graphics)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JViewport java.awt.Insets getInsets()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JViewport java.awt.Insets getInsets(java.awt.Insets)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JViewport java.lang.String getUIClassID()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JViewport java.awt.Point getViewLocation()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JViewport java.awt.Point getViewPosition()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JViewport java.awt.Rectangle getViewRect()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JViewport java.awt.Dimension getViewSize()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JViewport java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JViewport java.awt.Dimension toViewCoordinates(java.awt.Dimension)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JViewport java.awt.Point toViewCoordinates(java.awt.Point)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JViewport uiClassID'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JWindow javax.swing.JRootPane createRootPane()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.JWindow java.lang.String paramString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.KeyStroke javax.swing.KeyStroke getKeyStroke(char, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.KeyboardManager java.util.Hashtable registerNewTopContainer(java.awt.Container)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.LayoutFocusTraversalPolicy fitnessTestPolicy'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.LayoutStyle.ComponentPlacement $VALUES'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.LayoutStyle.ComponentPlacement INDENT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.LayoutStyle.ComponentPlacement RELATED'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.LayoutStyle.ComponentPlacement UNRELATED'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.LayoutStyle.ComponentPlacement javax.swing.LayoutStyle.ComponentPlacement valueOf(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.LookAndFeel javax.swing.ComponentInputMap makeComponentInputMap(javax.swing.JComponent, java.lang.Object[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.LookAndFeel java.lang.Object makeIcon(java.lang.Class&lt;?&gt;, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.LookAndFeel javax.swing.InputMap makeInputMap(java.lang.Object[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.LookAndFeel javax.swing.text.JTextComponent.KeyBinding[] makeKeyBindings(java.lang.Object[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.LookAndFeel java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.MenuSelectionManager MENU_SELECTION_MANAGER_KEY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.MenuSelectionManager javax.swing.MenuSelectionManager defaultManager()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.MenuSelectionManager javax.swing.MenuElement[] getSelectedPath()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.MultiUIDefaults.1 $SwitchMap$javax$swing$MultiUIDefaults$MultiUIDefaultsEnumerator$Type'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.MultiUIDefaults.MultiUIDefaultsEnumerator.Type $VALUES'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.MultiUIDefaults.MultiUIDefaultsEnumerator.Type ELEMENTS'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.MultiUIDefaults.MultiUIDefaultsEnumerator.Type KEYS'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.MultiUIDefaults.MultiUIDefaultsEnumerator.Type javax.swing.MultiUIDefaults.MultiUIDefaultsEnumerator.Type valueOf(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.MultiUIDefaults java.util.Enumeration&lt;java.lang.Object&gt; elements()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.MultiUIDefaults java.util.Set&lt;java.util.Map.Entry&lt;java.lang.Object,java.lang.Object&gt;&gt; entrySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.MultiUIDefaults java.util.Enumeration&lt;java.lang.Object&gt; keys()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.MultiUIDefaults java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.OverlayLayout java.awt.Dimension maximumLayoutSize(java.awt.Container)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.OverlayLayout java.awt.Dimension minimumLayoutSize(java.awt.Container)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.OverlayLayout java.awt.Dimension preferredLayoutSize(java.awt.Container)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.Popup java.awt.Window getParentWindow(java.awt.Component)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.PopupFactory.ContainerPopup java.awt.Rectangle getContainerPopupArea(java.awt.GraphicsConfiguration)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.PopupFactory.HeadlessPopup java.awt.Component createComponent(java.awt.Component)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.PopupFactory.HeadlessPopup javax.swing.Popup getHeadlessPopup(java.awt.Component, java.awt.Component, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.PopupFactory.HeavyWeightPopup java.util.Map access$000()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.PopupFactory.HeavyWeightPopup javax.swing.Popup getHeavyWeightPopup(java.awt.Component, java.awt.Component, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.PopupFactory.HeavyWeightPopup java.util.Map&lt;java.awt.Window,java.util.List&lt;javax.swing.PopupFactory.HeavyWeightPopup&gt;&gt; getHeavyWeightPopupCache()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.PopupFactory.HeavyWeightPopup heavyWeightPopupCacheKey'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.PopupFactory.LightWeightPopup java.awt.Component createComponent(java.awt.Component)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.PopupFactory.LightWeightPopup java.util.List&lt;javax.swing.PopupFactory.LightWeightPopup&gt; getLightWeightPopupCache()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.PopupFactory.LightWeightPopup lightWeightPopupCacheKey'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.PopupFactory.MediumWeightPopup java.awt.Component createComponent(java.awt.Component)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.PopupFactory.MediumWeightPopup java.util.List&lt;javax.swing.PopupFactory.MediumWeightPopup&gt; getMediumWeightPopupCache()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.PopupFactory.MediumWeightPopup mediumWeightPopupCacheKey'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.PopupFactory SharedInstanceKey'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.PopupFactory javax.swing.Popup getHeadlessPopup(java.awt.Component, java.awt.Component, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.PopupFactory javax.swing.PopupFactory getSharedInstance()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.ProgressMonitor.AccessibleProgressMonitor javax.accessibility.AccessibleRole getAccessibleRole()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.ProgressMonitor.ProgressOptionPane javax.swing.JDialog createDialog(java.awt.Component, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.ProgressMonitor.ProgressOptionPane this$0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.RepaintManager javax.swing.RepaintManager currentManager(java.awt.Component)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.RepaintManager javax.swing.RepaintManager currentManager(javax.swing.JComponent)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.RepaintManager javax.swing.RepaintManager currentManager(sun.awt.AppContext)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.RepaintManager processingRunnable'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.RepaintManager repaintManagerKey'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.RepaintManager java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.RowFilter.1 $SwitchMap$javax$swing$RowFilter$ComparisonType'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.RowFilter.ComparisonType $VALUES'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.RowFilter.ComparisonType AFTER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.RowFilter.ComparisonType BEFORE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.RowFilter.ComparisonType EQUAL'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.RowFilter.ComparisonType NOT_EQUAL'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.RowFilter.ComparisonType javax.swing.RowFilter.ComparisonType valueOf(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.RowFilter.Entry java.lang.String getStringValue(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.RowFilter javax.swing.RowFilter&lt;M,I&gt; andFilter(java.lang.Iterable&lt;? extends javax.swing.RowFilter&lt;? super M,? super I&gt;&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.RowFilter javax.swing.RowFilter&lt;M,I&gt; dateFilter(javax.swing.RowFilter.ComparisonType, java.util.Date, int...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.RowFilter javax.swing.RowFilter&lt;M,I&gt; notFilter(javax.swing.RowFilter&lt;M,I&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.RowFilter javax.swing.RowFilter&lt;M,I&gt; numberFilter(javax.swing.RowFilter.ComparisonType, java.lang.Number, int...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.RowFilter javax.swing.RowFilter&lt;M,I&gt; orFilter(java.lang.Iterable&lt;? extends javax.swing.RowFilter&lt;? super M,? super I&gt;&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.RowFilter javax.swing.RowFilter&lt;M,I&gt; regexFilter(java.lang.String, int...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.ScrollPaneConstants COLUMN_HEADER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.ScrollPaneConstants HORIZONTAL_SCROLLBAR'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.ScrollPaneConstants HORIZONTAL_SCROLLBAR_POLICY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.ScrollPaneConstants LOWER_LEADING_CORNER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.ScrollPaneConstants LOWER_LEFT_CORNER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.ScrollPaneConstants LOWER_RIGHT_CORNER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.ScrollPaneConstants LOWER_TRAILING_CORNER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.ScrollPaneConstants ROW_HEADER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.ScrollPaneConstants UPPER_LEADING_CORNER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.ScrollPaneConstants UPPER_LEFT_CORNER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.ScrollPaneConstants UPPER_RIGHT_CORNER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.ScrollPaneConstants UPPER_TRAILING_CORNER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.ScrollPaneConstants VERTICAL_SCROLLBAR'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.ScrollPaneConstants VERTICAL_SCROLLBAR_POLICY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.ScrollPaneConstants VIEWPORT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.ScrollPaneLayout java.awt.Rectangle getViewportBorderBounds(javax.swing.JScrollPane)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.ScrollPaneLayout java.awt.Dimension minimumLayoutSize(java.awt.Container)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.ScrollPaneLayout java.awt.Dimension preferredLayoutSize(java.awt.Container)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SizeRequirements int[] adjustSizes(int, javax.swing.SizeRequirements[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SizeRequirements javax.swing.SizeRequirements getAlignedSizeRequirements(javax.swing.SizeRequirements[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SizeRequirements javax.swing.SizeRequirements getTiledSizeRequirements(javax.swing.SizeRequirements[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SizeRequirements java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SizeSequence int[] getSizes()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SortOrder $VALUES'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SortOrder ASCENDING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SortOrder DESCENDING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SortOrder UNSORTED'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SortOrder javax.swing.SortOrder valueOf(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SortingFocusTraversalPolicy fitnessTestPolicy'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SortingFocusTraversalPolicy java.util.List&lt;java.awt.Component&gt; getFocusTraversalCycle(java.awt.Container)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SpinnerDateModel java.util.Date getDate()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SpinnerDateModel java.lang.Object getValue()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.Spring.CompoundSpring java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.Spring.StaticSpring java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.Spring javax.swing.Spring constant(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.Spring javax.swing.Spring constant(int, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.Spring javax.swing.Spring difference(javax.swing.Spring, javax.swing.Spring)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.Spring javax.swing.Spring height(java.awt.Component)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.Spring javax.swing.Spring max(javax.swing.Spring, javax.swing.Spring)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.Spring javax.swing.Spring minus(javax.swing.Spring)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.Spring javax.swing.Spring scale(javax.swing.Spring, float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.Spring javax.swing.Spring sum(javax.swing.Spring, javax.swing.Spring)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.Spring javax.swing.Spring width(java.awt.Component)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SpringLayout.1 $SwitchMap$java$awt$Component$BaselineResizeBehavior'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SpringLayout.Constraints javax.swing.Spring heightToRelativeBaseline(javax.swing.Spring)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SpringLayout.Constraints javax.swing.Spring relativeBaselineToHeight(javax.swing.Spring)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SpringLayout.SpringProxy java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SpringLayout BASELINE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SpringLayout EAST'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SpringLayout HEIGHT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SpringLayout HORIZONTAL_CENTER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SpringLayout NORTH'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SpringLayout SOUTH'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SpringLayout VERTICAL_CENTER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SpringLayout WEST'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SpringLayout WIDTH'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SpringLayout java.awt.Dimension addInsets(int, int, java.awt.Container)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SpringLayout javax.swing.SpringLayout.Constraints applyDefaults(java.awt.Component, javax.swing.SpringLayout.Constraints)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SpringLayout javax.swing.Spring getConstraint(java.lang.String, java.awt.Component)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SpringLayout javax.swing.SpringLayout.Constraints getConstraints(java.awt.Component)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SpringLayout java.awt.Dimension maximumLayoutSize(java.awt.Container)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SpringLayout java.awt.Dimension minimumLayoutSize(java.awt.Container)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SpringLayout java.awt.Dimension preferredLayoutSize(java.awt.Container)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SwingPaintEventDispatcher java.awt.event.PaintEvent createPaintEvent(java.awt.Component, int, int, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SwingUtilities java.awt.Rectangle[] computeDifference(java.awt.Rectangle, java.awt.Rectangle)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SwingUtilities java.awt.Rectangle computeIntersection(int, int, int, int, java.awt.Rectangle)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SwingUtilities java.awt.Rectangle computeUnion(int, int, int, int, java.awt.Rectangle)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SwingUtilities java.awt.event.MouseEvent convertMouseEvent(java.awt.Component, java.awt.event.MouseEvent, java.awt.Component)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SwingUtilities java.awt.Rectangle convertRectangle(java.awt.Component, java.awt.Rectangle, java.awt.Component)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SwingUtilities java.awt.Point convertScreenLocationToParent(java.awt.Container, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SwingUtilities javax.swing.CellRendererPane getCellRendererPane(java.awt.Component, java.awt.Container)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SwingUtilities java.awt.Rectangle getLocalBounds(java.awt.Component)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SwingUtilities java.awt.Frame getSharedOwnerFrame()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SwingUtilities java.awt.event.WindowListener getSharedOwnerFrameShutdownListener()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SwingUtilities sharedOwnerFrameKey'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SwingWorker.6 defaultFactory'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SwingWorker.6 java.lang.Thread newThread(java.lang.Runnable)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SwingWorker.StateValue $VALUES'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SwingWorker.StateValue DONE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SwingWorker.StateValue PENDING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SwingWorker.StateValue STARTED'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SwingWorker.StateValue javax.swing.SwingWorker.StateValue valueOf(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SwingWorker DO_SUBMIT_KEY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SwingWorker sun.swing.AccumulativeRunnable access$200(javax.swing.SwingWorker)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SwingWorker doSubmit'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SwingWorker future'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SwingWorker sun.swing.AccumulativeRunnable&lt;java.lang.Runnable&gt; getDoSubmit()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SwingWorker java.beans.PropertyChangeSupport getPropertyChangeSupport()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SwingWorker java.util.concurrent.ExecutorService getWorkersExecutorService()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.SwingWorker propertyChangeSupport'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.TablePrintable clip'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.TablePrintable hclip'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.TablePrintable tempRect'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.Timer java.util.concurrent.atomic.AtomicBoolean access$100(javax.swing.Timer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.Timer java.lang.Runnable access$300(javax.swing.Timer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.Timer doPostEvent'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.Timer lock'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.Timer notify'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.Timer java.lang.Object readResolve()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.Timer javax.swing.TimerQueue timerQueue()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.TimerQueue.DelayedTimer sequencer'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.TimerQueue classLock'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.TimerQueue expiredTimersKey'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.TimerQueue queue'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.TimerQueue runningLock'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.TimerQueue javax.swing.TimerQueue sharedInstance()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.TimerQueue sharedInstanceKey'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.TimerQueue java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.ToolTipManager TOOL_TIP_MANAGER_KEY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.ToolTipManager java.awt.event.FocusListener createFocusChangeListener()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.ToolTipManager java.awt.Frame frameForComponent(java.awt.Component)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.ToolTipManager javax.swing.ToolTipManager sharedInstance()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.TransferHandler.DropLocation dropPoint'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.TransferHandler.DropLocation java.awt.Point getDropPoint()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.TransferHandler.DropLocation java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.TransferHandler.PropertyTransferable java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.TransferHandler java.awt.dnd.DropTargetListener access$200()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.TransferHandler copyAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.TransferHandler cutAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.TransferHandler java.awt.Point getDragImageOffset()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.TransferHandler java.awt.dnd.DropTargetListener getDropTargetListener()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.TransferHandler pasteAction'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.UIDefaults.ProxyLazyValue java.lang.String printArgs(java.lang.Object[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.UIDefaults.TextAndMnemonicHashMap AND_MNEMONIC'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.UIDefaults.TextAndMnemonicHashMap TEXT_SUFFIX'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.UIDefaults.TextAndMnemonicHashMap TITLE_SUFFIX'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.UIDefaults.TextAndMnemonicHashMap java.lang.String composeKey(java.lang.String, int, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.UIDefaults PENDING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.UIDefaults java.util.Map&lt;java.lang.String,java.lang.Object&gt; getResourceCache(java.util.Locale)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.UIManager.LookAndFeelInfo java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.UIManager java.lang.String access$100()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.UIManager auxiliaryLAFsKey'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.UIManager classLock'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.UIManager defaultLAFKey'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.UIManager disableMnemonicKey'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.UIManager java.lang.String getCrossPlatformLookAndFeelClassName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.UIManager javax.swing.UIManager.LookAndFeelInfo[] getInstalledLookAndFeels()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.UIManager javax.swing.UIManager.LAFState getLAFState()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.UIManager java.lang.String getSystemLookAndFeelClassName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.UIManager installedLAFsKey'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.UIManager java.util.Properties loadSwingProperties()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.UIManager java.lang.String makeInstalledLAFKey(java.lang.String, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.UIManager java.lang.String makeSwingPropertiesFilename()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.UIManager multiplexingLAFKey'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.ViewportLayout java.awt.Dimension minimumLayoutSize(java.awt.Container)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
