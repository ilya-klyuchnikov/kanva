<root>
    <item name='javax.xml.bind.ContextFinder PLATFORM_DEFAULT_FACTORY_CLASS'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.ContextFinder javax.xml.bind.JAXBContext find(java.lang.String, java.lang.String, java.lang.ClassLoader, java.util.Map)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.ContextFinder javax.xml.bind.JAXBContext find(java.lang.Class[], java.util.Map)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.ContextFinder javax.xml.bind.JAXBException handleClassCastException(java.lang.Class, java.lang.Class)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.ContextFinder logger'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.ContextFinder javax.xml.bind.JAXBContext newInstance(java.lang.String, java.lang.Class, java.lang.ClassLoader, java.util.Map)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.ContextFinder javax.xml.bind.JAXBContext newInstance(java.lang.String, java.lang.String, java.lang.ClassLoader, java.util.Map)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.ContextFinder javax.xml.bind.JAXBContext newInstance(java.lang.Class[], java.util.Map, java.lang.Class)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.ContextFinder javax.xml.bind.JAXBContext newInstance(java.lang.Class[], java.util.Map, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.DatatypeConverter SET_DATATYPE_CONVERTER_PERMISSION'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.DatatypeConverterImpl.CalendarFormatter java.lang.String doFormat(java.lang.String, java.util.Calendar)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.DatatypeConverterImpl byte[] _parseBase64Binary(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.DatatypeConverterImpl java.math.BigInteger _parseInteger(java.lang.CharSequence)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.DatatypeConverterImpl javax.xml.namespace.QName _parseQName(java.lang.CharSequence, javax.xml.namespace.NamespaceContext)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.DatatypeConverterImpl java.lang.String _printBase64Binary(byte[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.DatatypeConverterImpl java.lang.String _printBase64Binary(byte[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.DatatypeConverterImpl java.lang.String _printBoolean(boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.DatatypeConverterImpl java.lang.String _printByte(byte)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.DatatypeConverterImpl java.lang.String _printDate(java.util.Calendar)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.DatatypeConverterImpl java.lang.String _printDateTime(java.util.Calendar)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.DatatypeConverterImpl java.lang.String _printDecimal(java.math.BigDecimal)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.DatatypeConverterImpl java.lang.String _printDouble(double)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.DatatypeConverterImpl java.lang.String _printFloat(float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.DatatypeConverterImpl java.lang.String _printInt(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.DatatypeConverterImpl java.lang.String _printInteger(java.math.BigInteger)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.DatatypeConverterImpl java.lang.String _printLong(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.DatatypeConverterImpl java.lang.String _printShort(short)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.DatatypeConverterImpl decodeMap'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.DatatypeConverterImpl encodeMap'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.DatatypeConverterImpl hexCode'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.DatatypeConverterImpl byte[] initDecodeMap()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.DatatypeConverterImpl char[] initEncodeMap()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.DatatypeConverterImpl byte[] parseBase64Binary(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.DatatypeConverterImpl byte[] parseHexBinary(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.DatatypeConverterImpl java.math.BigInteger parseInteger(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.DatatypeConverterImpl javax.xml.namespace.QName parseQName(java.lang.String, javax.xml.namespace.NamespaceContext)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.DatatypeConverterImpl java.lang.String printBase64Binary(byte[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.DatatypeConverterImpl java.lang.String printBoolean(boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.DatatypeConverterImpl java.lang.String printByte(byte)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.DatatypeConverterImpl java.lang.String printDate(java.util.Calendar)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.DatatypeConverterImpl java.lang.String printDateTime(java.util.Calendar)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.DatatypeConverterImpl java.lang.String printDecimal(java.math.BigDecimal)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.DatatypeConverterImpl java.lang.String printDouble(double)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.DatatypeConverterImpl java.lang.String printFloat(float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.DatatypeConverterImpl java.lang.String printHexBinary(byte[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.DatatypeConverterImpl java.lang.String printInt(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.DatatypeConverterImpl java.lang.String printInteger(java.math.BigInteger)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.DatatypeConverterImpl java.lang.String printLong(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.DatatypeConverterImpl java.lang.String printShort(short)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.DatatypeConverterImpl java.lang.String printTime(java.util.Calendar)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.DatatypeConverterImpl java.lang.String printUnsignedInt(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.DatatypeConverterImpl java.lang.String printUnsignedShort(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.DatatypeConverterImpl java.lang.CharSequence removeOptionalPlus(java.lang.CharSequence)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.DatatypeConverterImpl theInstance'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.JAXB.Cache context'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.JAXB javax.xml.bind.JAXBContext getContext(java.lang.Class&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.JAXB javax.xml.transform.Result toResult(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.JAXB javax.xml.transform.Source toSource(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.JAXBContext JAXB_CONTEXT_FACTORY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.JAXBContext javax.xml.bind.JAXBContext newInstance(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.JAXBContext javax.xml.bind.JAXBContext newInstance(java.lang.String, java.lang.ClassLoader)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.JAXBContext javax.xml.bind.JAXBContext newInstance(java.lang.String, java.lang.ClassLoader, java.util.Map&lt;java.lang.String,?&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.JAXBContext javax.xml.bind.JAXBContext newInstance(java.lang.Class...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.JAXBContext javax.xml.bind.JAXBContext newInstance(java.lang.Class[], java.util.Map&lt;java.lang.String,?&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.JAXBElement declaredType'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.JAXBElement java.lang.Class&lt;T&gt; getDeclaredType()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.JAXBElement javax.xml.namespace.QName getName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.JAXBElement java.lang.Class getScope()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.JAXBElement name'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.JAXBElement scope'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.Marshaller JAXB_ENCODING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.Marshaller JAXB_FORMATTED_OUTPUT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.Marshaller JAXB_FRAGMENT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.Marshaller JAXB_NO_NAMESPACE_SCHEMA_LOCATION'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.Marshaller JAXB_SCHEMA_LOCATION'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.Messages CANT_FIND_PROPERTIES_FILE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.Messages CANT_MIX_PROVIDERS'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.Messages CONVERTER_MUST_NOT_BE_NULL'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.Messages COULD_NOT_INSTANTIATE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.Messages ILLEGAL_CAST'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.Messages MISSING_PROPERTY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.Messages NAME_VALUE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.Messages NO_PACKAGE_IN_CONTEXTPATH'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.Messages PROVIDER_NOT_FOUND'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.WhiteSpaceProcessor java.lang.CharSequence collapse(java.lang.CharSequence)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.xml.bind.WhiteSpaceProcessor java.lang.CharSequence replace(java.lang.CharSequence)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
