<root>
    <item name='sun.reflect.generics.factory.CoreReflectionFactory sun.reflect.generics.factory.CoreReflectionFactory make(java.lang.reflect.GenericDeclaration, sun.reflect.generics.scope.Scope)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.reflect.generics.factory.CoreReflectionFactory java.lang.reflect.ParameterizedType makeParameterizedType(java.lang.reflect.Type, java.lang.reflect.Type[], java.lang.reflect.Type)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.reflect.generics.factory.CoreReflectionFactory java.lang.reflect.TypeVariable&lt;?&gt; makeTypeVariable(java.lang.String, sun.reflect.generics.tree.FieldTypeSignature[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.reflect.generics.factory.CoreReflectionFactory java.lang.reflect.WildcardType makeWildcard(sun.reflect.generics.tree.FieldTypeSignature[], sun.reflect.generics.tree.FieldTypeSignature[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
