<root>
    <item name='sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl make(java.lang.reflect.Type)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.reflect.generics.reflectiveObjects.GenericArrayTypeImpl java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.reflect.generics.reflectiveObjects.LazyReflectiveObjectGenerator sun.reflect.generics.visitor.Reifier getReifier()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl make(java.lang.Class&lt;?&gt;, java.lang.reflect.Type[], java.lang.reflect.Type)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.reflect.generics.reflectiveObjects.TypeVariableImpl sun.reflect.generics.reflectiveObjects.TypeVariableImpl&lt;T&gt; make(T, java.lang.String, sun.reflect.generics.tree.FieldTypeSignature[], sun.reflect.generics.factory.GenericsFactory)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.reflect.generics.reflectiveObjects.WildcardTypeImpl sun.reflect.generics.reflectiveObjects.WildcardTypeImpl make(sun.reflect.generics.tree.FieldTypeSignature[], sun.reflect.generics.tree.FieldTypeSignature[], sun.reflect.generics.factory.GenericsFactory)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.reflect.generics.reflectiveObjects.WildcardTypeImpl java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
