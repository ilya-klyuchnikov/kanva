<root>
    <item name='sun.reflect.generics.tree.ArrayTypeSignature sun.reflect.generics.tree.ArrayTypeSignature make(sun.reflect.generics.tree.TypeSignature)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.reflect.generics.tree.ClassSignature sun.reflect.generics.tree.ClassSignature make(sun.reflect.generics.tree.FormalTypeParameter[], sun.reflect.generics.tree.ClassTypeSignature, sun.reflect.generics.tree.ClassTypeSignature[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.reflect.generics.tree.ClassTypeSignature sun.reflect.generics.tree.ClassTypeSignature make(java.util.List&lt;sun.reflect.generics.tree.SimpleClassTypeSignature&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.reflect.generics.tree.FormalTypeParameter sun.reflect.generics.tree.FormalTypeParameter make(java.lang.String, sun.reflect.generics.tree.FieldTypeSignature[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.reflect.generics.tree.MethodTypeSignature sun.reflect.generics.tree.MethodTypeSignature make(sun.reflect.generics.tree.FormalTypeParameter[], sun.reflect.generics.tree.TypeSignature[], sun.reflect.generics.tree.ReturnType, sun.reflect.generics.tree.FieldTypeSignature[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.reflect.generics.tree.SimpleClassTypeSignature sun.reflect.generics.tree.SimpleClassTypeSignature make(java.lang.String, boolean, sun.reflect.generics.tree.TypeArgument[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.reflect.generics.tree.TypeVariableSignature sun.reflect.generics.tree.TypeVariableSignature make(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.reflect.generics.tree.Wildcard emptyBounds'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.reflect.generics.tree.Wildcard sun.reflect.generics.tree.Wildcard make(sun.reflect.generics.tree.FieldTypeSignature[], sun.reflect.generics.tree.FieldTypeSignature[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
