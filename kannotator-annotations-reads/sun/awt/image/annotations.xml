<root>
    <item name='sun.awt.image.BufImgSurfaceData sun.java2d.SurfaceData createData(java.awt.image.BufferedImage)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.BufImgSurfaceData sun.java2d.SurfaceData createDataBC(java.awt.image.BufferedImage, sun.java2d.loops.SurfaceType, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.BufImgSurfaceData sun.java2d.SurfaceData createDataBP(java.awt.image.BufferedImage, sun.java2d.loops.SurfaceType)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.BufImgSurfaceData sun.java2d.SurfaceData createDataIC(java.awt.image.BufferedImage, sun.java2d.loops.SurfaceType)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.BufImgSurfaceData sun.java2d.SurfaceData createDataSC(java.awt.image.BufferedImage, sun.java2d.loops.SurfaceType, java.awt.image.IndexColorModel)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.BufImgSurfaceData java.awt.Rectangle getBounds()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.BufferedImageDevice java.awt.GraphicsConfiguration[] getConfigurations()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.BufferedImageDevice java.lang.String getIDstring()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.BufferedImageGraphicsConfig java.awt.image.BufferedImage createCompatibleImage(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.BufferedImageGraphicsConfig java.awt.Rectangle getBounds()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.BufferedImageGraphicsConfig sun.awt.image.BufferedImageGraphicsConfig getConfig(java.awt.image.BufferedImage)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.BufferedImageGraphicsConfig java.awt.geom.AffineTransform getDefaultTransform()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.BufferedImageGraphicsConfig java.awt.geom.AffineTransform getNormalizingTransform()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ByteBandedRaster java.awt.image.Raster createChild(int, int, int, int, int, int, int[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ByteBandedRaster java.awt.image.WritableRaster createCompatibleWritableRaster()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ByteBandedRaster java.awt.image.WritableRaster createCompatibleWritableRaster(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ByteBandedRaster java.awt.image.WritableRaster createWritableChild(int, int, int, int, int, int, int[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ByteBandedRaster byte[] getByteData(int, int, int, int, int, byte[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ByteBandedRaster byte[] getByteData(int, int, int, int, byte[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ByteBandedRaster java.lang.Object getDataElements(int, int, int, int, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ByteBandedRaster java.lang.Object getDataElements(int, int, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ByteBandedRaster java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ByteComponentRaster java.awt.image.Raster createChild(int, int, int, int, int, int, int[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ByteComponentRaster java.awt.image.WritableRaster createCompatibleWritableRaster()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ByteComponentRaster java.awt.image.WritableRaster createCompatibleWritableRaster(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ByteComponentRaster java.awt.image.WritableRaster createWritableChild(int, int, int, int, int, int, int[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ByteComponentRaster byte[] getByteData(int, int, int, int, int, byte[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ByteComponentRaster byte[] getByteData(int, int, int, int, byte[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ByteComponentRaster java.lang.Object getDataElements(int, int, int, int, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ByteComponentRaster java.lang.Object getDataElements(int, int, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ByteComponentRaster java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ByteInterleavedRaster java.awt.image.Raster createChild(int, int, int, int, int, int, int[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ByteInterleavedRaster java.awt.image.WritableRaster createCompatibleWritableRaster()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ByteInterleavedRaster java.awt.image.WritableRaster createCompatibleWritableRaster(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ByteInterleavedRaster java.awt.image.WritableRaster createWritableChild(int, int, int, int, int, int, int[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ByteInterleavedRaster byte[] getByteData(int, int, int, int, int, byte[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ByteInterleavedRaster byte[] getByteData(int, int, int, int, byte[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ByteInterleavedRaster java.lang.Object getDataElements(int, int, int, int, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ByteInterleavedRaster java.lang.Object getDataElements(int, int, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ByteInterleavedRaster int[] getPixels(int, int, int, int, int[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ByteInterleavedRaster int[] getSamples(int, int, int, int, int, int[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ByteInterleavedRaster java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.BytePackedRaster java.awt.image.Raster createChild(int, int, int, int, int, int, int[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.BytePackedRaster java.awt.image.WritableRaster createCompatibleWritableRaster()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.BytePackedRaster java.awt.image.WritableRaster createCompatibleWritableRaster(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.BytePackedRaster java.awt.image.WritableRaster createWritableChild(int, int, int, int, int, int, int[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.BytePackedRaster byte[] getByteData(int, int, int, int, int, byte[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.BytePackedRaster byte[] getByteData(int, int, int, int, byte[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.BytePackedRaster java.lang.Object getDataElements(int, int, int, int, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.BytePackedRaster java.lang.Object getDataElements(int, int, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.BytePackedRaster java.lang.Object getPixelData(int, int, int, int, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.BytePackedRaster int[] getPixels(int, int, int, int, int[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.BytePackedRaster java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.FetcherInfo FETCHER_INFO_KEY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.FetcherInfo sun.awt.image.FetcherInfo getFetcherInfo()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.GifImageDecoder byte[] grow_colormap(byte[], int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ImageConsumerQueue java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ImageRepresentation java.awt.image.BufferedImage createImage(java.awt.image.ColorModel, java.awt.image.WritableRaster, boolean, java.util.Hashtable)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ImageWatched.Link sun.awt.image.ImageWatched.Link removeWatcher(java.awt.image.ImageObserver)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.IntegerComponentRaster java.awt.image.Raster createChild(int, int, int, int, int, int, int[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.IntegerComponentRaster java.awt.image.WritableRaster createCompatibleWritableRaster()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.IntegerComponentRaster java.awt.image.WritableRaster createCompatibleWritableRaster(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.IntegerComponentRaster java.awt.image.WritableRaster createWritableChild(int, int, int, int, int, int, int[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.IntegerComponentRaster java.lang.Object getDataElements(int, int, int, int, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.IntegerComponentRaster java.lang.Object getDataElements(int, int, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.IntegerComponentRaster java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.IntegerInterleavedRaster java.awt.image.Raster createChild(int, int, int, int, int, int, int[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.IntegerInterleavedRaster java.awt.image.WritableRaster createCompatibleWritableRaster()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.IntegerInterleavedRaster java.awt.image.WritableRaster createCompatibleWritableRaster(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.IntegerInterleavedRaster java.awt.image.WritableRaster createWritableChild(int, int, int, int, int, int, int[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.IntegerInterleavedRaster java.lang.Object getDataElements(int, int, int, int, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.IntegerInterleavedRaster java.lang.Object getDataElements(int, int, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.IntegerInterleavedRaster java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.JPEGImageDecoder InputStreamClass'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.PNGImageDecoder.Chromaticities java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.PNGImageDecoder blockHeight'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.PNGImageDecoder blockWidth'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.PNGImageDecoder colIncrement'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.PNGImageDecoder crc_table'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.PNGImageDecoder rowIncrement'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.PNGImageDecoder signature'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.PNGImageDecoder startingCol'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.PNGImageDecoder startingRow'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.PixelConverter.Argb instance'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.PixelConverter.ArgbBm instance'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.PixelConverter.ArgbPre instance'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.PixelConverter.Bgrx instance'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.PixelConverter.ByteGray instance'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.PixelConverter.Rgba instance'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.PixelConverter.RgbaPre instance'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.PixelConverter.Rgbx instance'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.PixelConverter.Ushort4444Argb instance'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.PixelConverter.Ushort555Rgb instance'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.PixelConverter.Ushort555Rgbx instance'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.PixelConverter.Ushort565Rgb instance'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.PixelConverter.UshortGray instance'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.PixelConverter.Xbgr instance'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.PixelConverter.Xrgb instance'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.PixelConverter instance'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ShortBandedRaster java.awt.image.Raster createChild(int, int, int, int, int, int, int[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ShortBandedRaster java.awt.image.WritableRaster createCompatibleWritableRaster()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ShortBandedRaster java.awt.image.WritableRaster createCompatibleWritableRaster(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ShortBandedRaster java.awt.image.WritableRaster createWritableChild(int, int, int, int, int, int, int[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ShortBandedRaster java.lang.Object getDataElements(int, int, int, int, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ShortBandedRaster java.lang.Object getDataElements(int, int, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ShortBandedRaster short[] getShortData(int, int, int, int, int, short[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ShortBandedRaster short[] getShortData(int, int, int, int, short[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ShortBandedRaster java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ShortComponentRaster java.awt.image.Raster createChild(int, int, int, int, int, int, int[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ShortComponentRaster java.awt.image.WritableRaster createCompatibleWritableRaster()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ShortComponentRaster java.awt.image.WritableRaster createCompatibleWritableRaster(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ShortComponentRaster java.awt.image.WritableRaster createWritableChild(int, int, int, int, int, int, int[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ShortComponentRaster java.lang.Object getDataElements(int, int, int, int, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ShortComponentRaster java.lang.Object getDataElements(int, int, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ShortComponentRaster short[] getShortData(int, int, int, int, int, short[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ShortComponentRaster short[] getShortData(int, int, int, int, short[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ShortComponentRaster java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ShortInterleavedRaster java.awt.image.Raster createChild(int, int, int, int, int, int, int[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ShortInterleavedRaster java.awt.image.WritableRaster createCompatibleWritableRaster()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ShortInterleavedRaster java.awt.image.WritableRaster createCompatibleWritableRaster(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ShortInterleavedRaster java.awt.image.WritableRaster createWritableChild(int, int, int, int, int, int, int[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ShortInterleavedRaster java.lang.Object getDataElements(int, int, int, int, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ShortInterleavedRaster java.lang.Object getDataElements(int, int, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ShortInterleavedRaster short[] getShortData(int, int, int, int, int, short[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ShortInterleavedRaster short[] getShortData(int, int, int, int, short[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ShortInterleavedRaster java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.SunVolatileImage java.awt.Graphics2D createGraphics()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.SunVolatileImage java.awt.image.BufferedImage getBackupImage()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.SunVolatileImage java.awt.ImageCapabilities getCapabilities()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.SunVolatileImage java.awt.image.BufferedImage getSnapshot()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.SurfaceManager java.awt.ImageCapabilities getCapabilities(java.awt.GraphicsConfiguration)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.SurfaceManager sun.awt.image.SurfaceManager getManager(java.awt.Image)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.ToolkitImage sun.awt.image.ImageRepresentation makeImageRep()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.VolatileSurfaceManager java.awt.ImageCapabilities getCapabilities(java.awt.GraphicsConfiguration)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.WritableRasterNative sun.awt.image.WritableRasterNative createNativeRaster(java.awt.image.ColorModel, sun.java2d.SurfaceData, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.awt.image.WritableRasterNative sun.awt.image.WritableRasterNative createNativeRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
