<root>
    <item name='sun.font.AttributeMap java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.AttributeValues.1 $SwitchMap$sun$font$EAttribute'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.AttributeValues DEFAULT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.AttributeValues DEFINED_KEY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.AttributeValues sun.font.AttributeValues applyIMHighlight()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.AttributeValues sun.font.AttributeValues fromMap(java.util.Map&lt;? extends java.text.AttributedCharacterIterator.Attribute,?&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.AttributeValues sun.font.AttributeValues fromMap(java.util.Map&lt;? extends java.text.AttributedCharacterIterator.Attribute,?&gt;, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.AttributeValues sun.font.AttributeValues fromSerializableHashtable(java.util.Hashtable&lt;java.lang.Object,java.lang.Object&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.AttributeValues sun.font.AttributeValues merge(java.util.Map&lt;? extends java.text.AttributedCharacterIterator.Attribute,?&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.AttributeValues sun.font.AttributeValues merge(java.util.Map&lt;? extends java.text.AttributedCharacterIterator.Attribute,?&gt;, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.AttributeValues sun.font.AttributeValues merge(sun.font.AttributeValues)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.AttributeValues sun.font.AttributeValues merge(sun.font.AttributeValues, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.AttributeValues java.util.Map&lt;java.awt.font.TextAttribute,java.lang.Object&gt; toMap(java.util.Map&lt;java.awt.font.TextAttribute,java.lang.Object&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.AttributeValues java.util.Hashtable&lt;java.lang.Object,java.lang.Object&gt; toSerializableHashtable()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.AttributeValues java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.BidiUtils int[] createVisualToLogicalMap(byte[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.BidiUtils byte[] getLevels(java.text.Bidi)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.CMap converterMaps'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.CMap sun.font.CMap createCMap(java.nio.ByteBuffer, int, char[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.CMap theNullCmap'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.CompositeFont sun.font.FontStrike createStrike(sun.font.FontStrikeDesc)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.CompositeFont java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.CompositeStrike java.awt.geom.GeneralPath getGlyphOutline(int, float, float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.CompositeStrike java.awt.geom.GeneralPath getGlyphVectorOutline(int[], float, float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.Decoration.DecorationImpl java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.Decoration PLAIN'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.EAttribute $VALUES'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.EAttribute EBACKGROUND'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.EAttribute EBASELINE_TRANSFORM'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.EAttribute EBIDI_EMBEDDING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.EAttribute ECHAR_REPLACEMENT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.EAttribute EFAMILY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.EAttribute EFONT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.EAttribute EFOREGROUND'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.EAttribute EINPUT_METHOD_HIGHLIGHT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.EAttribute EINPUT_METHOD_UNDERLINE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.EAttribute EJUSTIFICATION'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.EAttribute EKERNING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.EAttribute ELIGATURES'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.EAttribute ENUMERIC_SHAPING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.EAttribute EPOSTURE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.EAttribute ERUN_DIRECTION'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.EAttribute ESIZE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.EAttribute ESTRIKETHROUGH'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.EAttribute ESUPERSCRIPT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.EAttribute ESWAP_COLORS'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.EAttribute ETRACKING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.EAttribute ETRANSFORM'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.EAttribute EUNDERLINE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.EAttribute EWEIGHT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.EAttribute EWIDTH'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.EAttribute java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.EAttribute sun.font.EAttribute valueOf(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.ExtendedTextSourceLabel sun.font.TextLineComponent applyJustificationDeltas(float[], int, boolean[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.ExtendedTextSourceLabel java.awt.geom.Rectangle2D createAlignBounds()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.ExtendedTextSourceLabel java.awt.geom.Rectangle2D createItalicBounds()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.ExtendedTextSourceLabel java.awt.geom.Rectangle2D createLogicalBounds()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.ExtendedTextSourceLabel java.awt.geom.Rectangle2D getAlignBounds(float, float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.ExtendedTextSourceLabel java.awt.geom.Rectangle2D getItalicBounds(float, float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.ExtendedTextSourceLabel java.awt.geom.Rectangle2D getLogicalBounds()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.ExtendedTextSourceLabel java.awt.geom.Rectangle2D getLogicalBounds(float, float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.ExtendedTextSourceLabel java.awt.Rectangle getPixelBounds(java.awt.font.FontRenderContext, float, float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.ExtendedTextSourceLabel sun.font.TextLineComponent getSubset(int, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.ExtendedTextSourceLabel java.awt.geom.Rectangle2D getVisualBounds(float, float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.ExtendedTextSourceLabel java.awt.geom.Rectangle2D handleGetCharVisualBounds(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.ExtendedTextSourceLabel java.awt.Shape handleGetOutline(float, float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.ExtendedTextSourceLabel java.awt.geom.Rectangle2D handleGetVisualBounds()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.FileFont sun.font.FontStrike createStrike(sun.font.FontStrikeDesc)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.FileFontStrike java.awt.geom.Point2D.Float getCharMetrics(char)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.FileFontStrike java.awt.geom.Point2D.Float getGlyphMetrics(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.FileFontStrike java.awt.geom.Point2D.Float getGlyphMetrics(int, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.FileFontStrike java.awt.geom.Rectangle2D.Float getGlyphOutlineBounds(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.Font2D DEFAULT_FRC'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.Font2D boldItalicNames'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.Font2D boldNames'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.Font2D sun.font.FontStrike getStrike(java.awt.Font)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.Font2D sun.font.FontStrike getStrike(java.awt.Font, java.awt.font.FontRenderContext)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.Font2D sun.font.FontStrike getStrike(java.awt.Font, java.awt.geom.AffineTransform, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.Font2D sun.font.FontStrike getStrike(java.awt.Font, java.awt.geom.AffineTransform, java.awt.geom.AffineTransform, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.Font2D sun.font.FontStrike getStrike(sun.font.FontStrikeDesc)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.Font2D sun.font.FontStrike getStrike(sun.font.FontStrikeDesc, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.Font2D italicNames'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.FontDesignMetrics.MetricsKey key'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.FontDesignMetrics sun.font.FontDesignMetrics getMetrics(java.awt.Font)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.FontDesignMetrics sun.font.FontDesignMetrics getMetrics(java.awt.Font, java.awt.font.FontRenderContext)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.FontDesignMetrics int[] getWidths()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.FontDesignMetrics metricsCache'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.FontDesignMetrics recentMetrics'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.FontFamily java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.FontManagerFactory DEFAULT_CLASS'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.FontResolver java.awt.Font getFont(int, java.util.Map)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.FontStrikeDesc java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.FontUtilities LUCIDA_FILE_NAME'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.FontUtilities javax.swing.plaf.FontUIResource getCompositeFontUIResource(java.awt.Font)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.FontUtilities javax.swing.plaf.FontUIResource getFontConfigFUIR(java.lang.String, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.FontUtilities nameMap'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.GlyphLayout.GVData sun.font.StandardGlyphVector createGlyphVector(java.awt.Font, java.awt.font.FontRenderContext, sun.font.StandardGlyphVector)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.GlyphLayout.LayoutEngineKey sun.font.GlyphLayout.LayoutEngineKey copy()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.GlyphLayout.SDCache.SDKey font'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.GlyphLayout.SDCache.SDKey frc'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.GlyphLayout.SDCache ZERO_DELTA'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.GlyphLayout.SDCache sun.font.GlyphLayout.SDCache get(java.awt.Font, java.awt.font.FontRenderContext)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.GlyphLayout sun.font.GlyphLayout get(sun.font.GlyphLayout.LayoutEngineFactory)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.GlyphLayout sun.font.StandardGlyphVector layout(java.awt.Font, java.awt.font.FontRenderContext, char[], int, int, int, sun.font.StandardGlyphVector)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.GraphicComponent sun.font.TextLineComponent applyJustificationDeltas(float[], int, boolean[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.GraphicComponent sun.font.CoreMetrics createCoreMetrics(java.awt.font.GraphicAttribute)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.GraphicComponent java.awt.geom.Rectangle2D getItalicBounds()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.GraphicComponent java.awt.geom.Rectangle2D getLogicalBounds()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.GraphicComponent sun.font.TextLineComponent getSubset(int, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.GraphicComponent java.awt.geom.Rectangle2D getVisualBounds()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.GraphicComponent java.awt.geom.Rectangle2D handleGetCharVisualBounds(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.GraphicComponent java.awt.geom.Rectangle2D handleGetVisualBounds()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.GraphicComponent java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.LayoutPathImpl.1 $SwitchMap$sun$font$LayoutPathImpl$EndType'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.LayoutPathImpl.EndType $VALUES'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.LayoutPathImpl.EndType CLOSED'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.LayoutPathImpl.EndType EXTENDED'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.LayoutPathImpl.EndType PINNED'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.LayoutPathImpl.EndType sun.font.LayoutPathImpl.EndType valueOf(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.LayoutPathImpl.SegmentPath.Mapper cpt'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.LayoutPathImpl.SegmentPath.Mapper li'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.LayoutPathImpl.SegmentPath.Mapper java.awt.Shape mapShape(java.awt.Shape)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.LayoutPathImpl.SegmentPath.Mapper mpt'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.LayoutPathImpl.SegmentPath.Mapper segments'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.LayoutPathImpl.SegmentPath.Mapper this$0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.LayoutPathImpl.SegmentPath.Segment temp'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.LayoutPathImpl.SegmentPath.Segment this$0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.LayoutPathImpl.SegmentPath java.awt.Shape mapShape(java.awt.Shape)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.LayoutPathImpl.SegmentPath java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.LayoutPathImpl LOG'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.LayoutPathImpl java.awt.geom.Point2D pathToPoint(double, double, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.LayoutPathImpl java.awt.geom.Point2D pointToPath(double, double)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.NativeFont java.awt.geom.Rectangle2D.Float getGlyphOutlineBounds(long, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.NullFontScaler sun.font.StrikeMetrics getFontMetrics(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.NullFontScaler java.awt.geom.GeneralPath getGlyphOutline(long, int, float, float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.NullFontScaler java.awt.geom.Rectangle2D.Float getGlyphOutlineBounds(long, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.NullFontScaler java.awt.geom.GeneralPath getGlyphVectorOutline(long, int[], int, float, float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.PhysicalFont java.awt.geom.Point2D.Float getGlyphPoint(long, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.PhysicalStrike java.awt.geom.Point2D.Float getGlyphPoint(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.ScriptRunData data'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.StandardGlyphVector.ADL java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.StandardGlyphVector.ADL java.lang.StringBuffer toStringBuffer(java.lang.StringBuffer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.StandardGlyphVector.GlyphStrike sun.font.StandardGlyphVector.GlyphStrike create(sun.font.StandardGlyphVector, java.awt.geom.AffineTransform, java.awt.geom.AffineTransform)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.StandardGlyphVector.GlyphStrike java.awt.geom.Rectangle2D getGlyphOutlineBounds(int, float, float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.StandardGlyphVector.GlyphTransformInfo java.awt.Rectangle getGlyphsPixelBounds(java.awt.geom.AffineTransform, float, float, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.StandardGlyphVector.GlyphTransformInfo sun.font.StandardGlyphVector.GlyphStrike getStrike(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.StandardGlyphVector.GlyphTransformInfo sun.font.StandardGlyphVector.GlyphStrike[] getStrikeArray()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.StandardGlyphVector.GlyphTransformInfo sun.font.StandardGlyphVector.GlyphStrike getStrikeAtIndex(sun.font.StandardGlyphVector.GlyphStrike[], int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.StandardGlyphVector sun.font.StandardGlyphVector.GlyphStrike access$500(sun.font.StandardGlyphVector)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.StandardGlyphVector java.lang.StringBuffer appendString(java.lang.StringBuffer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.StandardGlyphVector java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.StandardGlyphVector sun.font.StandardGlyphVector copy()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.StandardGlyphVector sun.font.StandardGlyphVector.GlyphStrike getDefaultStrike()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.StandardGlyphVector int[] getGlyphCharIndices(int, int, int[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.StandardGlyphVector int[] getGlyphCodes(int, int, int[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.StandardGlyphVector float[] getGlyphInfo()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.StandardGlyphVector java.awt.Shape getGlyphLogicalBounds(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.StandardGlyphVector java.awt.font.GlyphMetrics getGlyphMetrics(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.StandardGlyphVector java.awt.Shape getGlyphOutline(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.StandardGlyphVector java.awt.Shape getGlyphOutline(int, float, float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.StandardGlyphVector java.awt.geom.Rectangle2D getGlyphOutlineBounds(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.StandardGlyphVector java.awt.Rectangle getGlyphPixelBounds(int, java.awt.font.FontRenderContext, float, float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.StandardGlyphVector java.awt.geom.Point2D getGlyphPosition(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.StandardGlyphVector float[] getGlyphPositions(int, int, float[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.StandardGlyphVector float[] getGlyphPositions(float[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.StandardGlyphVector sun.font.StandardGlyphVector.GlyphStrike getGlyphStrike(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.StandardGlyphVector java.awt.Shape getGlyphVisualBounds(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.StandardGlyphVector java.awt.Shape getGlyphsOutline(int, int, float, float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.StandardGlyphVector java.awt.Rectangle getGlyphsPixelBounds(java.awt.font.FontRenderContext, float, float, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.StandardGlyphVector java.awt.geom.Rectangle2D getLogicalBounds()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.StandardGlyphVector java.awt.geom.AffineTransform getNonTranslateTX(java.awt.geom.AffineTransform)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.StandardGlyphVector java.awt.Shape getOutline()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.StandardGlyphVector java.awt.Shape getOutline(float, float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.StandardGlyphVector java.awt.Rectangle getPixelBounds(java.awt.font.FontRenderContext, float, float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.StandardGlyphVector sun.font.StandardGlyphVector getStandardGV(java.awt.font.GlyphVector, sun.java2d.loops.FontInfo)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.StandardGlyphVector int[] getValidatedGlyphs(int[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.StandardGlyphVector java.awt.geom.Rectangle2D getVisualBounds()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.StandardGlyphVector float[] internalGetGlyphPositions(int, int, int, float[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.StandardGlyphVector java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.StandardTextSource sun.font.TextSource getSubSource(int, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.StandardTextSource java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.StandardTextSource java.lang.String toString(boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.StrikeCache java.lang.ref.Reference getStrikeRef(sun.font.FontStrike)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.StrikeCache java.lang.ref.Reference getStrikeRef(sun.font.FontStrike, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.StrikeMetrics java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.SunFontManager.10 java.lang.Object run()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.SunFontManager altJAFontKey'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.SunFontManager sun.font.Font2D createFont2D(java.io.File, int, boolean, sun.font.CreatedFontTracker)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.SunFontManager deferredFontFiles'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.SunFontManager java.lang.String dotStyleStr(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.SunFontManager java.awt.Font[] getAllInstalledFonts()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.SunFontManager javax.swing.plaf.FontUIResource getFontConfigFUIR(java.lang.String, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.SunFontManager java.lang.String[] getInstalledFontFamilyNames(java.util.Locale)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.SunFontManager sun.font.Font2DHandle getNewComposite(java.lang.String, int, sun.font.Font2DHandle)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.SunFontManager java.lang.String getPathName(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.SunFontManager sun.font.Font2D[] getRegisteredFonts()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.SunFontManager initialisedFonts'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.SunFontManager localeFontKey'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.SunFontManager lucidaFontName'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.SunFontManager java.util.HashMap&lt;java.lang.String,sun.font.SunFontManager.FamilyDescription&gt; populateHardcodedFileNameMap()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.SunFontManager proportionalFontKey'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.SunFontManager regFamilyKey'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.SunFontManager regFullNameKey'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.SunFontManager t1Filter'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.SunFontManager ttFilter'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.SunLayoutEngine sun.font.GlyphLayout.LayoutEngine getEngine(sun.font.Font2D, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.SunLayoutEngine sun.font.GlyphLayout.LayoutEngine getEngine(sun.font.GlyphLayout.LayoutEngineKey)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.TextLabelFactory sun.font.ExtendedTextLabel createExtended(java.awt.Font, sun.font.CoreMetrics, sun.font.Decoration, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.TextLabelFactory sun.font.TextLabel createSimple(java.awt.Font, sun.font.CoreMetrics, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.TextSourceLabel java.awt.font.GlyphVector createGV()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.TextSourceLabel java.awt.geom.Rectangle2D getAlignBounds(float, float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.TextSourceLabel java.awt.geom.Rectangle2D getItalicBounds(float, float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.TextSourceLabel java.awt.geom.Rectangle2D getLogicalBounds(float, float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.TextSourceLabel java.awt.Rectangle getPixelBounds(java.awt.font.FontRenderContext, float, float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.TextSourceLabel java.awt.geom.Rectangle2D getVisualBounds(float, float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.TrueTypeFont codePages'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.TrueTypeFont encoding_mapping'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.TrueTypeFont languages'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.TrueTypeFont java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.Type1Font java.lang.String expandName(java.lang.String, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.Type1Font java.lang.String fullName2FamilyName(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.Type1Font java.lang.String getSimpleToken(java.nio.ByteBuffer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.Type1Font java.lang.String getString(java.nio.ByteBuffer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.Type1Font java.lang.String psName2FamilyName(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.Type1Font java.lang.String psName2FullName(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.Type1Font java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.Underline.IMGrayUnderline java.awt.Shape getUnderlineShape(float, float, float, float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.Underline.StandardUnderline java.awt.BasicStroke createStroke(float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.Underline.StandardUnderline java.awt.Stroke getStroke(float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.Underline UNDERLINES'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.font.Underline UNDERLINE_LIST'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
