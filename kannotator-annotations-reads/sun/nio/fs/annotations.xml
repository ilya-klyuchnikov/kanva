<root>
    <item name='sun.nio.fs.AbstractAclFileAttributeView ACL_NAME'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.AbstractAclFileAttributeView OWNER_NAME'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.AbstractAclFileAttributeView java.lang.String name()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.AbstractAclFileAttributeView java.util.Map&lt;java.lang.String,java.lang.Object&gt; readAttributes(java.lang.String[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.AbstractBasicFileAttributeView.AttributesBuilder sun.nio.fs.AbstractBasicFileAttributeView.AttributesBuilder create(java.util.Set&lt;java.lang.String&gt;, java.lang.String[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.AbstractBasicFileAttributeView.AttributesBuilder java.util.Map&lt;java.lang.String,java.lang.Object&gt; unmodifiableMap()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.AbstractBasicFileAttributeView CREATION_TIME_NAME'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.AbstractBasicFileAttributeView FILE_KEY_NAME'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.AbstractBasicFileAttributeView IS_DIRECTORY_NAME'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.AbstractBasicFileAttributeView IS_OTHER_NAME'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.AbstractBasicFileAttributeView IS_REGULAR_FILE_NAME'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.AbstractBasicFileAttributeView IS_SYMBOLIC_LINK_NAME'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.AbstractBasicFileAttributeView LAST_ACCESS_TIME_NAME'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.AbstractBasicFileAttributeView LAST_MODIFIED_TIME_NAME'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.AbstractBasicFileAttributeView SIZE_NAME'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.AbstractBasicFileAttributeView basicAttributeNames'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.AbstractBasicFileAttributeView java.lang.String name()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.AbstractBasicFileAttributeView java.util.Map&lt;java.lang.String,java.lang.Object&gt; readAttributes(java.lang.String[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.AbstractFileSystemProvider java.lang.String[] split(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.AbstractFileTypeDetector TSPECIALS'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.AbstractPath java.util.Iterator&lt;java.nio.file.Path&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.AbstractPath java.io.File toFile()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.AbstractPoller.2 $SwitchMap$sun$nio$fs$AbstractPoller$RequestType'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.AbstractPoller.RequestType $VALUES'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.AbstractPoller.RequestType CANCEL'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.AbstractPoller.RequestType CLOSE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.AbstractPoller.RequestType REGISTER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.AbstractPoller.RequestType sun.nio.fs.AbstractPoller.RequestType valueOf(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.AbstractPoller requestList'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.AbstractUserDefinedFileAttributeView java.lang.String name()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.AbstractUserDefinedFileAttributeView java.util.Map&lt;java.lang.String,java.lang.Object&gt; readAttributes(java.lang.String[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.AbstractWatchKey.State $VALUES'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.AbstractWatchKey.State READY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.AbstractWatchKey.State SIGNALLED'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.AbstractWatchKey.State sun.nio.fs.AbstractWatchKey.State valueOf(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.AbstractWatchKey OVERFLOW_EVENT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.AbstractWatchService CLOSE_KEY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.AbstractWatchService closeLock'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.AbstractWatchService java.lang.Object closeLock()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.AbstractWatchService pendingKeys'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.AbstractWatchService java.nio.file.WatchKey take()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.Cancellable lock'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.DefaultFileSystemProvider java.nio.file.spi.FileSystemProvider create()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.DefaultFileTypeDetector java.nio.file.spi.FileTypeDetector create()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.FileOwnerAttributeViewImpl OWNER_NAME'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.FileOwnerAttributeViewImpl java.lang.String name()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.FileOwnerAttributeViewImpl java.util.Map&lt;java.lang.String,java.lang.Object&gt; readAttributes(java.lang.String[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.Globs globMetaChars'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.Globs regexMetaChars'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.Globs java.lang.String toRegexPattern(java.lang.String, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.Globs java.lang.String toUnixRegexPattern(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.Globs java.lang.String toWindowsRegexPattern(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.NativeBuffers sun.nio.fs.NativeBuffer allocNativeBuffer(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.NativeBuffers sun.nio.fs.NativeBuffer asNativeBuffer(byte[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.NativeBuffers sun.nio.fs.NativeBuffer getNativeBuffer(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.Reflect java.lang.reflect.Field lookupField(java.lang.String, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.Util java.util.Set&lt;E&gt; newSet(java.util.Set&lt;E&gt;, E...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.Util java.util.Set&lt;E&gt; newSet(E...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.Util java.lang.String[] split(java.lang.String, char)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsAclFileAttributeView java.util.List&lt;java.nio.file.attribute.AclEntry&gt; getAcl()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsChannelFactory.2 $SwitchMap$com$sun$nio$file$ExtendedOpenOption'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsChannelFactory.2 $SwitchMap$java$nio$file$StandardOpenOption'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsChannelFactory.Flags sun.nio.fs.WindowsChannelFactory.Flags toFlags(java.util.Set&lt;? extends java.nio.file.OpenOption&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsChannelFactory OPEN_REPARSE_POINT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsChannelFactory java.nio.channels.FileChannel newFileChannel(java.lang.String, java.lang.String, java.util.Set&lt;? extends java.nio.file.OpenOption&gt;, long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsChannelFactory java.io.FileDescriptor open(java.lang.String, java.lang.String, sun.nio.fs.WindowsChannelFactory.Flags, long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsDirectoryStream.WindowsDirectoryIterator java.lang.Object next()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsDirectoryStream.WindowsDirectoryIterator java.nio.file.Path next()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsDirectoryStream.WindowsDirectoryIterator this$0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsDirectoryStream closeLock'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsDirectoryStream dir'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsDirectoryStream findDataBuffer'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsException java.io.IOException asIOException(sun.nio.fs.WindowsPath)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsException java.io.IOException translateToIOException(java.lang.String, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileAttributeViews.Dos ARCHIVE_NAME'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileAttributeViews.Dos ATTRIBUTES_NAME'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileAttributeViews.Dos HIDDEN_NAME'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileAttributeViews.Dos READONLY_NAME'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileAttributeViews.Dos SYSTEM_NAME'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileAttributeViews.Dos dosAttributeNames'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileAttributeViews.Dos java.lang.String name()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileAttributeViews.Dos java.util.Map&lt;java.lang.String,java.lang.Object&gt; readAttributes(java.lang.String[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileAttributeViews sun.nio.fs.WindowsFileAttributeViews.Basic createBasicView(sun.nio.fs.WindowsPath, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileAttributeViews sun.nio.fs.WindowsFileAttributeViews.Dos createDosView(sun.nio.fs.WindowsPath, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileAttributes java.nio.file.attribute.FileTime creationTime()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileAttributes sun.nio.fs.WindowsFileAttributes fromFileAttributeData(long, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileAttributes sun.nio.fs.WindowsFileAttributes fromFileInformation(long, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileAttributes sun.nio.fs.WindowsFileAttributes fromFindData(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileAttributes sun.nio.fs.WindowsFileAttributes get(sun.nio.fs.WindowsPath, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileAttributes sun.nio.fs.NativeBuffer getBufferForFindData()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileAttributes java.nio.file.attribute.FileTime lastAccessTime()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileAttributes java.nio.file.attribute.FileTime lastModifiedTime()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileAttributes sun.nio.fs.WindowsFileAttributes readAttributes(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileAttributes java.nio.file.attribute.FileTime toFileTime(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileCopy java.lang.String addPrefixIfNeeded(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileStore displayName'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileStore root'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileStore java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileStore volInfo'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileStore sun.nio.fs.WindowsNativeDispatcher.VolumeInformation volumeInformation()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileSystem.1 java.util.Iterator&lt;java.nio.file.FileStore&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileSystem.FileStoreIterator this$0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileSystem.LookupService.1 java.nio.file.attribute.GroupPrincipal lookupPrincipalByGroupName(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileSystem.LookupService.1 java.nio.file.attribute.UserPrincipal lookupPrincipalByName(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileSystem.LookupService instance'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileSystem GLOB_SYNTAX'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileSystem REGEX_SYNTAX'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileSystem java.nio.file.Path getPath(java.lang.String, java.lang.String...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileSystem java.nio.file.PathMatcher getPathMatcher(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileSystem java.lang.Iterable&lt;java.nio.file.Path&gt; getRootDirectories()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileSystem java.lang.String getSeparator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileSystem java.nio.file.attribute.UserPrincipalLookupService getUserPrincipalLookupService()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileSystem java.nio.file.WatchService newWatchService()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileSystem supportedFileAttributeViews'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileSystemProvider.1 $SwitchMap$java$nio$file$AccessMode'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileSystemProvider USER_DIR'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileSystemProvider java.nio.file.FileSystem getFileSystem(java.net.URI)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileSystemProvider java.nio.file.Path getPath(java.net.URI)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileSystemProvider java.lang.String getScheme()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileSystemProvider sun.nio.fs.NativeBuffer getUserInfo(sun.nio.fs.WindowsPath)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileSystemProvider java.nio.file.DirectoryStream&lt;java.nio.file.Path&gt; newDirectoryStream(java.nio.file.Path, java.nio.file.DirectoryStream.Filter&lt;? super java.nio.file.Path&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileSystemProvider java.nio.file.Path readSymbolicLink(java.nio.file.Path)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsFileSystemProvider theFileSystem'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsLinkSupport.1 java.lang.Object run()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsLinkSupport.1 sun.nio.fs.WindowsPath run()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsLinkSupport java.lang.String addLongPathPrefixIfNeeded(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsLinkSupport java.lang.String readLink(sun.nio.fs.WindowsPath)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsLinkSupport java.lang.String readLinkImpl(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsLinkSupport sun.nio.fs.WindowsPath resolveAllLinks(sun.nio.fs.WindowsPath)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsLinkSupport java.lang.String stripPrefix(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsNativeDispatcher sun.nio.fs.WindowsNativeDispatcher.BackupResult BackupRead(long, long, int, boolean, long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsNativeDispatcher sun.nio.fs.WindowsNativeDispatcher.FirstFile FindFirstFile(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsNativeDispatcher sun.nio.fs.WindowsNativeDispatcher.AclInformation GetAclInformation(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsNativeDispatcher sun.nio.fs.WindowsNativeDispatcher.DiskFreeSpace GetDiskFreeSpaceEx(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsNativeDispatcher sun.nio.fs.WindowsNativeDispatcher.CompletionStatus GetQueuedCompletionStatus(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsNativeDispatcher sun.nio.fs.WindowsNativeDispatcher.VolumeInformation GetVolumeInformation(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsNativeDispatcher sun.nio.fs.WindowsNativeDispatcher.Account LookupAccountSid(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsNativeDispatcher sun.nio.fs.NativeBuffer asNativeBuffer(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsPath.1 $SwitchMap$sun$nio$fs$WindowsPathType'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsPath.WindowsPathWithAttributes java.nio.file.Path getName(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsPath.WindowsPathWithAttributes ref'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsPath.WindowsPathWithAttributes java.nio.file.Path relativize(java.nio.file.Path)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsPath.WindowsPathWithAttributes java.nio.file.Path resolve(java.nio.file.Path)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsPath.WindowsPathWithAttributes java.nio.file.Path subpath(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsPath.WindowsPathWithAttributes java.nio.file.Path toAbsolutePath()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsPath.WindowsPathWithAttributes java.nio.file.Path toRealPath(java.nio.file.LinkOption[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsPath java.lang.String addPrefixIfNeeded(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsPath sun.nio.fs.WindowsPath createFromNormalizedPath(sun.nio.fs.WindowsFileSystem, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsPath sun.nio.fs.WindowsPath createFromNormalizedPath(sun.nio.fs.WindowsFileSystem, java.lang.String, java.nio.file.attribute.BasicFileAttributes)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsPath java.lang.String elementAsString(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsPath sun.nio.fs.WindowsPath emptyPath()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsPath java.nio.file.Path getName(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsPath sun.nio.fs.WindowsPath getName(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsPath sun.nio.fs.WindowsPath parse(sun.nio.fs.WindowsFileSystem, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsPath java.nio.file.Path relativize(java.nio.file.Path)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsPath sun.nio.fs.WindowsPath relativize(java.nio.file.Path)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsPath java.nio.file.Path resolve(java.nio.file.Path)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsPath sun.nio.fs.WindowsPath resolve(java.nio.file.Path)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsPath java.nio.file.Path subpath(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsPath sun.nio.fs.WindowsPath subpath(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsPath java.nio.file.Path toAbsolutePath()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsPath sun.nio.fs.WindowsPath toAbsolutePath()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsPath java.nio.file.Path toRealPath(java.nio.file.LinkOption[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsPath sun.nio.fs.WindowsPath toRealPath(java.nio.file.LinkOption...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsPath java.net.URI toUri()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsPath sun.nio.fs.WindowsPath toWindowsPath(java.nio.file.Path)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsPathParser java.lang.String normalize(java.lang.StringBuilder, java.lang.String, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsPathParser sun.nio.fs.WindowsPathParser.Result parse(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsPathParser sun.nio.fs.WindowsPathParser.Result parse(java.lang.String, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsPathParser sun.nio.fs.WindowsPathParser.Result parseNormalizedPath(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsPathParser reservedChars'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsPathType $VALUES'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsPathType ABSOLUTE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsPathType DIRECTORY_RELATIVE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsPathType DRIVE_RELATIVE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsPathType RELATIVE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsPathType UNC'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsPathType sun.nio.fs.WindowsPathType valueOf(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsSecurity sun.nio.fs.WindowsSecurity.Privilege enablePrivilege(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsSecurityDescriptor NULL_DESCRIPTOR'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsSecurityDescriptor sun.nio.fs.WindowsSecurityDescriptor create(java.util.List&lt;java.nio.file.attribute.AclEntry&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsSecurityDescriptor java.util.List&lt;java.nio.file.attribute.AclEntry&gt; getAcl(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsUriSupport IPV6_LITERAL_SUFFIX'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsUriSupport sun.nio.fs.WindowsPath fromUri(sun.nio.fs.WindowsFileSystem, java.net.URI)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsUriSupport java.net.URI toUri(java.lang.String, boolean, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsUriSupport java.net.URI toUri(sun.nio.fs.WindowsPath)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsUserDefinedFileAttributeView java.lang.String join(java.lang.String, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsUserDefinedFileAttributeView java.lang.String join(sun.nio.fs.WindowsPath, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsUserDefinedFileAttributeView java.util.List&lt;java.lang.String&gt; list()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsUserDefinedFileAttributeView java.util.List&lt;java.lang.String&gt; listUsingBackupRead()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsUserDefinedFileAttributeView java.util.List&lt;java.lang.String&gt; listUsingStreamEnumeration()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsUserPrincipals.User java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsUserPrincipals java.nio.file.attribute.UserPrincipal fromSid(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsUserPrincipals java.nio.file.attribute.UserPrincipal lookup(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsWatchService.Poller fk2key'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsWatchService.Poller java.lang.Object implRegister(java.nio.file.Path, java.util.Set&lt;? extends java.nio.file.WatchEvent.Kind&lt;?&gt;&gt;, java.nio.file.WatchEvent.Modifier...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsWatchService.Poller int2key'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsWatchService.WindowsWatchKey sun.nio.fs.WindowsWatchService.WindowsWatchKey init(long, java.util.Set&lt;? extends java.nio.file.WatchEvent.Kind&lt;?&gt;&gt;, boolean, sun.nio.fs.NativeBuffer, long, long, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsWatchService sun.nio.fs.WindowsWatchService.Poller access$000(sun.nio.fs.WindowsWatchService)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='sun.nio.fs.WindowsWatchService poller'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
