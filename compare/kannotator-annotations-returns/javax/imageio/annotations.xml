<root>
    <item name='javax.imageio.ImageIO.SpiInfo javax.imageio.ImageIO.SpiInfo valueOf(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.imageio.ImageIO javax.imageio.ImageIO.CacheInfo getCacheInfo()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.imageio.ImageReader java.util.List addToList(java.util.List, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.imageio.ImageReader javax.imageio.ImageReadParam getDefaultReadParam()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.imageio.ImageReader java.awt.image.BufferedImage getDestination(javax.imageio.ImageReadParam, java.util.Iterator&lt;javax.imageio.ImageTypeSpecifier&gt;, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.imageio.ImageReader java.awt.Rectangle getSourceRegion(javax.imageio.ImageReadParam, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.imageio.ImageReader javax.imageio.IIOImage readAll(int, javax.imageio.ImageReadParam)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.imageio.ImageTypeSpecifier javax.imageio.ImageTypeSpecifier createBanded(java.awt.color.ColorSpace, int[], int[], int, boolean, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.imageio.ImageTypeSpecifier java.awt.image.BufferedImage createBufferedImage(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.imageio.ImageTypeSpecifier java.awt.image.ColorModel createComponentCM(java.awt.color.ColorSpace, int, int, boolean, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.imageio.ImageTypeSpecifier javax.imageio.ImageTypeSpecifier createGrayscale(int, int, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.imageio.ImageTypeSpecifier javax.imageio.ImageTypeSpecifier createGrayscale(int, int, boolean, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.imageio.ImageTypeSpecifier javax.imageio.ImageTypeSpecifier createIndexed(byte[], byte[], byte[], byte[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.imageio.ImageTypeSpecifier javax.imageio.ImageTypeSpecifier createInterleaved(java.awt.color.ColorSpace, int[], int, boolean, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.imageio.ImageTypeSpecifier javax.imageio.ImageTypeSpecifier createPacked(java.awt.color.ColorSpace, int, int, int, int, int, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.imageio.ImageTypeSpecifier javax.imageio.ImageTypeSpecifier createSpecifier(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.imageio.ImageWriter javax.imageio.ImageWriteParam getDefaultWriteParam()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
