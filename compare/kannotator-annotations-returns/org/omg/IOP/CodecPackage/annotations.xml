<root>
    <item name='org.omg.IOP.CodecPackage.FormatMismatchHelper org.omg.IOP.CodecPackage.FormatMismatch extract(org.omg.CORBA.Any)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.omg.IOP.CodecPackage.FormatMismatchHelper org.omg.IOP.CodecPackage.FormatMismatch read(org.omg.CORBA.portable.InputStream)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.omg.IOP.CodecPackage.InvalidTypeForEncodingHelper org.omg.IOP.CodecPackage.InvalidTypeForEncoding extract(org.omg.CORBA.Any)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.omg.IOP.CodecPackage.InvalidTypeForEncodingHelper org.omg.IOP.CodecPackage.InvalidTypeForEncoding read(org.omg.CORBA.portable.InputStream)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.omg.IOP.CodecPackage.TypeMismatchHelper org.omg.IOP.CodecPackage.TypeMismatch extract(org.omg.CORBA.Any)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='org.omg.IOP.CodecPackage.TypeMismatchHelper org.omg.IOP.CodecPackage.TypeMismatch read(org.omg.CORBA.portable.InputStream)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
