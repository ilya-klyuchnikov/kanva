<root>
    <item name='java.util.AbstractCollection java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.AbstractList java.util.Iterator&lt;E&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.AbstractList java.util.ListIterator&lt;E&gt; listIterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.AbstractList java.util.ListIterator&lt;E&gt; listIterator(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.AbstractList java.lang.String outOfBoundsMsg(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.AbstractList java.util.List&lt;E&gt; subList(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.AbstractMap.1 java.util.Iterator&lt;K&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.AbstractMap.2 java.util.Iterator&lt;V&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.AbstractMap.SimpleEntry java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.AbstractMap.SimpleImmutableEntry java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.AbstractMap java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.AbstractMap java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.AbstractQueue E element()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.AbstractQueue E remove()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.ArrayDeque.DeqIterator E next()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.ArrayDeque.DescendingIterator E next()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.ArrayDeque java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.ArrayDeque java.util.ArrayDeque&lt;E&gt; clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.ArrayDeque java.util.Iterator&lt;E&gt; descendingIterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.ArrayDeque E element()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.ArrayDeque E getFirst()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.ArrayDeque E getLast()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.ArrayDeque java.util.Iterator&lt;E&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.ArrayDeque E pop()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.ArrayDeque E remove()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.ArrayDeque E removeFirst()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.ArrayDeque E removeLast()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.ArrayDeque T[] toArray(T[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.ArrayList.SubList java.util.ListIterator&lt;E&gt; listIterator(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.ArrayList.SubList java.lang.String outOfBoundsMsg(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.ArrayList.SubList java.util.List&lt;E&gt; subList(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.ArrayList java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.ArrayList java.util.Iterator&lt;E&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.ArrayList java.util.ListIterator&lt;E&gt; listIterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.ArrayList java.util.ListIterator&lt;E&gt; listIterator(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.ArrayList java.lang.String outOfBoundsMsg(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.ArrayList java.util.List&lt;E&gt; subList(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Arrays java.util.List&lt;T&gt; asList(T...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Arrays byte[] copyOf(byte[], int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Arrays char[] copyOf(char[], int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Arrays double[] copyOf(double[], int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Arrays float[] copyOf(float[], int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Arrays int[] copyOf(int[], int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Arrays long[] copyOf(long[], int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Arrays short[] copyOf(short[], int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Arrays boolean[] copyOf(boolean[], int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Arrays byte[] copyOfRange(byte[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Arrays char[] copyOfRange(char[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Arrays double[] copyOfRange(double[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Arrays float[] copyOfRange(float[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Arrays int[] copyOfRange(int[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Arrays long[] copyOfRange(long[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Arrays short[] copyOfRange(short[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Arrays boolean[] copyOfRange(boolean[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Arrays java.lang.String deepToString(java.lang.Object[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Arrays java.lang.String toString(byte[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Arrays java.lang.String toString(char[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Arrays java.lang.String toString(double[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Arrays java.lang.String toString(float[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Arrays java.lang.String toString(int[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Arrays java.lang.String toString(long[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Arrays java.lang.String toString(java.lang.Object[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Arrays java.lang.String toString(short[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Arrays java.lang.String toString(boolean[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.BitSet java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.BitSet java.util.BitSet get(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.BitSet byte[] toByteArray()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.BitSet long[] toLongArray()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.BitSet java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.BitSet java.util.BitSet valueOf(java.nio.ByteBuffer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.BitSet java.util.BitSet valueOf(java.nio.LongBuffer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.BitSet java.util.BitSet valueOf(byte[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.BitSet java.util.BitSet valueOf(long[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Calendar java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Calendar java.util.Calendar createCalendar(java.util.TimeZone, java.util.Locale)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Calendar java.util.Locale[] getAvailableLocales()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Calendar java.util.Calendar getInstance()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Calendar java.util.Calendar getInstance(java.util.Locale)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Calendar java.util.Calendar getInstance(java.util.TimeZone)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Calendar java.util.Calendar getInstance(java.util.TimeZone, java.util.Locale)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Calendar java.util.Date getTime()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Calendar java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.AsLIFOQueue java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.CheckedCollection java.lang.String badElementMsg(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.CheckedCollection java.util.Collection&lt;E&gt; checkedCopyOf(java.util.Collection&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.CheckedCollection java.util.Iterator&lt;E&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.CheckedCollection java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.CheckedList java.util.ListIterator&lt;E&gt; listIterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.CheckedList java.util.ListIterator&lt;E&gt; listIterator(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.CheckedList java.util.List&lt;E&gt; subList(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.CheckedMap.CheckedEntrySet.1 java.lang.Object next()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.CheckedMap.CheckedEntrySet.1 java.util.Map.Entry&lt;K,V&gt; next()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.CheckedMap.CheckedEntrySet.CheckedEntry java.lang.String badValueMsg(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.CheckedMap.CheckedEntrySet.CheckedEntry java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.CheckedMap.CheckedEntrySet java.util.Collections.CheckedMap.CheckedEntrySet.CheckedEntry&lt;K,V,T&gt; checkedEntry(java.util.Map.Entry&lt;K,V&gt;, java.lang.Class&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.CheckedMap.CheckedEntrySet java.util.Iterator&lt;java.util.Map.Entry&lt;K,V&gt;&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.CheckedMap.CheckedEntrySet java.lang.Object[] toArray()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.CheckedMap.CheckedEntrySet T[] toArray(T[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.CheckedMap.CheckedEntrySet java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.CheckedMap java.lang.String badKeyMsg(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.CheckedMap java.lang.String badValueMsg(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.CheckedMap java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.CheckedRandomAccessList java.util.List&lt;E&gt; subList(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.CheckedSortedMap java.util.SortedMap&lt;K,V&gt; headMap(K)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.CheckedSortedMap java.util.SortedMap&lt;K,V&gt; subMap(K, K)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.CheckedSortedMap java.util.SortedMap&lt;K,V&gt; tailMap(K)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.CheckedSortedSet java.util.SortedSet&lt;E&gt; headSet(E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.CheckedSortedSet java.util.SortedSet&lt;E&gt; subSet(E, E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.CheckedSortedSet java.util.SortedSet&lt;E&gt; tailSet(E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.CopiesList java.util.List&lt;E&gt; subList(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.CopiesList java.lang.Object[] toArray()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.EmptyList java.util.ListIterator&lt;E&gt; listIterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.EmptyList java.lang.Object[] toArray()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.EmptyList T[] toArray(T[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.EmptySet java.lang.Object[] toArray()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.EmptySet T[] toArray(T[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.SetFromMap java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.SingletonList java.util.Iterator&lt;E&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.SingletonSet java.util.Iterator&lt;E&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.SynchronizedCollection java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.SynchronizedList java.lang.Object readResolve()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.SynchronizedList java.util.List&lt;E&gt; subList(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.SynchronizedMap java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.SynchronizedRandomAccessList java.util.List&lt;E&gt; subList(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.SynchronizedRandomAccessList java.lang.Object writeReplace()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.SynchronizedSortedMap java.util.SortedMap&lt;K,V&gt; headMap(K)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.SynchronizedSortedMap java.util.SortedMap&lt;K,V&gt; subMap(K, K)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.SynchronizedSortedMap java.util.SortedMap&lt;K,V&gt; tailMap(K)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.SynchronizedSortedSet java.util.SortedSet&lt;E&gt; headSet(E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.SynchronizedSortedSet java.util.SortedSet&lt;E&gt; subSet(E, E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.SynchronizedSortedSet java.util.SortedSet&lt;E&gt; tailSet(E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.UnmodifiableCollection java.util.Iterator&lt;E&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.UnmodifiableCollection java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.UnmodifiableList java.util.ListIterator&lt;E&gt; listIterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.UnmodifiableList java.util.ListIterator&lt;E&gt; listIterator(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.UnmodifiableList java.lang.Object readResolve()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.UnmodifiableList java.util.List&lt;E&gt; subList(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.UnmodifiableMap.UnmodifiableEntrySet.1 java.lang.Object next()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.UnmodifiableMap.UnmodifiableEntrySet.1 java.util.Map.Entry&lt;K,V&gt; next()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.UnmodifiableMap.UnmodifiableEntrySet.UnmodifiableEntry java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.UnmodifiableMap.UnmodifiableEntrySet java.util.Iterator&lt;java.util.Map.Entry&lt;K,V&gt;&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.UnmodifiableMap.UnmodifiableEntrySet java.lang.Object[] toArray()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.UnmodifiableMap.UnmodifiableEntrySet T[] toArray(T[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.UnmodifiableMap java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.UnmodifiableRandomAccessList java.util.List&lt;E&gt; subList(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.UnmodifiableRandomAccessList java.lang.Object writeReplace()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.UnmodifiableSortedMap java.util.SortedMap&lt;K,V&gt; headMap(K)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.UnmodifiableSortedMap java.util.SortedMap&lt;K,V&gt; subMap(K, K)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.UnmodifiableSortedMap java.util.SortedMap&lt;K,V&gt; tailMap(K)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.UnmodifiableSortedSet java.util.SortedSet&lt;E&gt; headSet(E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.UnmodifiableSortedSet java.util.SortedSet&lt;E&gt; subSet(E, E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections.UnmodifiableSortedSet java.util.SortedSet&lt;E&gt; tailSet(E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections java.util.Queue&lt;T&gt; asLifoQueue(java.util.Deque&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections java.util.Collection&lt;E&gt; checkedCollection(java.util.Collection&lt;E&gt;, java.lang.Class&lt;E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections java.util.List&lt;E&gt; checkedList(java.util.List&lt;E&gt;, java.lang.Class&lt;E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections java.util.Map&lt;K,V&gt; checkedMap(java.util.Map&lt;K,V&gt;, java.lang.Class&lt;K&gt;, java.lang.Class&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections java.util.Set&lt;E&gt; checkedSet(java.util.Set&lt;E&gt;, java.lang.Class&lt;E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections java.util.SortedMap&lt;K,V&gt; checkedSortedMap(java.util.SortedMap&lt;K,V&gt;, java.lang.Class&lt;K&gt;, java.lang.Class&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections java.util.SortedSet&lt;E&gt; checkedSortedSet(java.util.SortedSet&lt;E&gt;, java.lang.Class&lt;E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections java.util.ListIterator&lt;T&gt; emptyListIterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections java.util.Enumeration&lt;T&gt; enumeration(java.util.Collection&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections java.util.ArrayList&lt;T&gt; list(java.util.Enumeration&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections java.util.List&lt;T&gt; nCopies(int, T)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections java.util.Set&lt;E&gt; newSetFromMap(java.util.Map&lt;E,java.lang.Boolean&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections java.util.Set&lt;T&gt; singleton(T)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections java.util.Iterator&lt;E&gt; singletonIterator(E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections java.util.List&lt;T&gt; singletonList(T)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections java.util.Map&lt;K,V&gt; singletonMap(K, V)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections java.util.Collection&lt;T&gt; synchronizedCollection(java.util.Collection&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections java.util.Collection&lt;T&gt; synchronizedCollection(java.util.Collection&lt;T&gt;, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections java.util.List&lt;T&gt; synchronizedList(java.util.List&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections java.util.List&lt;T&gt; synchronizedList(java.util.List&lt;T&gt;, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections java.util.Map&lt;K,V&gt; synchronizedMap(java.util.Map&lt;K,V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections java.util.Set&lt;T&gt; synchronizedSet(java.util.Set&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections java.util.Set&lt;T&gt; synchronizedSet(java.util.Set&lt;T&gt;, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections java.util.SortedMap&lt;K,V&gt; synchronizedSortedMap(java.util.SortedMap&lt;K,V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections java.util.SortedSet&lt;T&gt; synchronizedSortedSet(java.util.SortedSet&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections java.util.Collection&lt;T&gt; unmodifiableCollection(java.util.Collection&lt;? extends T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections java.util.List&lt;T&gt; unmodifiableList(java.util.List&lt;? extends T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections java.util.Map&lt;K,V&gt; unmodifiableMap(java.util.Map&lt;? extends K,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections java.util.Set&lt;T&gt; unmodifiableSet(java.util.Set&lt;? extends T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections java.util.SortedMap&lt;K,V&gt; unmodifiableSortedMap(java.util.SortedMap&lt;K,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Collections java.util.SortedSet&lt;T&gt; unmodifiableSortedSet(java.util.SortedSet&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Currency int[] access$000(java.io.DataInputStream, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Currency long[] access$100(java.io.DataInputStream, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Currency java.lang.String[] access$200(java.io.DataInputStream, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Currency java.util.Set&lt;java.util.Currency&gt; getAvailableCurrencies()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Currency java.util.Currency getInstance(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Currency java.util.Currency getInstance(java.lang.String, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Currency int[] readIntArray(java.io.DataInputStream, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Currency long[] readLongArray(java.io.DataInputStream, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Currency java.lang.Object readResolve()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Currency java.lang.String[] readStringArray(java.io.DataInputStream, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Date java.lang.StringBuilder convertToAbbr(java.lang.StringBuilder, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Date java.lang.String toGMTString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Date java.lang.String toLocaleString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Date java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.DuplicateFormatFlagsException java.lang.String getMessage()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.EnumMap.1 java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.EnumMap.EntryIterator.Entry java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.EnumMap.EntrySet java.util.Iterator&lt;java.util.Map.Entry&lt;K,V&gt;&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.EnumMap.KeySet java.util.Iterator&lt;K&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.EnumMap.Values java.util.Iterator&lt;V&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.EnumMap java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.EnumMap java.util.EnumMap&lt;K,V&gt; clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.EnumMap java.util.Set&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entrySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.EnumMap java.util.Set&lt;K&gt; keySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.EnumMap java.util.Collection&lt;V&gt; values()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.EnumSet.SerializationProxy java.lang.Object readResolve()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.EnumSet java.util.EnumSet&lt;E&gt; allOf(java.lang.Class&lt;E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.EnumSet java.util.EnumSet&lt;E&gt; complementOf(java.util.EnumSet&lt;E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.EnumSet java.util.EnumSet&lt;E&gt; noneOf(java.lang.Class&lt;E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.EnumSet java.util.EnumSet&lt;E&gt; of(E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.EnumSet java.util.EnumSet&lt;E&gt; of(E, E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.EnumSet java.util.EnumSet&lt;E&gt; of(E, E, E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.EnumSet java.util.EnumSet&lt;E&gt; of(E, E, E, E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.EnumSet java.util.EnumSet&lt;E&gt; of(E, E, E, E, E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.EnumSet java.util.EnumSet&lt;E&gt; of(E, E...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.EnumSet java.util.EnumSet&lt;E&gt; range(E, E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.EnumSet java.lang.Object writeReplace()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.EventObject java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.FormatFlagsConversionMismatchException java.lang.String getMessage()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Formatter.BigDecimalLayoutForm java.util.Formatter.BigDecimalLayoutForm valueOf(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Formatter.Flags java.util.Formatter.Flags access$100(java.util.Formatter.Flags, java.util.Formatter.Flags)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Formatter.Flags java.util.Formatter.Flags add(java.util.Formatter.Flags)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Formatter.Flags java.util.Formatter.Flags dup()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Formatter.Flags java.util.Formatter.Flags parse(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Formatter.Flags java.util.Formatter.Flags remove(java.util.Formatter.Flags)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Formatter.Flags java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Formatter.Flags java.lang.String toString(java.util.Formatter.Flags)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Formatter.FormatSpecifier char[] addDot(char[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Formatter.FormatSpecifier char[] addZeros(char[], int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Formatter.FormatSpecifier java.lang.StringBuilder localizedMagnitude(java.lang.StringBuilder, long, java.util.Formatter.Flags, int, java.util.Locale)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Formatter.FormatSpecifier java.lang.StringBuilder localizedMagnitude(java.lang.StringBuilder, char[], java.util.Formatter.Flags, int, java.util.Locale)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Formatter.FormatSpecifier char[] mantissa(char[], int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Formatter.FormatSpecifier java.lang.Appendable print(java.lang.StringBuilder, java.util.Calendar, char, java.util.Locale)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Formatter.FormatSpecifier java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Formatter java.util.Formatter format(java.lang.String, java.lang.Object...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Formatter java.util.Formatter format(java.util.Locale, java.lang.String, java.lang.Object...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Formatter java.lang.Appendable nonNullAppendable(java.lang.Appendable)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Formatter java.nio.charset.Charset toCharset(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Formatter java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.GregorianCalendar java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.GregorianCalendar sun.util.calendar.BaseCalendar.Date getCalendarDate(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.GregorianCalendar java.util.Date getGregorianChange()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.GregorianCalendar sun.util.calendar.BaseCalendar.Date getGregorianCutoverDate()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.GregorianCalendar sun.util.calendar.BaseCalendar.Date getLastJulianDate()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.GregorianCalendar java.util.GregorianCalendar getNormalizedCalendar()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.HashMap.Entry java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.HashMap.EntrySet java.util.Iterator&lt;java.util.Map.Entry&lt;K,V&gt;&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.HashMap.HashIterator java.util.HashMap.Entry&lt;K,V&gt; nextEntry()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.HashMap.KeySet java.util.Iterator&lt;K&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.HashMap.Values java.util.Iterator&lt;V&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.HashMap java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.HashMap java.util.Set&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entrySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.HashMap java.util.Set&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entrySet0()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.HashMap java.util.Set&lt;K&gt; keySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.HashMap java.util.Iterator&lt;java.util.Map.Entry&lt;K,V&gt;&gt; newEntryIterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.HashMap java.util.Iterator&lt;K&gt; newKeyIterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.HashMap java.util.Iterator&lt;V&gt; newValueIterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.HashMap java.util.Collection&lt;V&gt; values()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.HashSet java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Hashtable.Entry java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Hashtable.Entry java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Hashtable java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Hashtable java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.IdentityHashMap.EntryIterator.Entry java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.IdentityHashMap.EntrySet java.util.Iterator&lt;java.util.Map.Entry&lt;K,V&gt;&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.IdentityHashMap.EntrySet java.lang.Object[] toArray()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.IdentityHashMap.EntrySet T[] toArray(T[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.IdentityHashMap.KeySet java.util.Iterator&lt;K&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.IdentityHashMap.Values java.util.Iterator&lt;V&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.IdentityHashMap java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.IdentityHashMap java.util.Set&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entrySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.IdentityHashMap java.util.Set&lt;K&gt; keySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.IdentityHashMap java.util.Collection&lt;V&gt; values()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.IllegalFormatCodePointException java.lang.String getMessage()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.IllegalFormatConversionException java.lang.String getMessage()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.IllegalFormatFlagsException java.lang.String getMessage()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.IllegalFormatPrecisionException java.lang.String getMessage()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.IllegalFormatWidthException java.lang.String getMessage()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.JapaneseImperialCalendar java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.JapaneseImperialCalendar sun.util.calendar.LocalGregorianCalendar.Date getCalendarDate(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.JapaneseImperialCalendar java.util.JapaneseImperialCalendar getNormalizedCalendar()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.JumboEnumSet java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.JumboEnumSet java.util.EnumSet&lt;E&gt; clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.JumboEnumSet java.util.Iterator&lt;E&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.LinkedHashMap.LinkedHashIterator java.util.LinkedHashMap.Entry&lt;K,V&gt; nextEntry()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.LinkedHashMap java.util.Iterator&lt;java.util.Map.Entry&lt;K,V&gt;&gt; newEntryIterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.LinkedHashMap java.util.Iterator&lt;K&gt; newKeyIterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.LinkedHashMap java.util.Iterator&lt;V&gt; newValueIterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.LinkedList java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.LinkedList java.util.Iterator&lt;E&gt; descendingIterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.LinkedList java.util.ListIterator&lt;E&gt; listIterator(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.LinkedList java.lang.String outOfBoundsMsg(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.LinkedList java.lang.Object[] toArray()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.LinkedList T[] toArray(T[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.ListResourceBundle java.util.Enumeration&lt;java.lang.String&gt; getKeys()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Locale.Builder java.util.Locale.Builder addUnicodeLocaleAttribute(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Locale.Builder java.util.Locale.Builder clear()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Locale.Builder java.util.Locale.Builder clearExtensions()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Locale.Builder java.util.Locale.Builder removeUnicodeLocaleAttribute(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Locale.Builder java.util.Locale.Builder setExtension(char, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Locale.Builder java.util.Locale.Builder setLanguage(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Locale.Builder java.util.Locale.Builder setLanguageTag(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Locale.Builder java.util.Locale.Builder setLocale(java.util.Locale)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Locale.Builder java.util.Locale.Builder setRegion(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Locale.Builder java.util.Locale.Builder setScript(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Locale.Builder java.util.Locale.Builder setUnicodeLocaleKeyword(java.lang.String, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Locale.Builder java.util.Locale.Builder setVariant(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Locale.Cache java.lang.Object createObject(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Locale.Cache java.util.Locale createObject(java.util.Locale.LocaleKey)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Locale.Category java.util.Locale.Category valueOf(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Locale java.lang.String getDisplayCountry()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Locale java.lang.String getDisplayCountry(java.util.Locale)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Locale java.lang.String getDisplayLanguage()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Locale java.lang.String getDisplayLanguage(java.util.Locale)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Locale java.lang.String getDisplayScript()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Locale java.lang.String getDisplayScript(java.util.Locale)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Locale java.lang.String getDisplayString(java.lang.String, java.util.Locale, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Locale java.lang.String[] getDisplayVariantArray(sun.util.resources.OpenListResourceBundle, java.util.Locale)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Locale java.lang.String[] getISO2Table(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Locale java.lang.String getISO3Country()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Locale java.lang.String getISO3Language()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Locale java.lang.String[] getISOCountries()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Locale java.lang.String[] getISOLanguages()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Locale java.lang.String toLanguageTag()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Locale java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.MissingFormatArgumentException java.lang.String getMessage()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Objects T requireNonNull(T)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Objects T requireNonNull(T, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Objects java.lang.String toString(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.PriorityQueue java.util.Iterator&lt;E&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Properties java.lang.String loadConvert(char[], int, int, char[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Properties java.lang.String saveConvert(java.lang.String, boolean, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.PropertyPermission java.lang.String getActions(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.PropertyPermission java.security.PermissionCollection newPermissionCollection()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.PropertyPermissionCollection java.util.Enumeration elements()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.PropertyResourceBundle java.util.Enumeration&lt;java.lang.String&gt; getKeys()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.RandomAccessSubList java.util.List&lt;E&gt; subList(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.RegularEnumSet java.util.Iterator&lt;E&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.ResourceBundle.1 java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.ResourceBundle.CacheKey java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.ResourceBundle.CacheKey java.util.ResourceBundle.CacheKey setLocale(java.util.Locale)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.ResourceBundle.CacheKey java.util.ResourceBundle.CacheKey setName(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.ResourceBundle.CacheKey java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.ResourceBundle.Control.CandidateListCache java.lang.Object createObject(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.ResourceBundle.Control.CandidateListCache java.util.List&lt;java.util.Locale&gt; createObject(sun.util.locale.BaseLocale)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.ResourceBundle.Control.CandidateListCache java.util.List&lt;java.util.Locale&gt; getDefaultList(java.lang.String, java.lang.String, java.lang.String, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.ResourceBundle.Control java.util.List&lt;java.util.Locale&gt; getCandidateLocales(java.lang.String, java.util.Locale)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.ResourceBundle.Control java.lang.String toResourceName(java.lang.String, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.ResourceBundle.RBClassLoader.1 java.lang.Object run()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.ResourceBundle.RBClassLoader.1 java.util.ResourceBundle.RBClassLoader run()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.ResourceBundle java.lang.Object getObject(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.ResourceBundle java.lang.String getString(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.ResourceBundle java.lang.String[] getStringArray(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Scanner.1 java.lang.Object create(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Scanner.1 java.util.regex.Pattern create(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Scanner java.util.regex.Pattern boolPattern()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Scanner java.lang.String buildIntegerPatternString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Scanner java.util.regex.Pattern linePattern()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Scanner java.lang.Readable makeReadable(java.io.InputStream, java.nio.charset.Charset)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Scanner java.lang.Readable makeReadable(java.nio.channels.ReadableByteChannel)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Scanner java.lang.Readable makeReadable(java.nio.channels.ReadableByteChannel, java.nio.charset.CharsetDecoder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Scanner java.util.regex.MatchResult match()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Scanner java.lang.Object next()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Scanner java.lang.String next()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Scanner java.lang.String processFloatToken(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Scanner java.util.Scanner reset()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Scanner java.util.regex.Pattern separatorPattern()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Scanner java.util.Scanner skip(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Scanner java.util.Scanner skip(java.util.regex.Pattern)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Scanner java.nio.charset.Charset toCharset(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Scanner java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Scanner java.util.Scanner useDelimiter(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Scanner java.util.Scanner useDelimiter(java.util.regex.Pattern)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Scanner java.util.Scanner useLocale(java.util.Locale)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Scanner java.util.Scanner useRadix(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.ServiceLoader java.util.Iterator access$200(java.util.ServiceLoader, java.lang.Class, java.net.URL)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.ServiceLoader java.util.Iterator&lt;S&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.ServiceLoader java.util.ServiceLoader&lt;S&gt; load(java.lang.Class&lt;S&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.ServiceLoader java.util.ServiceLoader&lt;S&gt; load(java.lang.Class&lt;S&gt;, java.lang.ClassLoader)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.ServiceLoader java.util.ServiceLoader&lt;S&gt; loadInstalled(java.lang.Class&lt;S&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.ServiceLoader java.util.Iterator&lt;java.lang.String&gt; parse(java.lang.Class, java.net.URL)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.ServiceLoader java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.SimpleTimeZone java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.SimpleTimeZone byte[] packRules()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.SimpleTimeZone int[] packTimes()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.SimpleTimeZone java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.StringTokenizer java.lang.Object nextElement()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.StringTokenizer java.lang.String nextToken()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.StringTokenizer java.lang.String nextToken(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.SubList java.util.AbstractList access$100(java.util.SubList)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.SubList java.util.ListIterator&lt;E&gt; listIterator(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.SubList java.lang.String outOfBoundsMsg(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.SubList java.util.List&lt;E&gt; subList(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TimeZone java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TimeZone java.lang.String[] getAvailableIDs(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TimeZone java.util.TimeZone getDefault()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeMap.AscendingSubMap.AscendingEntrySetView java.util.Iterator&lt;java.util.Map.Entry&lt;K,V&gt;&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeMap.AscendingSubMap java.util.Iterator&lt;K&gt; descendingKeyIterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeMap.AscendingSubMap java.util.NavigableMap&lt;K,V&gt; descendingMap()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeMap.AscendingSubMap java.util.Set&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entrySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeMap.AscendingSubMap java.util.NavigableMap&lt;K,V&gt; headMap(K, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeMap.AscendingSubMap java.util.Iterator&lt;K&gt; keyIterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeMap.AscendingSubMap java.util.NavigableMap&lt;K,V&gt; subMap(K, boolean, K, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeMap.AscendingSubMap java.util.NavigableMap&lt;K,V&gt; tailMap(K, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeMap.DescendingSubMap.DescendingEntrySetView java.util.Iterator&lt;java.util.Map.Entry&lt;K,V&gt;&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeMap.DescendingSubMap java.util.Iterator&lt;K&gt; descendingKeyIterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeMap.DescendingSubMap java.util.NavigableMap&lt;K,V&gt; descendingMap()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeMap.DescendingSubMap java.util.Set&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entrySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeMap.DescendingSubMap java.util.NavigableMap&lt;K,V&gt; headMap(K, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeMap.DescendingSubMap java.util.Iterator&lt;K&gt; keyIterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeMap.DescendingSubMap java.util.NavigableMap&lt;K,V&gt; subMap(K, boolean, K, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeMap.DescendingSubMap java.util.NavigableMap&lt;K,V&gt; tailMap(K, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeMap.Entry java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeMap.EntrySet java.util.Iterator&lt;java.util.Map.Entry&lt;K,V&gt;&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeMap.KeySet java.util.NavigableSet&lt;E&gt; descendingSet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeMap.KeySet java.util.SortedSet&lt;E&gt; headSet(E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeMap.KeySet java.util.NavigableSet&lt;E&gt; headSet(E, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeMap.KeySet java.util.SortedSet&lt;E&gt; subSet(E, E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeMap.KeySet java.util.NavigableSet&lt;E&gt; subSet(E, boolean, E, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeMap.KeySet java.util.SortedSet&lt;E&gt; tailSet(E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeMap.KeySet java.util.NavigableSet&lt;E&gt; tailSet(E, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeMap.NavigableSubMap.SubMapIterator java.util.TreeMap.Entry&lt;K,V&gt; nextEntry()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeMap.NavigableSubMap.SubMapIterator java.util.TreeMap.Entry&lt;K,V&gt; prevEntry()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeMap.NavigableSubMap java.util.Set&lt;K&gt; keySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeMap.NavigableSubMap java.util.NavigableSet&lt;K&gt; navigableKeySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeMap.PrivateEntryIterator java.util.TreeMap.Entry&lt;K,V&gt; nextEntry()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeMap.PrivateEntryIterator java.util.TreeMap.Entry&lt;K,V&gt; prevEntry()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeMap.SubMap java.lang.Object readResolve()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeMap.Values java.util.Iterator&lt;V&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeMap java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeMap java.util.Iterator&lt;K&gt; descendingKeyIterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeMap java.util.NavigableMap&lt;K,V&gt; descendingMap()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeMap java.util.Set&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entrySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeMap java.util.SortedMap&lt;K,V&gt; headMap(K)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeMap java.util.NavigableMap&lt;K,V&gt; headMap(K, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeMap java.util.Iterator&lt;K&gt; keyIterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeMap java.util.Set&lt;K&gt; keySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeMap java.util.NavigableSet&lt;K&gt; navigableKeySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeMap java.util.SortedMap&lt;K,V&gt; subMap(K, K)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeMap java.util.NavigableMap&lt;K,V&gt; subMap(K, boolean, K, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeMap java.util.SortedMap&lt;K,V&gt; tailMap(K)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeMap java.util.NavigableMap&lt;K,V&gt; tailMap(K, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeMap java.util.Collection&lt;V&gt; values()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeSet java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeSet java.util.NavigableSet&lt;E&gt; descendingSet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeSet java.util.SortedSet&lt;E&gt; headSet(E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeSet java.util.NavigableSet&lt;E&gt; headSet(E, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeSet java.util.SortedSet&lt;E&gt; subSet(E, E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeSet java.util.NavigableSet&lt;E&gt; subSet(E, boolean, E, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeSet java.util.SortedSet&lt;E&gt; tailSet(E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.TreeSet java.util.NavigableSet&lt;E&gt; tailSet(E, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.UUID java.lang.String digits(long, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.UUID java.util.UUID fromString(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.UUID java.util.UUID nameUUIDFromBytes(byte[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.UUID java.util.UUID randomUUID()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.UUID java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.UnknownFormatConversionException java.lang.String getMessage()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.UnknownFormatFlagsException java.lang.String getMessage()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Vector java.lang.Object clone()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Vector java.util.Enumeration&lt;E&gt; elements()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Vector java.util.Iterator&lt;E&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Vector java.util.ListIterator&lt;E&gt; listIterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Vector java.util.ListIterator&lt;E&gt; listIterator(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.Vector java.util.List&lt;E&gt; subList(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.WeakHashMap.Entry java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.WeakHashMap.EntrySet java.util.List&lt;java.util.Map.Entry&lt;K,V&gt;&gt; deepCopy()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.WeakHashMap.EntrySet java.util.Iterator&lt;java.util.Map.Entry&lt;K,V&gt;&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.WeakHashMap.KeySet java.util.Iterator&lt;K&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.WeakHashMap.Values java.util.Iterator&lt;V&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.WeakHashMap java.util.Set&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entrySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.WeakHashMap java.util.Set&lt;K&gt; keySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.WeakHashMap java.util.WeakHashMap.Entry&lt;K,V&gt;[] newTable(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.WeakHashMap java.util.Collection&lt;V&gt; values()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.util.XMLUtils.Resolver org.xml.sax.InputSource resolveEntity(java.lang.String, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
