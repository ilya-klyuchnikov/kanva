<root>
    <item name='java.nio.file.AccessMode java.nio.file.AccessMode valueOf(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.file.CopyMoveHelper.CopyOptions java.nio.file.CopyMoveHelper.CopyOptions parse(java.nio.file.CopyOption...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.file.CopyMoveHelper java.nio.file.CopyOption[] convertMoveToCopyOptions(java.nio.file.CopyOption...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.file.FileSystems.DefaultFileSystemHolder.1 java.lang.Object run()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.file.FileSystems.DefaultFileSystemHolder.1 java.nio.file.spi.FileSystemProvider run()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.file.FileSystems.DefaultFileSystemHolder java.nio.file.spi.FileSystemProvider access$000()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.file.FileSystems.DefaultFileSystemHolder java.nio.file.spi.FileSystemProvider getDefaultProvider()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.file.FileVisitOption java.nio.file.FileVisitOption valueOf(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.file.FileVisitResult java.nio.file.FileVisitResult valueOf(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.file.Files.FileTypeDetectors.1 java.lang.Object run()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.file.Files.FileTypeDetectors.1 java.util.List&lt;java.nio.file.spi.FileTypeDetector&gt; run()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.file.Files java.nio.file.Path copy(java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.file.Files java.nio.file.Path createDirectory(java.nio.file.Path, java.nio.file.attribute.FileAttribute&lt;?&gt;...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.file.Files java.nio.file.Path createFile(java.nio.file.Path, java.nio.file.attribute.FileAttribute&lt;?&gt;...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.file.Files java.nio.file.Path createLink(java.nio.file.Path, java.nio.file.Path)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.file.Files java.nio.file.Path createSymbolicLink(java.nio.file.Path, java.nio.file.Path, java.nio.file.attribute.FileAttribute&lt;?&gt;...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.file.Files java.nio.file.Path createTempDirectory(java.lang.String, java.nio.file.attribute.FileAttribute&lt;?&gt;...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.file.Files java.nio.file.Path createTempDirectory(java.nio.file.Path, java.lang.String, java.nio.file.attribute.FileAttribute&lt;?&gt;...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.file.Files java.nio.file.Path createTempFile(java.lang.String, java.lang.String, java.nio.file.attribute.FileAttribute&lt;?&gt;...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.file.Files java.nio.file.Path createTempFile(java.nio.file.Path, java.lang.String, java.lang.String, java.nio.file.attribute.FileAttribute&lt;?&gt;...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.file.Files java.nio.file.Path move(java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.file.Files java.io.BufferedReader newBufferedReader(java.nio.file.Path, java.nio.charset.Charset)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.file.Files java.io.BufferedWriter newBufferedWriter(java.nio.file.Path, java.nio.charset.Charset, java.nio.file.OpenOption...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.file.Files java.io.InputStream newInputStream(java.nio.file.Path, java.nio.file.OpenOption...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.file.Files java.io.OutputStream newOutputStream(java.nio.file.Path, java.nio.file.OpenOption...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.file.Files byte[] read(java.io.InputStream, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.file.Files byte[] readAllBytes(java.nio.file.Path)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.file.Files java.util.List&lt;java.lang.String&gt; readAllLines(java.nio.file.Path, java.nio.charset.Charset)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.file.Files java.nio.file.Path setAttribute(java.nio.file.Path, java.lang.String, java.lang.Object, java.nio.file.LinkOption...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.file.Files java.nio.file.Path setLastModifiedTime(java.nio.file.Path, java.nio.file.attribute.FileTime)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.file.Files java.nio.file.Path setOwner(java.nio.file.Path, java.nio.file.attribute.UserPrincipal)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.file.Files java.nio.file.Path setPosixFilePermissions(java.nio.file.Path, java.util.Set&lt;java.nio.file.attribute.PosixFilePermission&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.file.Files java.nio.file.Path write(java.nio.file.Path, java.lang.Iterable&lt;? extends java.lang.CharSequence&gt;, java.nio.charset.Charset, java.nio.file.OpenOption...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.file.Files java.nio.file.Path write(java.nio.file.Path, byte[], java.nio.file.OpenOption...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.file.InvalidPathException java.lang.String getMessage()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.file.LinkOption java.nio.file.LinkOption valueOf(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.file.SimpleFileVisitor java.nio.file.FileVisitResult postVisitDirectory(T, java.io.IOException)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.file.SimpleFileVisitor java.nio.file.FileVisitResult preVisitDirectory(T, java.nio.file.attribute.BasicFileAttributes)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.file.SimpleFileVisitor java.nio.file.FileVisitResult visitFile(T, java.nio.file.attribute.BasicFileAttributes)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.file.StandardCopyOption java.nio.file.StandardCopyOption valueOf(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.file.StandardOpenOption java.nio.file.StandardOpenOption valueOf(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.file.TempFileHelper java.nio.file.Path create(java.nio.file.Path, java.lang.String, java.lang.String, boolean, java.nio.file.attribute.FileAttribute[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.file.TempFileHelper java.nio.file.Path createTempDirectory(java.nio.file.Path, java.lang.String, java.nio.file.attribute.FileAttribute[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.nio.file.TempFileHelper java.nio.file.Path createTempFile(java.nio.file.Path, java.lang.String, java.lang.String, java.nio.file.attribute.FileAttribute[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
