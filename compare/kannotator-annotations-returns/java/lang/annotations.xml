<root>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(char)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.Appendable append(char)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(double)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(java.lang.CharSequence)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.Appendable append(java.lang.CharSequence)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(java.lang.CharSequence, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.Appendable append(java.lang.CharSequence, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(java.lang.StringBuffer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(char[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(char[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder appendCodePoint(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder delete(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder deleteCharAt(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder insert(int, char)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder insert(int, double)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder insert(int, float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder insert(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder insert(int, long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder insert(int, java.lang.CharSequence)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder insert(int, java.lang.CharSequence, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder insert(int, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder insert(int, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder insert(int, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder insert(int, char[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder insert(int, char[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder replace(int, int, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder reverse()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.CharSequence subSequence(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.String substring(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.AbstractStringBuilder java.lang.String substring(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Boolean java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Boolean java.lang.String toString(boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Byte java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Byte java.lang.String toString(byte)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Character.UnicodeBlock java.lang.Character.UnicodeBlock forName(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Character.UnicodeScript java.lang.Character.UnicodeScript forName(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Character.UnicodeScript java.lang.Character.UnicodeScript valueOf(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Character char[] toChars(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Character java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Character java.lang.String toString(char)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.CharacterName byte[] initNamePool()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Class java.lang.String argumentTypesToString(java.lang.Class&lt;?&gt;[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Class java.lang.Class&lt;? extends U&gt; asSubclass(java.lang.Class&lt;U&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Class java.lang.String cannotCastMsg(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Class java.lang.reflect.Constructor&lt;U&gt;[] copyConstructors(java.lang.reflect.Constructor&lt;U&gt;[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Class java.lang.reflect.Field[] copyFields(java.lang.reflect.Field[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Class java.lang.reflect.Method[] copyMethods(java.lang.reflect.Method[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Class java.lang.reflect.Constructor&lt;?&gt;[] getConstructors()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Class java.lang.reflect.Constructor&lt;?&gt;[] getDeclaredConstructors()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Class java.lang.reflect.Field getDeclaredField(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Class java.lang.reflect.Field[] getDeclaredFields()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Class java.lang.reflect.Method getDeclaredMethod(java.lang.String, java.lang.Class&lt;?&gt;...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Class java.lang.reflect.Method[] getDeclaredMethods()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Class sun.reflect.generics.factory.GenericsFactory getFactory()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Class java.lang.reflect.Field getField(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Class java.lang.reflect.Field[] getFields()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Class java.lang.reflect.Method getMethod(java.lang.String, java.lang.Class&lt;?&gt;...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Class java.lang.reflect.Method[] getMethods()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Class java.lang.String getSimpleName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Class java.lang.reflect.Field[] privateGetPublicFields(java.util.Set&lt;java.lang.Class&lt;?&gt;&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Class java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ClassLoader java.lang.Package definePackage(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.net.URL)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ClassLoader java.lang.Class defineTransformedClass(java.lang.String, byte[], int, int, java.security.ProtectionDomain, java.lang.ClassFormatError, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ClassLoader java.util.Enumeration&lt;java.net.URL&gt; getBootstrapResources(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ClassLoader java.lang.Object getClassLoadingLock(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ClassLoader java.util.Enumeration&lt;java.net.URL&gt; getResources(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ClassLoader java.util.Enumeration&lt;java.net.URL&gt; getSystemResources(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ClassLoader java.lang.String[] initializePath(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ClassLoader java.security.ProtectionDomain preDefineClass(java.lang.String, java.security.ProtectionDomain)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ClassValue.Entry java.lang.ClassValue.Entry&lt;T&gt; refreshVersion(java.lang.ClassValue.Version&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ClassValue java.lang.ClassValue.ClassValueMap getMap(java.lang.Class&lt;?&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ClassValue java.lang.ClassValue.ClassValueMap initializeMap(java.lang.Class&lt;?&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ClassValue java.lang.ClassValue.Entry&lt;T&gt; makeEntry(java.lang.ClassValue.Version&lt;T&gt;, T)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Double java.lang.String toHexString(double)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Double java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Double java.lang.String toString(double)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Double java.lang.Double valueOf(double)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Double java.lang.Double valueOf(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Enum T valueOf(java.lang.Class&lt;T&gt;, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Float java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Float java.lang.String toString(float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Float java.lang.Float valueOf(float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Float java.lang.Float valueOf(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Integer java.lang.String toBinaryString(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Integer java.lang.String toHexString(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Integer java.lang.String toOctalString(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Integer java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Integer java.lang.String toString(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Integer java.lang.String toString(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Integer java.lang.String toUnsignedString(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Long java.lang.String toBinaryString(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Long java.lang.String toHexString(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Long java.lang.String toOctalString(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Long java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Long java.lang.String toString(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Long java.lang.String toString(long, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Long java.lang.String toUnsignedString(long, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Math java.util.Random initRNG()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.NumberFormatException java.lang.NumberFormatException forInputString(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Object java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Package.1 java.lang.Object run()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Package.1 java.lang.Package run()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Package java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ProcessBuilder.Redirect.3 java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ProcessBuilder.Redirect.4 java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ProcessBuilder.Redirect.5 java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ProcessBuilder.Redirect.Type java.lang.ProcessBuilder.Redirect.Type valueOf(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ProcessBuilder.Redirect java.lang.ProcessBuilder.Redirect appendTo(java.io.File)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ProcessBuilder.Redirect java.lang.ProcessBuilder.Redirect from(java.io.File)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ProcessBuilder.Redirect java.lang.ProcessBuilder.Redirect to(java.io.File)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ProcessBuilder java.lang.ProcessBuilder command(java.util.List&lt;java.lang.String&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ProcessBuilder java.lang.ProcessBuilder command(java.lang.String...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ProcessBuilder java.lang.ProcessBuilder directory(java.io.File)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ProcessBuilder java.lang.ProcessBuilder environment(java.lang.String[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ProcessBuilder java.lang.ProcessBuilder inheritIO()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ProcessBuilder java.lang.ProcessBuilder redirectError(java.io.File)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ProcessBuilder java.lang.ProcessBuilder redirectError(java.lang.ProcessBuilder.Redirect)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ProcessBuilder java.lang.ProcessBuilder redirectErrorStream(boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ProcessBuilder java.lang.ProcessBuilder redirectInput(java.io.File)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ProcessBuilder java.lang.ProcessBuilder redirectInput(java.lang.ProcessBuilder.Redirect)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ProcessBuilder java.lang.ProcessBuilder redirectOutput(java.io.File)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ProcessBuilder java.lang.ProcessBuilder redirectOutput(java.lang.ProcessBuilder.Redirect)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ProcessBuilder java.lang.Process start()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ProcessEnvironment.CheckedEntry java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ProcessEnvironment.CheckedEntrySet.1 java.lang.Object next()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ProcessEnvironment.CheckedEntrySet.1 java.util.Map.Entry&lt;java.lang.String,java.lang.String&gt; next()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ProcessEnvironment.CheckedEntrySet java.util.Map.Entry&lt;java.lang.String,java.lang.String&gt; checkedEntry(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ProcessEnvironment.CheckedEntrySet java.util.Iterator&lt;java.util.Map.Entry&lt;java.lang.String,java.lang.String&gt;&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ProcessEnvironment java.lang.String access$000(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ProcessEnvironment java.lang.String access$200(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ProcessEnvironment java.util.Map&lt;java.lang.String,java.lang.String&gt; emptyEnvironment(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ProcessEnvironment java.util.Set&lt;java.util.Map.Entry&lt;java.lang.String,java.lang.String&gt;&gt; entrySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ProcessEnvironment java.util.Set&lt;java.lang.String&gt; keySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ProcessEnvironment java.lang.String nonNullString(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ProcessEnvironment java.lang.String toEnvironmentBlock()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ProcessEnvironment java.lang.String validateName(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ProcessEnvironment java.lang.String validateValue(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ProcessEnvironment java.util.Collection&lt;java.lang.String&gt; values()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ProcessImpl.1 java.io.FileOutputStream run()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ProcessImpl.1 java.lang.Object run()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ProcessImpl java.lang.Process start(java.lang.String[], java.util.Map&lt;java.lang.String,java.lang.String&gt;, java.lang.String, java.lang.ProcessBuilder.Redirect[], boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Runtime java.lang.Process exec(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Runtime java.lang.Process exec(java.lang.String, java.lang.String[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Runtime java.lang.Process exec(java.lang.String, java.lang.String[], java.io.File)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Runtime java.lang.Process exec(java.lang.String[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Runtime java.lang.Process exec(java.lang.String[], java.lang.String[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Runtime java.lang.Process exec(java.lang.String[], java.lang.String[], java.io.File)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.SecurityManager java.lang.String[] getPackages(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.SecurityManager java.lang.ThreadGroup getRootGroup()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Short java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Short java.lang.String toString(short)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StackTraceElement java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StrictMath java.util.Random initRNG()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String concat(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String copyValueOf(char[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String copyValueOf(char[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String format(java.lang.String, java.lang.Object...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String format(java.util.Locale, java.lang.String, java.lang.Object...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String byte[] getBytes(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String byte[] getBytes(java.nio.charset.Charset)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String replace(char, char)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.CharSequence subSequence(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String substring(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String substring(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String char[] toCharArray()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String toLowerCase()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String toLowerCase(java.util.Locale)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String toUpperCase()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String toUpperCase(java.util.Locale)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String trim()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String valueOf(char)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String valueOf(double)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String valueOf(float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String valueOf(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String valueOf(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String valueOf(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String valueOf(boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String valueOf(char[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.String java.lang.String valueOf(char[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.AbstractStringBuilder append(char)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.Appendable append(char)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer append(char)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.AbstractStringBuilder append(double)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer append(double)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.AbstractStringBuilder append(float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer append(float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.AbstractStringBuilder append(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer append(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.AbstractStringBuilder append(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer append(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.AbstractStringBuilder append(java.lang.CharSequence)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.Appendable append(java.lang.CharSequence)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer append(java.lang.CharSequence)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.AbstractStringBuilder append(java.lang.CharSequence, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.Appendable append(java.lang.CharSequence, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer append(java.lang.CharSequence, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.AbstractStringBuilder append(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer append(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.AbstractStringBuilder append(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer append(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.AbstractStringBuilder append(java.lang.StringBuffer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer append(java.lang.StringBuffer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.AbstractStringBuilder append(boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer append(boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.AbstractStringBuilder append(char[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer append(char[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.AbstractStringBuilder append(char[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer append(char[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.AbstractStringBuilder appendCodePoint(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer appendCodePoint(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.AbstractStringBuilder delete(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer delete(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.AbstractStringBuilder deleteCharAt(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer deleteCharAt(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.AbstractStringBuilder insert(int, char)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer insert(int, char)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.AbstractStringBuilder insert(int, double)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer insert(int, double)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.AbstractStringBuilder insert(int, float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer insert(int, float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.AbstractStringBuilder insert(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer insert(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.AbstractStringBuilder insert(int, long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer insert(int, long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.AbstractStringBuilder insert(int, java.lang.CharSequence)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer insert(int, java.lang.CharSequence)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.AbstractStringBuilder insert(int, java.lang.CharSequence, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer insert(int, java.lang.CharSequence, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.AbstractStringBuilder insert(int, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer insert(int, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.AbstractStringBuilder insert(int, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer insert(int, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.AbstractStringBuilder insert(int, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer insert(int, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.AbstractStringBuilder insert(int, char[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer insert(int, char[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.AbstractStringBuilder insert(int, char[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer insert(int, char[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.AbstractStringBuilder replace(int, int, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer replace(int, int, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.AbstractStringBuilder reverse()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.StringBuffer reverse()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.CharSequence subSequence(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.String substring(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.String substring(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuffer java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.AbstractStringBuilder append(char)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.Appendable append(char)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder append(char)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.AbstractStringBuilder append(double)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder append(double)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.AbstractStringBuilder append(float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder append(float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.AbstractStringBuilder append(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder append(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.AbstractStringBuilder append(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder append(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.AbstractStringBuilder append(java.lang.CharSequence)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.Appendable append(java.lang.CharSequence)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder append(java.lang.CharSequence)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.AbstractStringBuilder append(java.lang.CharSequence, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.Appendable append(java.lang.CharSequence, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder append(java.lang.CharSequence, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.AbstractStringBuilder append(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder append(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.AbstractStringBuilder append(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder append(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.AbstractStringBuilder append(java.lang.StringBuffer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder append(java.lang.StringBuffer)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder append(java.lang.StringBuilder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.AbstractStringBuilder append(boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder append(boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.AbstractStringBuilder append(char[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder append(char[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.AbstractStringBuilder append(char[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder append(char[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.AbstractStringBuilder appendCodePoint(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder appendCodePoint(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.AbstractStringBuilder delete(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder delete(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.AbstractStringBuilder deleteCharAt(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder deleteCharAt(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.AbstractStringBuilder insert(int, char)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder insert(int, char)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.AbstractStringBuilder insert(int, double)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder insert(int, double)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.AbstractStringBuilder insert(int, float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder insert(int, float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.AbstractStringBuilder insert(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder insert(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.AbstractStringBuilder insert(int, long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder insert(int, long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.AbstractStringBuilder insert(int, java.lang.CharSequence)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder insert(int, java.lang.CharSequence)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.AbstractStringBuilder insert(int, java.lang.CharSequence, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder insert(int, java.lang.CharSequence, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.AbstractStringBuilder insert(int, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder insert(int, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.AbstractStringBuilder insert(int, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder insert(int, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.AbstractStringBuilder insert(int, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder insert(int, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.AbstractStringBuilder insert(int, char[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder insert(int, char[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.AbstractStringBuilder insert(int, char[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder insert(int, char[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.AbstractStringBuilder replace(int, int, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder replace(int, int, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.AbstractStringBuilder reverse()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.StringBuilder reverse()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.CharSequence subSequence(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.String substring(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.String substring(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringBuilder java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringCoding.StringDecoder char[] decode(byte[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringCoding.StringEncoder byte[] encode(char[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringCoding char[] access$100(char[], int, java.nio.charset.Charset, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringCoding byte[] access$300(byte[], int, java.nio.charset.Charset, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringCoding char[] decode(java.lang.String, byte[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringCoding char[] decode(java.nio.charset.Charset, byte[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringCoding byte[] encode(java.lang.String, char[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringCoding byte[] encode(java.nio.charset.Charset, char[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringCoding byte[] safeTrim(byte[], int, java.nio.charset.Charset, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.StringCoding char[] safeTrim(char[], int, java.nio.charset.Charset, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Thread.State java.lang.Thread.State valueOf(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Thread java.util.Map&lt;java.lang.Thread,java.lang.StackTraceElement[]&gt; getAllStackTraces()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Thread java.lang.String getName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Thread java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ThreadGroup java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.ThreadLocal java.lang.ThreadLocal.ThreadLocalMap createInheritedMap(java.lang.ThreadLocal.ThreadLocalMap)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Throwable java.lang.Throwable fillInStackTrace()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.lang.Throwable java.lang.Throwable initCause(java.lang.Throwable)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
