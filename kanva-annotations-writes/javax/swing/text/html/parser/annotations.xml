<root>
    <item name='javax.swing.text.html.parser.AttributeList void defineAttributeType(java.lang.String, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.html.parser.AttributeList int name2type(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.html.parser.DTD javax.swing.text.html.parser.Element defElement(java.lang.String, int, boolean, boolean, javax.swing.text.html.parser.ContentModel, java.lang.String[], java.lang.String[], javax.swing.text.html.parser.AttributeList) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.html.parser.DTD javax.swing.text.html.parser.Entity defEntity(java.lang.String, int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.html.parser.DTD javax.swing.text.html.parser.Entity defEntity(java.lang.String, int, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.html.parser.DTD javax.swing.text.html.parser.Entity defEntity(java.lang.String, int, java.lang.String) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.html.parser.DTD void defineAttributes(java.lang.String, javax.swing.text.html.parser.AttributeList) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.html.parser.DTD javax.swing.text.html.parser.Element defineElement(java.lang.String, int, boolean, boolean, javax.swing.text.html.parser.ContentModel, java.util.BitSet, java.util.BitSet, javax.swing.text.html.parser.AttributeList) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.html.parser.DTD javax.swing.text.html.parser.Entity defineEntity(java.lang.String, int, char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.html.parser.DTD javax.swing.text.html.parser.DTD getDTD(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.html.parser.DTD javax.swing.text.html.parser.Element getElement(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.html.parser.DTD javax.swing.text.html.parser.Entity getEntity(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.html.parser.DTD void putDTDHash(java.lang.String, javax.swing.text.html.parser.DTD) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.html.parser.DTD void putDTDHash(java.lang.String, javax.swing.text.html.parser.DTD) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.html.parser.DTD void read(java.io.DataInputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.html.parser.DTD javax.swing.text.html.parser.AttributeList readAttributeList(java.io.DataInputStream, java.lang.String[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.html.parser.DTD javax.swing.text.html.parser.ContentModel readContentModel(java.io.DataInputStream, java.lang.String[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.html.parser.DTD java.lang.String[] readNameArray(java.io.DataInputStream, java.lang.String[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.html.parser.DocumentParser void handleEmptyTag(javax.swing.text.html.parser.TagElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.html.parser.DocumentParser void handleEndTag(javax.swing.text.html.parser.TagElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.html.parser.DocumentParser void handleStartTag(javax.swing.text.html.parser.TagElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.html.parser.DocumentParser void parse(java.io.Reader, javax.swing.text.html.HTMLEditorKit.ParserCallback, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.html.parser.DocumentParser void parse(java.io.Reader, javax.swing.text.html.HTMLEditorKit.ParserCallback, boolean) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.html.parser.Element int name2type(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.html.parser.Entity int name2type(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.html.parser.Parser void handleText(javax.swing.text.html.parser.TagElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.html.parser.Parser boolean ignoreElement(javax.swing.text.html.parser.Element) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.html.parser.Parser void legalTagContext(javax.swing.text.html.parser.TagElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.html.parser.Parser javax.swing.text.html.parser.TagElement makeTag(javax.swing.text.html.parser.Element) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.html.parser.Parser javax.swing.text.html.parser.TagElement makeTag(javax.swing.text.html.parser.Element, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.html.parser.Parser void markFirstTime(javax.swing.text.html.parser.Element) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.html.parser.Parser void parse(java.io.Reader) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.html.parser.Parser boolean parseMarkupDeclarations(java.lang.StringBuffer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.html.parser.Parser void startTag(javax.swing.text.html.parser.TagElement) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.html.parser.ParserDelegator void parse(java.io.Reader, javax.swing.text.html.HTMLEditorKit.ParserCallback, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.html.parser.ParserDelegator void parse(java.io.Reader, javax.swing.text.html.HTMLEditorKit.ParserCallback, boolean) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.html.parser.ParserDelegator void readObject(java.io.ObjectInputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.html.parser.TagElement TagElement(javax.swing.text.html.parser.Element) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.html.parser.TagElement TagElement(javax.swing.text.html.parser.Element, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.text.html.parser.TagStack TagStack(javax.swing.text.html.parser.TagElement, javax.swing.text.html.parser.TagStack) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
