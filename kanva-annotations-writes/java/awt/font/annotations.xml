<root>
    <item name='java.awt.font.GlyphMetrics GlyphMetrics(float, java.awt.geom.Rectangle2D, byte) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.GlyphMetrics GlyphMetrics(boolean, float, float, java.awt.geom.Rectangle2D, byte) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.ImageGraphicAttribute ImageGraphicAttribute(java.awt.Image, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.ImageGraphicAttribute ImageGraphicAttribute(java.awt.Image, int, float, float) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.ImageGraphicAttribute void draw(java.awt.Graphics2D, float, float) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.LineBreakMeasurer LineBreakMeasurer(java.text.AttributedCharacterIterator, java.awt.font.FontRenderContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.LineBreakMeasurer LineBreakMeasurer(java.text.AttributedCharacterIterator, java.text.BreakIterator, java.awt.font.FontRenderContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.LineBreakMeasurer void deleteChar(java.text.AttributedCharacterIterator, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.LineBreakMeasurer void insertChar(java.text.AttributedCharacterIterator, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.NumericShaper.1 int compare(java.awt.font.NumericShaper.Range, java.awt.font.NumericShaper.Range) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.NumericShaper.1 int compare(java.awt.font.NumericShaper.Range, java.awt.font.NumericShaper.Range) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.NumericShaper.1 int compare(java.lang.Object, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.NumericShaper.1 int compare(java.lang.Object, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.NumericShaper.Range boolean access$100(java.awt.font.NumericShaper.Range, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.NumericShaper.Range int access$200(java.awt.font.NumericShaper.Range) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.NumericShaper.Range int access$300(java.awt.font.NumericShaper.Range) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.NumericShaper.Range int access$400(java.awt.font.NumericShaper.Range) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.NumericShaper.Range int access$500(java.awt.font.NumericShaper.Range) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.NumericShaper.Range int access$700(java.awt.font.NumericShaper.Range) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.NumericShaper.Range int access$900(java.util.Set) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.NumericShaper.Range int toRangeIndex(java.awt.font.NumericShaper.Range) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.NumericShaper.Range int toRangeMask(java.util.Set&lt;java.awt.font.NumericShaper.Range&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.NumericShaper NumericShaper(java.awt.font.NumericShaper.Range, java.util.Set&lt;java.awt.font.NumericShaper.Range&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.NumericShaper void checkParams(char[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.NumericShaper java.awt.font.NumericShaper getContextualShaper(java.util.Set&lt;java.awt.font.NumericShaper.Range&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.NumericShaper java.awt.font.NumericShaper getContextualShaper(java.util.Set&lt;java.awt.font.NumericShaper.Range&gt;, java.awt.font.NumericShaper.Range) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.NumericShaper java.awt.font.NumericShaper getContextualShaper(java.util.Set&lt;java.awt.font.NumericShaper.Range&gt;, java.awt.font.NumericShaper.Range) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.NumericShaper java.awt.font.NumericShaper getShaper(java.awt.font.NumericShaper.Range) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.NumericShaper int search(int, int[], int, int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.NumericShaper void shape(char[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.NumericShaper void shape(char[], int, int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.NumericShaper void shape(char[], int, int, java.awt.font.NumericShaper.Range) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.NumericShaper void shape(char[], int, int, java.awt.font.NumericShaper.Range) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.NumericShaper void writeObject(java.io.ObjectOutputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.ShapeGraphicAttribute void draw(java.awt.Graphics2D, float, float) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.StyledParagraph StyledParagraph(java.text.AttributedCharacterIterator, char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.StyledParagraph void addFonts(char[], java.util.Map, int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.StyledParagraph java.util.Map addInputMethodAttrs(java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.StyledParagraph int[] addToVector(java.lang.Object, int, java.util.Vector, int[]) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.StyledParagraph java.awt.font.StyledParagraph deleteChar(java.text.AttributedCharacterIterator, char[], int, java.awt.font.StyledParagraph) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.StyledParagraph java.awt.font.StyledParagraph deleteChar(java.text.AttributedCharacterIterator, char[], int, java.awt.font.StyledParagraph) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.StyledParagraph void deleteFrom(int, int[], int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.StyledParagraph int findRunContaining(int, int[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.StyledParagraph java.lang.Object getGraphicOrFont(java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.StyledParagraph java.awt.font.StyledParagraph insertChar(java.text.AttributedCharacterIterator, char[], int, java.awt.font.StyledParagraph) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.StyledParagraph java.awt.font.StyledParagraph insertChar(java.text.AttributedCharacterIterator, char[], int, java.awt.font.StyledParagraph) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.StyledParagraph void insertInto(int, int[], int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout.CaretPolicy java.awt.font.TextHitInfo getStrongCaret(java.awt.font.TextHitInfo, java.awt.font.TextHitInfo, java.awt.font.TextLayout) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout.CaretPolicy java.awt.font.TextHitInfo getStrongCaret(java.awt.font.TextHitInfo, java.awt.font.TextHitInfo, java.awt.font.TextLayout) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout.CaretPolicy java.awt.font.TextHitInfo getStrongCaret(java.awt.font.TextHitInfo, java.awt.font.TextHitInfo, java.awt.font.TextLayout) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout TextLayout(java.awt.font.TextLine, byte, float[], float) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout TextLayout(java.lang.String, java.awt.Font, java.awt.font.FontRenderContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout TextLayout(java.lang.String, java.awt.Font, java.awt.font.FontRenderContext) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout TextLayout(java.lang.String, java.util.Map&lt;? extends java.text.AttributedCharacterIterator.Attribute,?&gt;, java.awt.font.FontRenderContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout TextLayout(java.lang.String, java.util.Map&lt;? extends java.text.AttributedCharacterIterator.Attribute,?&gt;, java.awt.font.FontRenderContext) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout TextLayout(java.text.AttributedCharacterIterator, java.awt.font.FontRenderContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout java.awt.font.TextHitInfo access$000(java.awt.font.TextLayout, java.awt.font.TextHitInfo, java.awt.font.TextHitInfo) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout java.awt.font.TextHitInfo access$000(java.awt.font.TextLayout, java.awt.font.TextHitInfo, java.awt.font.TextHitInfo) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout java.awt.font.TextHitInfo access$000(java.awt.font.TextLayout, java.awt.font.TextHitInfo, java.awt.font.TextHitInfo) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout java.awt.geom.GeneralPath boundingShape(double[], double[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout java.awt.geom.GeneralPath boundingShape(double[], double[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout java.awt.geom.GeneralPath caretBoundingShape(int, int, java.awt.geom.Rectangle2D) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout float caretToPointDistance(float[], float, float) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout void checkTextHit(java.awt.font.TextHitInfo) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout void draw(java.awt.Graphics2D, float, float) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout void fastInit(char[], java.awt.Font, java.util.Map, java.awt.font.FontRenderContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout void fastInit(char[], java.awt.Font, java.util.Map, java.awt.font.FontRenderContext) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout byte getBaselineFromGraphic(java.awt.font.GraphicAttribute) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout float[] getCaretInfo(int, java.awt.geom.Rectangle2D, float[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout float[] getCaretInfo(java.awt.font.TextHitInfo) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout float[] getCaretInfo(java.awt.font.TextHitInfo, java.awt.geom.Rectangle2D) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout float[] getCaretInfo(java.awt.font.TextHitInfo, java.awt.geom.Rectangle2D) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout float[] getCaretInfoTestInternal(java.awt.font.TextHitInfo, java.awt.geom.Rectangle2D) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout float[] getCaretInfoTestInternal(java.awt.font.TextHitInfo, java.awt.geom.Rectangle2D) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout double[] getCaretPath(int, java.awt.geom.Rectangle2D, boolean) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout double[] getCaretPath(java.awt.font.TextHitInfo, java.awt.geom.Rectangle2D) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout double[] getCaretPath(java.awt.font.TextHitInfo, java.awt.geom.Rectangle2D) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout java.awt.Shape getCaretShape(java.awt.font.TextHitInfo) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout java.awt.Shape getCaretShape(java.awt.font.TextHitInfo, java.awt.geom.Rectangle2D) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout java.awt.Shape getCaretShape(java.awt.font.TextHitInfo, java.awt.geom.Rectangle2D) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout java.awt.Shape[] getCaretShapes(int, java.awt.geom.Rectangle2D) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout java.awt.Shape[] getCaretShapes(int, java.awt.geom.Rectangle2D, java.awt.font.TextLayout.CaretPolicy) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout java.awt.Shape[] getCaretShapes(int, java.awt.geom.Rectangle2D, java.awt.font.TextLayout.CaretPolicy) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout java.awt.Shape getLogicalHighlightShape(int, int, java.awt.geom.Rectangle2D) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout int[] getLogicalRangesForVisualSelection(java.awt.font.TextHitInfo, java.awt.font.TextHitInfo) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout int[] getLogicalRangesForVisualSelection(java.awt.font.TextHitInfo, java.awt.font.TextHitInfo) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout java.awt.font.TextHitInfo getNextLeftHit(int, java.awt.font.TextLayout.CaretPolicy) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout java.awt.font.TextHitInfo getNextLeftHit(java.awt.font.TextHitInfo) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout java.awt.font.TextHitInfo getNextRightHit(int, java.awt.font.TextLayout.CaretPolicy) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout java.awt.font.TextHitInfo getNextRightHit(java.awt.font.TextHitInfo) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout java.awt.font.TextHitInfo getStrongHit(java.awt.font.TextHitInfo, java.awt.font.TextHitInfo) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout java.awt.font.TextHitInfo getStrongHit(java.awt.font.TextHitInfo, java.awt.font.TextHitInfo) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout java.awt.Shape getVisualHighlightShape(java.awt.font.TextHitInfo, java.awt.font.TextHitInfo) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout java.awt.Shape getVisualHighlightShape(java.awt.font.TextHitInfo, java.awt.font.TextHitInfo) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout java.awt.Shape getVisualHighlightShape(java.awt.font.TextHitInfo, java.awt.font.TextHitInfo, java.awt.geom.Rectangle2D) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout java.awt.Shape getVisualHighlightShape(java.awt.font.TextHitInfo, java.awt.font.TextHitInfo, java.awt.geom.Rectangle2D) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout java.awt.Shape getVisualHighlightShape(java.awt.font.TextHitInfo, java.awt.font.TextHitInfo, java.awt.geom.Rectangle2D) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout java.awt.font.TextHitInfo getVisualOtherHit(java.awt.font.TextHitInfo) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout java.awt.font.TextHitInfo hitTestChar(float, float, java.awt.geom.Rectangle2D) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout int hitToCaret(java.awt.font.TextHitInfo) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout void hitToPoint(java.awt.font.TextHitInfo, java.awt.geom.Point2D) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout void hitToPoint(java.awt.font.TextHitInfo, java.awt.geom.Point2D) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout java.awt.geom.GeneralPath leftShape(java.awt.geom.Rectangle2D) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout void paragraphInit(byte, sun.font.CoreMetrics, java.util.Map, char[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout java.awt.geom.GeneralPath pathToShape(double[], boolean, sun.font.LayoutPathImpl) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout java.awt.geom.GeneralPath rightShape(java.awt.geom.Rectangle2D) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout java.awt.Font singleFont(char[], int, int, java.util.Map) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout void standardInit(java.text.AttributedCharacterIterator, char[], java.awt.font.FontRenderContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLayout void standardInit(java.text.AttributedCharacterIterator, char[], java.awt.font.FontRenderContext) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLine.1 float computeFunction(java.awt.font.TextLine, int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLine.2 float computeFunction(java.awt.font.TextLine, int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLine.3 float computeFunction(java.awt.font.TextLine, int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLine.4 float computeFunction(java.awt.font.TextLine, int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLine sun.font.TextLineComponent[] access$100(java.awt.font.TextLine) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLine int access$200(java.awt.font.TextLine, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLine float[] access$300(java.awt.font.TextLine) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLine float access$400(java.awt.font.TextLine, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLine boolean advanceToFirstFont(java.text.AttributedCharacterIterator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLine float applyFunctionAtIndex(int, java.awt.font.TextLine.Function) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLine java.awt.Rectangle computePixelBounds(java.awt.image.BufferedImage) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLine sun.font.TextLineComponent[] createComponentsOnRun(int, int, char[], int[], byte[], sun.font.TextLabelFactory, java.awt.Font, sun.font.CoreMetrics, java.awt.font.FontRenderContext, sun.font.Decoration, sun.font.TextLineComponent[], int) 5'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLine sun.font.TextLineComponent[] createComponentsOnRun(int, int, char[], int[], byte[], sun.font.TextLabelFactory, java.awt.Font, sun.font.CoreMetrics, java.awt.font.FontRenderContext, sun.font.Decoration, sun.font.TextLineComponent[], int) 6'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLine sun.font.TextLineComponent[] createComponentsOnRun(int, int, char[], int[], byte[], sun.font.TextLabelFactory, java.awt.Font, sun.font.CoreMetrics, java.awt.font.FontRenderContext, sun.font.Decoration, sun.font.TextLineComponent[], int) 10'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLine java.awt.font.TextLine createLineFromText(char[], java.awt.font.StyledParagraph, sun.font.TextLabelFactory, boolean, float[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLine java.awt.font.TextLine createLineFromText(char[], java.awt.font.StyledParagraph, sun.font.TextLabelFactory, boolean, float[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLine java.awt.font.TextLine createLineFromText(char[], java.awt.font.StyledParagraph, sun.font.TextLabelFactory, boolean, float[]) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLine sun.font.TextLineComponent[] expandArray(sun.font.TextLineComponent[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLine java.awt.font.TextLine fastCreateTextLine(java.awt.font.FontRenderContext, char[], java.awt.Font, sun.font.CoreMetrics, java.util.Map) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLine java.awt.font.TextLine fastCreateTextLine(java.awt.font.FontRenderContext, char[], java.awt.Font, sun.font.CoreMetrics, java.util.Map) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLine java.awt.font.TextLine fastCreateTextLine(java.awt.font.FontRenderContext, char[], java.awt.Font, sun.font.CoreMetrics, java.util.Map) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLine float getAdvanceBetween(sun.font.TextLineComponent[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLine sun.font.TextLineComponent[] getComponents(java.awt.font.StyledParagraph, char[], int, int, int[], byte[], sun.font.TextLabelFactory) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLine sun.font.TextLineComponent[] getComponents(java.awt.font.StyledParagraph, char[], int, int, int[], byte[], sun.font.TextLabelFactory) 6'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLine java.awt.Font getFontAtCurrentPos(java.text.AttributedCharacterIterator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLine float[] getNormalizedOffsets(float[], byte) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLine java.awt.font.TextLine standardCreateTextLine(java.awt.font.FontRenderContext, java.text.AttributedCharacterIterator, char[], float[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextLine java.awt.font.TextLine standardCreateTextLine(java.awt.font.FontRenderContext, java.text.AttributedCharacterIterator, char[], float[]) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextMeasurer TextMeasurer(java.text.AttributedCharacterIterator, java.awt.font.FontRenderContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextMeasurer void deleteChar(java.text.AttributedCharacterIterator, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextMeasurer void initAll(java.text.AttributedCharacterIterator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TextMeasurer void insertChar(java.text.AttributedCharacterIterator, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TransformAttribute boolean equals(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.font.TransformAttribute void writeObject(java.io.ObjectOutputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
