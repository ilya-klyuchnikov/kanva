<root>
    <item name='java.awt.image.AffineTransformOp AffineTransformOp(java.awt.geom.AffineTransform, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.AffineTransformOp AffineTransformOp(java.awt.geom.AffineTransform, java.awt.RenderingHints) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.AffineTransformOp java.awt.image.BufferedImage createCompatibleDestImage(java.awt.image.BufferedImage, java.awt.image.ColorModel) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.AffineTransformOp java.awt.image.WritableRaster createCompatibleDestRaster(java.awt.image.Raster) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.AffineTransformOp java.awt.image.BufferedImage filter(java.awt.image.BufferedImage, java.awt.image.BufferedImage) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.AffineTransformOp java.awt.image.WritableRaster filter(java.awt.image.Raster, java.awt.image.WritableRaster) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.AffineTransformOp java.awt.geom.Rectangle2D getBounds2D(java.awt.image.BufferedImage) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.AffineTransformOp java.awt.geom.Rectangle2D getBounds2D(java.awt.image.Raster) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.AffineTransformOp java.awt.geom.Point2D getPoint2D(java.awt.geom.Point2D, java.awt.geom.Point2D) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.AffineTransformOp void validateTransform(java.awt.geom.AffineTransform) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.BandCombineOp BandCombineOp(float[][], java.awt.RenderingHints) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.BandCombineOp java.awt.image.WritableRaster createCompatibleDestRaster(java.awt.image.Raster) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.BandCombineOp java.awt.image.WritableRaster filter(java.awt.image.Raster, java.awt.image.WritableRaster) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.BandCombineOp java.awt.geom.Rectangle2D getBounds2D(java.awt.image.Raster) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.BandCombineOp java.awt.geom.Point2D getPoint2D(java.awt.geom.Point2D, java.awt.geom.Point2D) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.BandedSampleModel BandedSampleModel(int, int, int, int, int[], int[]) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.BandedSampleModel BandedSampleModel(int, int, int, int, int[], int[]) 5'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.BandedSampleModel java.awt.image.SampleModel createSubsetSampleModel(int[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.BandedSampleModel int getSample(int, int, int, java.awt.image.DataBuffer) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.BandedSampleModel double getSampleDouble(int, int, int, java.awt.image.DataBuffer) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.BandedSampleModel float getSampleFloat(int, int, int, java.awt.image.DataBuffer) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.BandedSampleModel void setSample(int, int, int, double, java.awt.image.DataBuffer) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.BandedSampleModel void setSample(int, int, int, float, java.awt.image.DataBuffer) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.BandedSampleModel void setSample(int, int, int, int, java.awt.image.DataBuffer) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.BufferedImage BufferedImage(int, int, int, java.awt.image.IndexColorModel) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.BufferedImage BufferedImage(java.awt.image.ColorModel, java.awt.image.WritableRaster, boolean, java.util.Hashtable&lt;?,?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.BufferedImage BufferedImage(java.awt.image.ColorModel, java.awt.image.WritableRaster, boolean, java.util.Hashtable&lt;?,?&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.BufferedImage java.awt.image.Raster getData(java.awt.Rectangle) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.BufferedImage java.lang.Object getProperty(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.BufferedImage java.lang.Object getProperty(java.lang.String, java.awt.image.ImageObserver) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.BufferedImage void setData(java.awt.image.Raster) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.BufferedImageFilter BufferedImageFilter(java.awt.image.BufferedImageOp) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ByteLookupTable ByteLookupTable(int, byte[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ByteLookupTable ByteLookupTable(int, byte[][]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ByteLookupTable byte[] lookupPixel(byte[], byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ByteLookupTable int[] lookupPixel(int[], int[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorConvertOp ColorConvertOp(java.awt.color.ColorSpace, java.awt.RenderingHints) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorConvertOp ColorConvertOp(java.awt.color.ColorSpace, java.awt.color.ColorSpace, java.awt.RenderingHints) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorConvertOp ColorConvertOp(java.awt.color.ColorSpace, java.awt.color.ColorSpace, java.awt.RenderingHints) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorConvertOp ColorConvertOp(java.awt.color.ICC_Profile[], java.awt.RenderingHints) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorConvertOp java.awt.image.BufferedImage ICCBIFilter(java.awt.image.BufferedImage, java.awt.color.ColorSpace, java.awt.image.BufferedImage, java.awt.color.ColorSpace) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorConvertOp java.awt.image.BufferedImage ICCBIFilter(java.awt.image.BufferedImage, java.awt.color.ColorSpace, java.awt.image.BufferedImage, java.awt.color.ColorSpace) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorConvertOp java.awt.image.BufferedImage createCompatibleDestImage(java.awt.image.BufferedImage, java.awt.image.ColorModel) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorConvertOp java.awt.image.BufferedImage createCompatibleDestImage(java.awt.image.BufferedImage, java.awt.image.ColorModel, java.awt.color.ColorSpace) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorConvertOp java.awt.image.WritableRaster createCompatibleDestRaster(java.awt.image.Raster) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorConvertOp java.awt.image.BufferedImage filter(java.awt.image.BufferedImage, java.awt.image.BufferedImage) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorConvertOp java.awt.image.WritableRaster filter(java.awt.image.Raster, java.awt.image.WritableRaster) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorConvertOp java.awt.geom.Rectangle2D getBounds2D(java.awt.image.BufferedImage) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorConvertOp java.awt.geom.Rectangle2D getBounds2D(java.awt.image.Raster) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorConvertOp void getMinMaxValsFromColorSpaces(java.awt.color.ColorSpace, java.awt.color.ColorSpace) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorConvertOp void getMinMaxValsFromColorSpaces(java.awt.color.ColorSpace, java.awt.color.ColorSpace) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorConvertOp void getMinMaxValsFromProfiles(java.awt.color.ICC_Profile, java.awt.color.ICC_Profile) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorConvertOp void getMinMaxValsFromProfiles(java.awt.color.ICC_Profile, java.awt.color.ICC_Profile) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorConvertOp java.awt.geom.Point2D getPoint2D(java.awt.geom.Point2D, java.awt.geom.Point2D) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorConvertOp int getRenderingIntent(java.awt.color.ICC_Profile) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorConvertOp java.awt.image.BufferedImage nonICCBIFilter(java.awt.image.BufferedImage, java.awt.color.ColorSpace, java.awt.image.BufferedImage, java.awt.color.ColorSpace) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorConvertOp java.awt.image.WritableRaster nonICCRasterFilter(java.awt.image.Raster, java.awt.image.WritableRaster) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorModel ColorModel(int, int[], java.awt.color.ColorSpace, boolean, boolean, int, int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorModel ColorModel(int, int[], java.awt.color.ColorSpace, boolean, boolean, int, int) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorModel int getAlpha(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorModel int getBlue(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorModel int getDataElement(float[], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorModel java.lang.Object getDataElements(float[], int, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorModel int getGreen(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorModel float[] getNormalizedComponents(int[], int, float[], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorModel int getRGB(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorModel int getRed(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ColorModel int[] getUnnormalizedComponents(float[], int, int[], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ComponentColorModel ComponentColorModel(java.awt.color.ColorSpace, boolean, boolean, int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ComponentColorModel ComponentColorModel(java.awt.color.ColorSpace, int[], boolean, boolean, int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ComponentColorModel int bitsHelper(int, java.awt.color.ColorSpace, boolean) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ComponentColorModel int extractComponent(java.lang.Object, int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ComponentColorModel int getDataElement(int[], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ComponentColorModel java.lang.Object getDataElements(int[], int, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ComponentColorModel float[] getNormalizedComponents(int[], int, float[], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ComponentColorModel int[] getUnnormalizedComponents(float[], int, int[], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ComponentColorModel boolean isCompatibleRaster(java.awt.image.Raster) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ComponentSampleModel ComponentSampleModel(int, int, int, int, int, int[]) 5'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ComponentSampleModel ComponentSampleModel(int, int, int, int, int, int[], int[]) 5'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ComponentSampleModel ComponentSampleModel(int, int, int, int, int, int[], int[]) 6'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ComponentSampleModel java.awt.image.SampleModel createSubsetSampleModel(int[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ComponentSampleModel int getSample(int, int, int, java.awt.image.DataBuffer) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ComponentSampleModel double getSampleDouble(int, int, int, java.awt.image.DataBuffer) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ComponentSampleModel float getSampleFloat(int, int, int, java.awt.image.DataBuffer) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ComponentSampleModel int[] orderBands(int[], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ComponentSampleModel void setSample(int, int, int, double, java.awt.image.DataBuffer) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ComponentSampleModel void setSample(int, int, int, float, java.awt.image.DataBuffer) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ComponentSampleModel void setSample(int, int, int, int, java.awt.image.DataBuffer) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ConvolveOp java.awt.image.BufferedImage createCompatibleDestImage(java.awt.image.BufferedImage, java.awt.image.ColorModel) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ConvolveOp java.awt.image.WritableRaster createCompatibleDestRaster(java.awt.image.Raster) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ConvolveOp java.awt.image.BufferedImage filter(java.awt.image.BufferedImage, java.awt.image.BufferedImage) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ConvolveOp java.awt.image.WritableRaster filter(java.awt.image.Raster, java.awt.image.WritableRaster) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ConvolveOp java.awt.geom.Rectangle2D getBounds2D(java.awt.image.BufferedImage) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ConvolveOp java.awt.geom.Rectangle2D getBounds2D(java.awt.image.Raster) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ConvolveOp java.awt.geom.Point2D getPoint2D(java.awt.geom.Point2D, java.awt.geom.Point2D) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.CropImageFilter void setProperties(java.util.Hashtable&lt;?,?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.DataBuffer.1 byte[] getData(java.awt.image.DataBufferByte, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.DataBuffer.1 int[] getData(java.awt.image.DataBufferInt, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.DataBuffer.1 short[] getData(java.awt.image.DataBufferUShort, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.DataBuffer.1 sun.java2d.StateTrackableDelegate getTrackable(java.awt.image.DataBuffer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.DataBuffer.1 void setTrackable(java.awt.image.DataBuffer, sun.java2d.StateTrackableDelegate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.DataBuffer DataBuffer(int, int, int, int[]) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.DataBuffer DataBuffer(sun.java2d.StateTrackable.State, int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.DataBuffer DataBuffer(sun.java2d.StateTrackable.State, int, int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.DataBuffer DataBuffer(sun.java2d.StateTrackable.State, int, int, int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.DataBuffer DataBuffer(sun.java2d.StateTrackable.State, int, int, int, int[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.DataBuffer DataBuffer(sun.java2d.StateTrackable.State, int, int, int, int[]) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.DataBufferByte DataBufferByte(byte[][], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.DataBufferByte DataBufferByte(byte[][], int, int[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.DataBufferByte DataBufferByte(byte[][], int, int[]) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.DataBufferDouble DataBufferDouble(double[][], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.DataBufferDouble DataBufferDouble(double[][], int, int[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.DataBufferDouble DataBufferDouble(double[][], int, int[]) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.DataBufferFloat DataBufferFloat(float[][], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.DataBufferFloat DataBufferFloat(float[][], int, int[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.DataBufferFloat DataBufferFloat(float[][], int, int[]) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.DataBufferInt DataBufferInt(int[][], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.DataBufferInt DataBufferInt(int[][], int, int[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.DataBufferInt DataBufferInt(int[][], int, int[]) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.DataBufferShort DataBufferShort(short[][], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.DataBufferShort DataBufferShort(short[][], int, int[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.DataBufferShort DataBufferShort(short[][], int, int[]) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.DataBufferUShort DataBufferUShort(short[], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.DataBufferUShort DataBufferUShort(short[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.DataBufferUShort DataBufferUShort(short[][], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.DataBufferUShort DataBufferUShort(short[][], int, int[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.DataBufferUShort DataBufferUShort(short[][], int, int[]) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.DirectColorModel DirectColorModel(java.awt.color.ColorSpace, int, int, int, int, int, boolean, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.DirectColorModel int getAlpha(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.DirectColorModel int getBlue(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.DirectColorModel int[] getComponents(java.lang.Object, int[], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.DirectColorModel int getGreen(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.DirectColorModel int getRGB(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.DirectColorModel int getRed(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.DirectColorModel boolean isCompatibleRaster(java.awt.image.Raster) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.FilteredImageSource void addConsumer(java.awt.image.ImageConsumer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.FilteredImageSource void startProduction(java.awt.image.ImageConsumer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ImageFilter void resendTopDownLeftRight(java.awt.image.ImageProducer) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ImageFilter void setProperties(java.util.Hashtable&lt;?,?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.IndexColorModel java.awt.image.BufferedImage convertToIntDiscrete(java.awt.image.Raster, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.IndexColorModel int[] getComponents(java.lang.Object, int[], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.IndexColorModel int getDataElement(int[], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.IndexColorModel java.lang.Object getDataElements(int[], int, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.IndexColorModel boolean isCompatibleRaster(java.awt.image.Raster) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Kernel Kernel(int, int, float[]) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.LookupOp void byteFilter(java.awt.image.ByteLookupTable, java.awt.image.Raster, java.awt.image.WritableRaster, int, int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.LookupOp java.awt.image.BufferedImage createCompatibleDestImage(java.awt.image.BufferedImage, java.awt.image.ColorModel) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.LookupOp java.awt.image.WritableRaster createCompatibleDestRaster(java.awt.image.Raster) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.LookupOp java.awt.image.BufferedImage filter(java.awt.image.BufferedImage, java.awt.image.BufferedImage) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.LookupOp java.awt.image.WritableRaster filter(java.awt.image.Raster, java.awt.image.WritableRaster) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.LookupOp java.awt.image.WritableRaster filter(java.awt.image.Raster, java.awt.image.WritableRaster) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.LookupOp java.awt.geom.Rectangle2D getBounds2D(java.awt.image.BufferedImage) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.LookupOp java.awt.geom.Rectangle2D getBounds2D(java.awt.image.Raster) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.LookupOp java.awt.geom.Point2D getPoint2D(java.awt.geom.Point2D, java.awt.geom.Point2D) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.LookupOp void shortFilter(java.awt.image.ShortLookupTable, java.awt.image.Raster, java.awt.image.WritableRaster, int, int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.MultiPixelPackedSampleModel int[] getPixel(int, int, int[], java.awt.image.DataBuffer) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.MultiPixelPackedSampleModel int getSample(int, int, int, java.awt.image.DataBuffer) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.MultiPixelPackedSampleModel void setDataElements(int, int, java.lang.Object, java.awt.image.DataBuffer) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.MultiPixelPackedSampleModel void setPixel(int, int, int[], java.awt.image.DataBuffer) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.MultiPixelPackedSampleModel void setPixel(int, int, int[], java.awt.image.DataBuffer) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.MultiPixelPackedSampleModel void setSample(int, int, int, int, java.awt.image.DataBuffer) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.PackedColorModel PackedColorModel(java.awt.color.ColorSpace, int, int, int, int, int, boolean, int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.PackedColorModel PackedColorModel(java.awt.color.ColorSpace, int, int[], int, boolean, int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.PackedColorModel PackedColorModel(java.awt.color.ColorSpace, int, int[], int, boolean, int, int) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.PackedColorModel int[] createBitsArray(int[], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.PixelGrabber PixelGrabber(java.awt.Image, int, int, int, int, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.PixelGrabber PixelGrabber(java.awt.Image, int, int, int, int, int[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.PixelInterleavedSampleModel PixelInterleavedSampleModel(int, int, int, int, int, int[]) 5'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.PixelInterleavedSampleModel java.awt.image.SampleModel createSubsetSampleModel(int[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.RGBImageFilter java.awt.image.IndexColorModel filterIndexColorModel(java.awt.image.IndexColorModel) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster Raster(java.awt.image.SampleModel, java.awt.Point) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster Raster(java.awt.image.SampleModel, java.awt.Point) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster Raster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Point) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster Raster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Point) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster Raster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Point) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster Raster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, java.awt.image.Raster) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster Raster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, java.awt.image.Raster) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster Raster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, java.awt.image.Raster) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster Raster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, java.awt.image.Raster) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster java.awt.image.WritableRaster createBandedRaster(int, int, int, int, int[], int[], java.awt.Point) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster java.awt.image.WritableRaster createBandedRaster(int, int, int, int, int[], int[], java.awt.Point) 5'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster java.awt.image.WritableRaster createBandedRaster(java.awt.image.DataBuffer, int, int, int, int[], int[], java.awt.Point) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster java.awt.image.WritableRaster createBandedRaster(java.awt.image.DataBuffer, int, int, int, int[], int[], java.awt.Point) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster java.awt.image.WritableRaster createBandedRaster(java.awt.image.DataBuffer, int, int, int, int[], int[], java.awt.Point) 5'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster java.awt.image.WritableRaster createCompatibleWritableRaster(java.awt.Rectangle) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster java.awt.image.WritableRaster createInterleavedRaster(int, int, int, int, int, int[], java.awt.Point) 5'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster java.awt.image.WritableRaster createInterleavedRaster(java.awt.image.DataBuffer, int, int, int, int, int[], java.awt.Point) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster java.awt.image.WritableRaster createInterleavedRaster(java.awt.image.DataBuffer, int, int, int, int, int[], java.awt.Point) 5'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster java.awt.image.WritableRaster createPackedRaster(int, int, int, int[], java.awt.Point) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster java.awt.image.WritableRaster createPackedRaster(java.awt.image.DataBuffer, int, int, int, java.awt.Point) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster java.awt.image.WritableRaster createPackedRaster(java.awt.image.DataBuffer, int, int, int, int[], java.awt.Point) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster java.awt.image.WritableRaster createPackedRaster(java.awt.image.DataBuffer, int, int, int, int[], java.awt.Point) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster java.awt.image.Raster createRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Point) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster java.awt.image.Raster createRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Point) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster java.awt.image.WritableRaster createWritableRaster(java.awt.image.SampleModel, java.awt.Point) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster java.awt.image.WritableRaster createWritableRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Point) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.Raster java.awt.image.WritableRaster createWritableRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Point) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ReplicateScaleFilter void setProperties(java.util.Hashtable&lt;?,?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.RescaleOp RescaleOp(float[], float[], java.awt.RenderingHints) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.RescaleOp RescaleOp(float[], float[], java.awt.RenderingHints) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.RescaleOp boolean canUseLookup(java.awt.image.Raster, java.awt.image.Raster) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.RescaleOp java.awt.image.ByteLookupTable createByteLut(float[], float[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.RescaleOp java.awt.image.BufferedImage createCompatibleDestImage(java.awt.image.BufferedImage, java.awt.image.ColorModel) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.RescaleOp java.awt.image.WritableRaster createCompatibleDestRaster(java.awt.image.Raster) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.RescaleOp java.awt.image.ShortLookupTable createShortLut(float[], float[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.RescaleOp java.awt.image.BufferedImage filter(java.awt.image.BufferedImage, java.awt.image.BufferedImage) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.RescaleOp java.awt.image.WritableRaster filter(java.awt.image.Raster, java.awt.image.WritableRaster) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.RescaleOp java.awt.geom.Rectangle2D getBounds2D(java.awt.image.BufferedImage) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.RescaleOp java.awt.geom.Rectangle2D getBounds2D(java.awt.image.Raster) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.RescaleOp java.awt.geom.Point2D getPoint2D(java.awt.geom.Point2D, java.awt.geom.Point2D) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ShortLookupTable ShortLookupTable(int, short[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ShortLookupTable ShortLookupTable(int, short[][]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ShortLookupTable int[] lookupPixel(int[], int[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.ShortLookupTable short[] lookupPixel(short[], short[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.SinglePixelPackedSampleModel SinglePixelPackedSampleModel(int, int, int, int, int[]) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.SinglePixelPackedSampleModel SinglePixelPackedSampleModel(int, int, int, int[]) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.SinglePixelPackedSampleModel java.awt.image.SampleModel createSubsetSampleModel(int[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.SinglePixelPackedSampleModel int[] getPixel(int, int, int[], java.awt.image.DataBuffer) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.SinglePixelPackedSampleModel int getSample(int, int, int, java.awt.image.DataBuffer) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.SinglePixelPackedSampleModel void setPixel(int, int, int[], java.awt.image.DataBuffer) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.SinglePixelPackedSampleModel void setSample(int, int, int, int, java.awt.image.DataBuffer) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.WritableRaster WritableRaster(java.awt.image.SampleModel, java.awt.Point) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.WritableRaster WritableRaster(java.awt.image.SampleModel, java.awt.Point) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.WritableRaster WritableRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Point) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.WritableRaster WritableRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Point) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.WritableRaster WritableRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Point) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.WritableRaster WritableRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, java.awt.image.WritableRaster) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.WritableRaster WritableRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, java.awt.image.WritableRaster) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.WritableRaster WritableRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, java.awt.image.WritableRaster) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.WritableRaster WritableRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, java.awt.image.WritableRaster) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.WritableRaster void setDataElements(int, int, java.awt.image.Raster) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.WritableRaster void setRect(int, int, java.awt.image.Raster) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.awt.image.WritableRaster void setRect(java.awt.image.Raster) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
