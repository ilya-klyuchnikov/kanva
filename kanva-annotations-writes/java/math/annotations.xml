<root>
    <item name='java.math.BigDecimal.LongOverflow void check(java.math.BigDecimal) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal BigDecimal(double, java.math.MathContext) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal BigDecimal(int, java.math.MathContext) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal BigDecimal(long, java.math.MathContext) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal BigDecimal(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal BigDecimal(java.lang.String, java.math.MathContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal BigDecimal(java.lang.String, java.math.MathContext) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal BigDecimal(java.math.BigInteger) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal BigDecimal(java.math.BigInteger, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal BigDecimal(java.math.BigInteger, int, java.math.MathContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal BigDecimal(java.math.BigInteger, int, java.math.MathContext) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal BigDecimal(java.math.BigInteger, java.math.MathContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal BigDecimal(java.math.BigInteger, java.math.MathContext) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal BigDecimal(char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal BigDecimal(char[], int, int, java.math.MathContext) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal BigDecimal(char[], java.math.MathContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal BigDecimal(char[], java.math.MathContext) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal java.math.BigDecimal abs(java.math.MathContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal java.math.BigInteger access$000(java.math.BigDecimal) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal java.math.BigInteger access$100(java.math.BigDecimal) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal java.math.BigDecimal add(java.math.BigDecimal) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal java.math.BigDecimal add(java.math.BigDecimal, java.math.MathContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal java.math.BigDecimal add(java.math.BigDecimal, java.math.MathContext) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal int bigDigitLength(java.math.BigInteger) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal long compactValFor(java.math.BigInteger) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal int compareMagnitude(java.math.BigDecimal) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal int compareTo(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal int compareTo(java.math.BigDecimal) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal java.math.BigDecimal divide(java.math.BigDecimal) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal java.math.BigDecimal divide(java.math.BigDecimal, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal java.math.BigDecimal divide(java.math.BigDecimal, int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal java.math.BigDecimal divide(java.math.BigDecimal, int, java.math.RoundingMode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal java.math.BigDecimal divide(java.math.BigDecimal, int, java.math.RoundingMode) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal java.math.BigDecimal divide(java.math.BigDecimal, java.math.MathContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal java.math.BigDecimal divide(java.math.BigDecimal, java.math.MathContext) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal java.math.BigDecimal divide(java.math.BigDecimal, java.math.RoundingMode) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal java.math.BigDecimal divide(java.math.BigDecimal, java.math.RoundingMode) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal java.math.BigDecimal[] divideAndRemainder(java.math.BigDecimal) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal java.math.BigDecimal[] divideAndRemainder(java.math.BigDecimal, java.math.MathContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal java.math.BigDecimal[] divideAndRemainder(java.math.BigDecimal, java.math.MathContext) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal java.math.BigDecimal divideToIntegralValue(java.math.BigDecimal) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal java.math.BigDecimal divideToIntegralValue(java.math.BigDecimal, java.math.MathContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal java.math.BigDecimal divideToIntegralValue(java.math.BigDecimal, java.math.MathContext) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal java.math.BigDecimal doRound(java.math.BigDecimal, java.math.MathContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal java.math.BigDecimal doRound(java.math.BigDecimal, java.math.MathContext) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal java.lang.String getValueString(int, java.lang.String, int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal void matchScale(java.math.BigDecimal[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal java.math.BigDecimal max(java.math.BigDecimal) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal java.math.BigDecimal min(java.math.BigDecimal) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal java.math.BigDecimal multiply(java.math.BigDecimal) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal java.math.BigDecimal multiply(java.math.BigDecimal, java.math.MathContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal java.math.BigDecimal multiply(java.math.BigDecimal, java.math.MathContext) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal java.math.BigDecimal negate(java.math.MathContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal java.math.BigDecimal plus(java.math.MathContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal java.math.BigDecimal pow(int, java.math.MathContext) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal java.math.BigDecimal[] preAlign(java.math.BigDecimal, java.math.BigDecimal, long, java.math.MathContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal java.math.BigDecimal[] preAlign(java.math.BigDecimal, java.math.BigDecimal, long, java.math.MathContext) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal java.math.BigDecimal[] preAlign(java.math.BigDecimal, java.math.BigDecimal, long, java.math.MathContext) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal void print(java.lang.String, java.math.BigDecimal) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal void readObject(java.io.ObjectInputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal java.math.BigDecimal remainder(java.math.BigDecimal) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal java.math.BigDecimal remainder(java.math.BigDecimal, java.math.MathContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal java.math.BigDecimal remainder(java.math.BigDecimal, java.math.MathContext) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal java.math.BigDecimal round(java.math.MathContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal java.math.BigDecimal roundOp(java.math.MathContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal void roundThis(java.math.MathContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal java.math.BigDecimal setScale(int, java.math.RoundingMode) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal java.math.BigDecimal subtract(java.math.BigDecimal) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal java.math.BigDecimal subtract(java.math.BigDecimal, java.math.MathContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal java.math.BigDecimal subtract(java.math.BigDecimal, java.math.MathContext) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigDecimal void writeObject(java.io.ObjectOutputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger BigInteger(int, byte[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger BigInteger(int, int[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger BigInteger(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger BigInteger(java.lang.String, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger BigInteger(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger BigInteger(byte[], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger BigInteger(char[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger BigInteger(int[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger BigInteger(int[], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger java.math.BigInteger add(java.math.BigInteger) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger int[] add(int[], int[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger int[] add(int[], int[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger int addOne(int[], int, int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger java.math.BigInteger and(java.math.BigInteger) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger java.math.BigInteger andNot(java.math.BigInteger) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger int compareMagnitude(java.math.BigInteger) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger int compareTo(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger int compareTo(java.math.BigInteger) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger void destructiveMulAdd(int[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger java.math.BigInteger divide(java.math.BigInteger) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger java.math.BigInteger[] divideAndRemainder(java.math.BigInteger) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger java.math.BigInteger gcd(java.math.BigInteger) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger int[] javaIncrement(int[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger int[] leftShift(int[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger java.math.BigInteger lucasLehmerSequence(int, java.math.BigInteger, java.math.BigInteger) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger int[] makePositive(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger int[] makePositive(int[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger java.math.BigInteger max(java.math.BigInteger) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger java.math.BigInteger min(java.math.BigInteger) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger java.math.BigInteger mod(java.math.BigInteger) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger java.math.BigInteger modInverse(java.math.BigInteger) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger java.math.BigInteger modPow(java.math.BigInteger, java.math.BigInteger) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger java.math.BigInteger modPow(java.math.BigInteger, java.math.BigInteger) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger java.math.BigInteger modPow2(java.math.BigInteger, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger int[] montReduce(int[], int[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger int mulAdd(int[], int[], int, int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger java.math.BigInteger multiply(java.math.BigInteger) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger java.math.BigInteger oddModPow(java.math.BigInteger, java.math.BigInteger) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger java.math.BigInteger or(java.math.BigInteger) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger int parseInt(char[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger void primitiveRightShift(int[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger void readObject(java.io.ObjectInputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger java.math.BigInteger remainder(java.math.BigInteger) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger int[] squareToLen(int[], int, int[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger int[] stripLeadingZeroBytes(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger int[] stripLeadingZeroInts(int[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger java.math.BigInteger subtract(java.math.BigInteger) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger int[] subtract(int[], int[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger int[] subtract(int[], int[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger int[] trustedStripLeadingZeroInts(int[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger java.math.BigInteger valueOf(int[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger void writeObject(java.io.ObjectOutputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BigInteger java.math.BigInteger xor(java.math.BigInteger) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.BitSieve BitSieve(java.math.BigInteger, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.MathContext MathContext(int, java.math.RoundingMode) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.MathContext MathContext(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.MathContext void readObject(java.io.ObjectInputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.MutableBigInteger MutableBigInteger(java.math.BigInteger) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.MutableBigInteger MutableBigInteger(java.math.MutableBigInteger) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.MutableBigInteger MutableBigInteger(int[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.MutableBigInteger void add(java.math.MutableBigInteger) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.MutableBigInteger java.math.MutableBigInteger binaryGCD(java.math.MutableBigInteger) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.MutableBigInteger int compare(java.math.MutableBigInteger) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.MutableBigInteger int compareHalf(java.math.MutableBigInteger) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.MutableBigInteger void copyValue(java.math.MutableBigInteger) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.MutableBigInteger void copyValue(int[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.MutableBigInteger int difference(java.math.MutableBigInteger) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.MutableBigInteger void divWord(int[], long, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.MutableBigInteger int divadd(int[], int[], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.MutableBigInteger long divide(long, java.math.MutableBigInteger) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.MutableBigInteger java.math.MutableBigInteger divide(java.math.MutableBigInteger, java.math.MutableBigInteger) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.MutableBigInteger java.math.MutableBigInteger divide(java.math.MutableBigInteger, java.math.MutableBigInteger) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.MutableBigInteger java.math.MutableBigInteger divideMagnitude(int[], java.math.MutableBigInteger) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.MutableBigInteger java.math.MutableBigInteger divideMagnitude(int[], java.math.MutableBigInteger) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.MutableBigInteger int divideOneWord(int, java.math.MutableBigInteger) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.MutableBigInteger java.math.MutableBigInteger fixup(java.math.MutableBigInteger, java.math.MutableBigInteger, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.MutableBigInteger java.math.MutableBigInteger fixup(java.math.MutableBigInteger, java.math.MutableBigInteger, int) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.MutableBigInteger java.math.MutableBigInteger hybridGCD(java.math.MutableBigInteger) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.MutableBigInteger java.math.MutableBigInteger modInverse(java.math.MutableBigInteger) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.MutableBigInteger java.math.MutableBigInteger modInverseBP2(java.math.MutableBigInteger, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.MutableBigInteger void mul(int, java.math.MutableBigInteger) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.MutableBigInteger void multiply(java.math.MutableBigInteger, java.math.MutableBigInteger) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.MutableBigInteger void multiply(java.math.MutableBigInteger, java.math.MutableBigInteger) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.MutableBigInteger java.math.MutableBigInteger mutableModInverse(java.math.MutableBigInteger) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.MutableBigInteger int subtract(java.math.MutableBigInteger) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.SignedMutableBigInteger SignedMutableBigInteger(java.math.MutableBigInteger) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.SignedMutableBigInteger void signedAdd(java.math.MutableBigInteger) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.SignedMutableBigInteger void signedAdd(java.math.SignedMutableBigInteger) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.SignedMutableBigInteger void signedSubtract(java.math.MutableBigInteger) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.math.SignedMutableBigInteger void signedSubtract(java.math.SignedMutableBigInteger) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
