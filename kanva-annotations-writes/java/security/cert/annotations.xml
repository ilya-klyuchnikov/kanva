<root>
    <item name='java.security.cert.CertPathBuilder java.security.cert.CertPathBuilder getInstance(java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.CertPathBuilder java.security.cert.CertPathBuilder getInstance(java.lang.String, java.security.Provider) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.CertPathHelperImpl void implSetDateAndTime(java.security.cert.X509CRLSelector, java.util.Date, long) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.CertPathHelperImpl void implSetPathToNames(java.security.cert.X509CertSelector, java.util.Set&lt;sun.security.x509.GeneralNameInterface&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.CertPathValidator java.security.cert.CertPathValidator getInstance(java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.CertPathValidator java.security.cert.CertPathValidator getInstance(java.lang.String, java.security.Provider) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.CertPathValidatorException CertPathValidatorException(java.lang.String, java.lang.Throwable, java.security.cert.CertPath, int, java.security.cert.CertPathValidatorException.Reason) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.CertPathValidatorException void readObject(java.io.ObjectInputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.CertStore java.security.cert.CertStore getInstance(java.lang.String, java.security.cert.CertStoreParameters, java.lang.String) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.CertStore java.security.cert.CertStore getInstance(java.lang.String, java.security.cert.CertStoreParameters, java.security.Provider) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.CertificateFactory java.security.cert.CertificateFactory getInstance(java.lang.String, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.CertificateFactory java.security.cert.CertificateFactory getInstance(java.lang.String, java.security.Provider) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.CertificateRevokedException CertificateRevokedException(java.util.Date, java.security.cert.CRLReason, javax.security.auth.x500.X500Principal, java.util.Map&lt;java.lang.String,java.security.cert.Extension&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.CertificateRevokedException CertificateRevokedException(java.util.Date, java.security.cert.CRLReason, javax.security.auth.x500.X500Principal, java.util.Map&lt;java.lang.String,java.security.cert.Extension&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.CertificateRevokedException CertificateRevokedException(java.util.Date, java.security.cert.CRLReason, javax.security.auth.x500.X500Principal, java.util.Map&lt;java.lang.String,java.security.cert.Extension&gt;) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.CertificateRevokedException CertificateRevokedException(java.util.Date, java.security.cert.CRLReason, javax.security.auth.x500.X500Principal, java.util.Map&lt;java.lang.String,java.security.cert.Extension&gt;) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.CertificateRevokedException void readObject(java.io.ObjectInputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.CertificateRevokedException void writeObject(java.io.ObjectOutputStream) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.CollectionCertStoreParameters CollectionCertStoreParameters(java.util.Collection&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.LDAPCertStoreParameters LDAPCertStoreParameters(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.LDAPCertStoreParameters LDAPCertStoreParameters(java.lang.String, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.PKIXBuilderParameters PKIXBuilderParameters(java.security.KeyStore, java.security.cert.CertSelector) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.PKIXBuilderParameters PKIXBuilderParameters(java.util.Set&lt;java.security.cert.TrustAnchor&gt;, java.security.cert.CertSelector) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.PKIXCertPathBuilderResult PKIXCertPathBuilderResult(java.security.cert.CertPath, java.security.cert.TrustAnchor, java.security.cert.PolicyNode, java.security.PublicKey) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.PKIXCertPathBuilderResult PKIXCertPathBuilderResult(java.security.cert.CertPath, java.security.cert.TrustAnchor, java.security.cert.PolicyNode, java.security.PublicKey) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.PKIXCertPathBuilderResult PKIXCertPathBuilderResult(java.security.cert.CertPath, java.security.cert.TrustAnchor, java.security.cert.PolicyNode, java.security.PublicKey) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.PKIXCertPathValidatorResult PKIXCertPathValidatorResult(java.security.cert.TrustAnchor, java.security.cert.PolicyNode, java.security.PublicKey) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.PKIXCertPathValidatorResult PKIXCertPathValidatorResult(java.security.cert.TrustAnchor, java.security.cert.PolicyNode, java.security.PublicKey) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.PKIXParameters PKIXParameters(java.security.KeyStore) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.PKIXParameters PKIXParameters(java.util.Set&lt;java.security.cert.TrustAnchor&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.PKIXParameters void setTrustAnchors(java.util.Set&lt;java.security.cert.TrustAnchor&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.PolicyQualifierInfo PolicyQualifierInfo(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.TrustAnchor TrustAnchor(java.lang.String, java.security.PublicKey, byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.TrustAnchor TrustAnchor(java.lang.String, java.security.PublicKey, byte[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.TrustAnchor TrustAnchor(java.security.cert.X509Certificate, byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.TrustAnchor TrustAnchor(javax.security.auth.x500.X500Principal, java.security.PublicKey, byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.TrustAnchor TrustAnchor(javax.security.auth.x500.X500Principal, java.security.PublicKey, byte[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.X509CRL java.security.cert.X509CRLEntry getRevokedCertificate(java.security.cert.X509Certificate) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.X509CRLSelector void addIssuer(javax.security.auth.x500.X500Principal) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.X509CRLSelector void addIssuerName(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.X509CRLSelector java.util.HashSet&lt;java.lang.Object&gt; cloneAndCheckIssuerNames(java.util.Collection&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.X509CRLSelector java.util.HashSet&lt;java.lang.Object&gt; cloneIssuerNames(java.util.Collection&lt;java.lang.Object&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.X509CRLSelector java.util.HashSet&lt;javax.security.auth.x500.X500Principal&gt; parseIssuerNames(java.util.Collection&lt;java.lang.Object&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.X509CertSelector void addPathToName(int, byte[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.X509CertSelector void addSubjectAlternativeName(int, byte[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.X509CertSelector java.util.Set&lt;java.util.List&lt;?&gt;&gt; cloneAndCheckNames(java.util.Collection&lt;java.util.List&lt;?&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.X509CertSelector java.util.Set&lt;java.util.List&lt;?&gt;&gt; cloneNames(java.util.Collection&lt;java.util.List&lt;?&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.X509CertSelector java.util.Set&lt;?&gt; cloneSet(java.util.Set&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.X509CertSelector java.lang.String keyUsageToString(boolean[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.X509CertSelector boolean matchExcluded(sun.security.x509.GeneralSubtrees) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='java.security.cert.X509CertSelector java.util.Set&lt;sun.security.x509.GeneralNameInterface&gt; parseNames(java.util.Collection&lt;java.util.List&lt;?&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
